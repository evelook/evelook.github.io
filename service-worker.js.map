{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","service/EsiClient/EsiClient.ts","service/EsiErrorManager/EsiErrorManager.ts","service/QueryFactory/Query.ts","service/QueryFactory/QueryFactory.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","error/EsiError/EsiError.ts","service/Call/StatusCall/StatusCall.ts","service/Call/UniverseNamesCall/UniverseNamesCall.ts","service/Call/AllianceListCall/AllianceListCall.ts","service/Call/AllianceInfoCall/AllianceInfoCall.ts","repository/NameRepository/NameRepository.ts","service/Call/AllianceCorporationsCall/AllianceCorporationsCall.ts","service/Call/PublicSearchCall/PublicSearchCall.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","repository/AllianceRepository/AllianceRepository.ts","service/Call/PublicSearchCall/EsiCategory.ts","repository/SearchRepository/SearchRepository.ts","service/Call/CharacterInfoCall/CharacterInfoCall.ts","service/Call/ConstellationInfoCall/ConstellationInfoCall.ts","service/Call/CorporationInfoCall/CorporationInfoCall.ts","service/Call/TypeInfoCall/TypeInfoCall.ts","service/Call/RegionInfoCall/RegionInfoCall.ts","service/Call/SystemInfoCall/SystemInfoCall.ts","service/Call/StationInfoCall/StationInfoCall.ts","service/Call/FactionCall/FactionCall.ts","service/Call/AncestryCall/AncestryCall.ts","service/Call/BloodlineCall/BloodlineCall.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","repository/AncestryRepository/AncestryRepository.ts","repository/AbstractRepository/AbstractRepository.ts","repository/BloodlineRepository/BloodlineRepository.ts","repository/CharacterRepository/CharacterRepository.ts","service/Call/RaceCall/RaceCall.ts","repository/RaceRepository/RaceRepository.ts","service/Call/CharacterCorpHistoryCall/CharacterCorpHistoryCall.ts","service/DateFormatter/DateFormatter.ts","service/Call/CorporationAllianceHistoryCall/CorporationAllianceHistoryCall.ts","repository/CorporationRepository/CorporationRepository.ts","repository/FactionRepository/FactionRepository.ts","repository/RSSRepository/RSSRepository.ts","repository/StatusRepository/StatusRepository.ts","service/EntityManager/EntityManager.ts","service/EntityManager/Migration/MarketOrdersMigration.ts","service/EntityManager/Migration/SettingsMigration.ts","service/EntityManager/Table/SettingsTable.ts","service/EntityManager/Table/BaseTable.ts","service/EntityManager/Store/SettingsStoreInterface.ts","repository/SettingsRepository/SettingsRepository.ts","service/EsiProxy/EsiProxy.ts","service/PathGenerator/PathGenerator.ts","service/Imager/Imager.ts","service/Container/Container.ts","service-worker.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","runtime","undefined","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","EsiClient","fetchClient","esiErrorManager","baseUrl","_userAgent","_fetchClient","_esiErrorManager","endUrl","query","body","isErrorWindowBroken","headers","options","cache","uri","isEmpty","concat","JSON","stringify","response","saveErrorWindowInfo","ok","status","flagWindowAsBroken","incrementError","EsiErrorManager","_errorReset","Date","now","_errorRemain","_resetErrorWindow","limitReset","limitRemain","headerErrorReset","Number","headerErrorRemain","Query","spaceDelimiter","_spaceDelimiter","_query","attribute","queryString","index","encodeURIComponent","QueryFactory","_setPrototypeOf","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","e","_typeof","_possibleConstructorReturn","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","Parent","Class","a","_cache","Map","indexOf","has","set","Wrapper","EsiError","statusText","StatusCall","esiClient","_esiClient","_url","getResponse","json","UniverseNamesCall","ids","AllianceListCall","AllianceInfoCall","id","_getUrl","NameRepository","universeNamesCaller","_universeNamesCaller","_removeBannedIDs","allResolvedIDs","failuresCount","maxAllowedFailures","chunks","splice","chunk","localResolvedIDs","Math","round","AllianceCorporationsCall","PublicSearchCall","queryFactory","_queryFactory","searchString","categories","strict","make","add","String","_defineProperty","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","source","getOwnPropertyDescriptors","defineProperties","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","minLen","from","test","_slicedToArray","isArray","_arr","_n","_d","_e","_s","_i","AllianceRepository","allianceListCall","allianceInfoCall","allianceCorpsCall","nameRepo","_allianceListCall","_allianceInfoCall","_allianceCorpsCall","_nameRepo","all","esiAlliance","esiAllianceCorps","repoAlliance","creator_corporation_name","creator_name","executor_corporation_name","faction_name","corporations","creator_corporation_id","creator_id","executor_corporation_id","faction_id","idsToResolve","_pushUnique","resolveGeneric","allianceNames","corpsNames","resolvedName","corpName","allianceIDs","names","resolvedIDs","includes","category","inputArray","esiCategories","SearchRepository","publicSearchCall","pathGenerator","_publicSearchCall","_pathGenerator","categoriesForCall","search","entries","_composeResult","cacheRef","current","uniNames","justNames","lowercaseSearchString","toLowerCase","uniName","startsWith","orderedNames","sort","b","prettyCategory","link","allianceInfo","characterInfo","corporationInfo","factionInfo","CharacterInfoCall","ConstellationInfoCall","CorporationInfoCall","TypeInfoCall","RegionInfoCall","SystemInfoCall","StationInfoCall","FactionCall","AncestryCall","BloodlineCall","_createForOfIteratorHelper","allowArrayLike","it","F","f","normalCompletion","didErr","step","_e2","AncestryRepository","ancestryCall","_ancestryCall","ancestries","foundAncestry","ancestry","AbstractRepository","BloodlineRepository","bloodlineCall","raceRepo","_bloodlineCall","_raceRepo","_getEsiBloodline","foundBloodline","race_id","corporation_id","ship_type_id","raceNamePromise","getName","_getIDsToResolve","indexedNames","_orderNamesByID","ship_type_name","corporation_name","race_name","bloodlines","bloodline","bloodline_id","CharacterRepository","characterInfoCall","characterCorpHistoryCall","ancestryRepo","bloodlineRepo","_characterInfoCall","_characterCorpHistoryCall","_ancestryRepo","_bloodlineRepo","_getCorpHistory","esiChar","repoCorpHistory","repoChar","alliance_name","alliance_id","ancestry_name","ancestry_id","bloodline_name","corporation_history","ancestryPromise","bloodlinePromise","namesPromise","racePromise","corpHistory","corp","is_deleted","foundName","RaceCall","RaceRepository","raceCall","factionRepo","_raceCall","_factionRepo","esiRaces","repoRaces","esiRace","repoRace","_getEsiRace","foundRace","races","race","CharacterCorpHistoryCall","DateFormatter","date","yyyy","getUTCFullYear","mm","toStringWithLeadingZero","getUTCMonth","dd","getUTCDate","hr","getUTCHours","min","getUTCMinutes","sec","getUTCSeconds","CorporationAllianceHistoryCall","CorporationRepository","corpInfoCall","corpAllianceHistoryCall","_corpInfoCall","_corpAllianceHistoryCall","getAllianceHistory","esiCorp","allianceHistory","repoCorp","ceo_name","home_station_name","alliance_history","ceo_id","home_station_id","recordIDs","indexedCorpHistory","allianceNamePlaceholder","record_id","end_date","historyToReturn","start_date","unshift","FactionRepository","factionCall","_factionCall","esiFactions","repoFactions","esiFaction","_assembleRepoFaction","_getEsiFaction","foundFaction","factions","faction","militia_corporation_id","solar_system_id","militia_corporation_name","solar_system_name","RSSRepository","_fetch","url","fetch","StatusRepository","statusCall","_statusCall","players","EntityManager","migrations","_migrations","versions","dbReq","indexedDB","open","onupgradeneeded","event","version","oldVersion","migration","run","onsuccess","onblocked","onerror","message","code","MarketOrdersMigration","db","createObjectStore","keyPath","autoIncrement","createIndex","SettingsMigration","SettingsTable","em","_em","addMany","items","_getReadwriteTransaction","transaction","store","_getObjectStore","item","oncomplete","_getErrorMessage","clear","_getReadonlyTransaction","request","count","delete","_get","keyRange","getAll","putMany","put","getConnection","connection","objectStore","KEY_DARK_MODE","SettingsRepository","settingsTable","_settingsTable","getOne","putOne","EsiProxy","Response","PathGenerator","base","allianceList","ancestryInfo","bloodlineInfo","constellationInfo","home","raceInfo","regionInfo","systemInfo","stationInfo","typeInfo","_idPlaceholder","replace","Imager","_baseUrl","size","_getQuery","Container","_esi","_esiProxy","_imager","input","init","esi","allianceCorporationsCall","nameRepository","raceRepository","ancestryRepository","bloodlineRepository","corporationInfoCall","corporationAllianceHistoryCall","universeNamesCall","factionRepository","entityManager","__WB_MANIFEST","esiProxy","addEventListener","waitUntil","console","log","respondWith"],"mappings":"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","file":"service-worker.js","sourceRoot":"","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import EsiClientInterface from \"./EsiClientInterface\";\nimport EsiErrorManagerInterface from \"../EsiErrorManager/EsiErrorManagerInterface\";\nimport Query from \"../QueryFactory/Query\";\n\nclass EsiClient implements EsiClientInterface {\n  public readonly baseUrl = \"https://esi.evetech.net\";\n  private readonly _userAgent = \"evelook\";\n  private readonly _fetchClient;\n  private readonly _esiErrorManager;\n\n  constructor(\n    fetchClient: (\n      input: RequestInfo,\n      init?: RequestInit\n    ) => Promise<Response>,\n    esiErrorManager: EsiErrorManagerInterface\n  ) {\n    this._fetchClient = fetchClient;\n    this._esiErrorManager = esiErrorManager;\n  }\n\n  /**\n   * @throws Error On network error or broken error window.\n   */\n  public async getResponse(\n    endUrl: string,\n    method: \"GET\" | \"POST\" | \"DELETE\" | \"PUT\",\n    query: Query | null = null,\n    body: object | null = null\n  ): Promise<Response> {\n    if (this._esiErrorManager.isErrorWindowBroken()) {\n      throw new Error(\"Aborting, too many errors.\");\n    }\n\n    let headers = {\n      \"X-User-Agent\": this._userAgent,\n    };\n\n    let options: RequestInit = {\n      method: method,\n      cache: \"default\",\n      headers: headers\n    };\n\n    let uri = `${this.baseUrl}${endUrl}`;\n    if (query !== null && !query.isEmpty()) {\n      uri = uri.concat(`?${query.toString()}`);\n    }\n\n    if (body !== null) {\n      options[\"body\"] = JSON.stringify(body);\n    }\n\n    let response = await this._fetchClient(uri, options);\n    this._esiErrorManager.saveErrorWindowInfo(response.headers);\n    if (!response.ok) {\n      if (response.status === 420) {  // We are error limited\n        this._esiErrorManager.flagWindowAsBroken();\n      } else {\n        this._esiErrorManager.incrementError();\n      }\n    }\n\n    return response;\n  }\n}\n\nexport default EsiClient;\n","import EsiErrorManagerInterface from \"./EsiErrorManagerInterface\";\n\nclass EsiErrorManager implements EsiErrorManagerInterface {\n  private _errorReset = Date.now() + 60000;\n  private _errorRemain = 100;\n\n  public isErrorWindowBroken(): boolean {\n    if (this._errorReset < Date.now()) {\n      this._resetErrorWindow();\n    }\n\n    return this._errorRemain <= 1;\n  }\n\n  public incrementError(): void {\n    this._errorRemain--;\n  }\n\n  public saveErrorWindowInfo(headers: Headers): void {\n    let limitReset = headers.get(\"x-esi-error-limit-reset\");\n    let limitRemain = headers.get(\"x-esi-error-limit-remain\");\n    if (limitReset === null || limitRemain === null) {\n      return;\n    }\n\n    let headerErrorReset = Number(limitReset);\n    let headerErrorRemain = Number(limitRemain);\n\n    this._errorReset = Date.now() + (headerErrorReset * 1000);\n    if (headerErrorRemain < this._errorRemain) {\n      this._errorRemain = headerErrorRemain;\n    }\n  }\n\n  public flagWindowAsBroken(): void {\n    this._errorRemain = 0;\n  }\n\n  private _resetErrorWindow(): void {\n    this._errorReset = Date.now() + 60000;\n    this._errorRemain = 100;\n  }\n}\n\nexport default EsiErrorManager;\n","import QueryDictionaryInterface from \"./QueryDictionaryInterface\";\n\nclass Query  {\n  private readonly _spaceDelimiter;\n  private _query: QueryDictionaryInterface = {};\n\n  constructor(spaceDelimiter: string = \",\") {\n    this._spaceDelimiter = spaceDelimiter;\n  }\n\n  add(attribute: string, values: string[]): void {\n    this._query[attribute] = values;\n  }\n\n  isEmpty(): boolean {\n    return Object.keys(this._query).length === 0;\n  }\n\n  toString(): string {\n    let queryString = \"\";\n\n    for (let attribute in this._query) {\n      if (!this._query.hasOwnProperty(attribute)) {\n        continue;\n      }\n\n      if (queryString.length > 0) {\n        queryString = queryString.concat(\"&\");\n      }\n\n      let values = \"\";\n      this._query[attribute].forEach((value, index) => {\n        if (index > 0) {\n          values = values.concat(this._spaceDelimiter);\n        }\n\n        values = values.concat(encodeURIComponent(value));\n      });\n\n      queryString = queryString.concat(`${attribute}=${values}`);\n    }\n\n    return queryString;\n  }\n}\n\nexport default Query;\n","import Query from \"./Query\";\n\nclass QueryFactory {\n  public make(): Query {\n    return new Query();\n  }\n}\n\nexport default QueryFactory;\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nimport isNativeFunction from \"@babel/runtime/helpers/esm/isNativeFunction\";\nimport construct from \"@babel/runtime/helpers/esm/construct\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","class EsiError extends Error {\n  constructor(response: Response) {\n    super(`Esi error code ${response.status}: ${response.statusText}`);\n  }\n}\n\nexport default EsiError;\n","import EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiStatusInterface from \"./EsiStatusInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\nimport StatusCallInterface from \"./StatusCallInterface\";\n\nclass StatusCall implements StatusCallInterface{\n  private readonly _esiClient;\n  private readonly _url = \"/v2/status/\";\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  async get(): Promise<EsiStatusInterface> {\n    let response = await this._esiClient.getResponse(this._url, \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n}\n\nexport default StatusCall;\n","import UniverseNamesCallInterface from \"./UniverseNamesCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\nimport EsiUniverseNamesInterface from \"./EsiUniverseNamesInterface\";\n\nclass UniverseNamesCall implements UniverseNamesCallInterface {\n  private readonly _esiClient;\n  private readonly _url = \"/v3/universe/names/\";\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  async get(ids: number[]): Promise<EsiUniverseNamesInterface[]> {\n    let response = await this._esiClient.getResponse(\n      this._url,\n      \"POST\",\n      null,\n      ids\n    );\n\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n}\n\nexport default UniverseNamesCall;\n","import AllianceListCallInterface from \"./AllianceListCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass AllianceListCall implements AllianceListCallInterface {\n  private readonly _esiClient;\n  private readonly _url = \"/v2/alliances/\";\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  async get(): Promise<number[]> {\n    let response = await this._esiClient.getResponse(this._url, \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n}\n\nexport default AllianceListCall;\n","import AllianceInfoCallInterface from \"./AllianceInfoCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\nimport EsiAllianceInfoInterface from \"./EsiAllianceInfoInterface\";\n\nclass AllianceInfoCall implements AllianceInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  async get(id: number): Promise<EsiAllianceInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v4/alliances/${id}/`;\n  }\n}\n\nexport default AllianceInfoCall;\n","import NameRepositoryInterface from \"./NameRepositoryInterface\";\nimport UniverseNamesCallInterface from \"../../service/Call/UniverseNamesCall/UniverseNamesCallInterface\";\nimport EsiUniverseNamesInterface from \"../../service/Call/UniverseNamesCall/EsiUniverseNamesInterface\";\n\nclass NameRepository implements NameRepositoryInterface {\n  private readonly _universeNamesCaller;\n\n  constructor(universeNamesCaller: UniverseNamesCallInterface) {\n    this._universeNamesCaller = universeNamesCaller;\n  }\n\n  public async resolveGeneric(ids: number[]): Promise<EsiUniverseNamesInterface[]> {\n    this._removeBannedIDs(ids);\n\n    let allResolvedIDs: EsiUniverseNamesInterface[] = [];\n    let failuresCount = 0;\n    let maxAllowedFailures = 20;\n\n    let chunks: number[][] = [];\n    while (ids.length > 0) {\n      chunks.push(ids.splice(0, 999));\n    }\n\n    for (let chunk of chunks) {\n      if (failuresCount >= maxAllowedFailures) {\n        throw new Error(\"\");  // TODO\n      }\n\n      try {\n        let localResolvedIDs = await this._universeNamesCaller.get(chunk);\n        allResolvedIDs = allResolvedIDs.concat(localResolvedIDs);\n      } catch (e) {\n        failuresCount++;\n\n        if (chunk.length > 1) {\n          // We split the chunk in half for retries\n          chunks.push(chunk.splice(0, Math.round(chunk.length / 2)));\n          chunks.push(chunk);\n        }\n      }\n    }\n\n    return allResolvedIDs;\n  }\n\n  private _removeBannedIDs(ids: number[]): void {\n    let index = ids.indexOf(1);\n    if (index !== -1) {\n      ids.splice(index, 1);\n    }\n  }\n}\n\nexport default NameRepository;\n","import AllianceCorporationsCallInterface from \"./AllianceCorporationsCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass AllianceCorporationsCall implements AllianceCorporationsCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  async get(id: number): Promise<number[]> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v2/alliances/${id}/corporations/`;\n  }\n}\n\nexport default AllianceCorporationsCall;\n","import EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiPublicSearchInterface from \"./EsiPublicSearchInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\nimport QueryFactoryInterface from \"../../QueryFactory/QueryFactoryInterface\";\nimport PublicSearchCallInterface from \"./PublicSearchCallInterface\";\nimport EsiCategory from \"./EsiCategory\";\n\nclass PublicSearchCall implements PublicSearchCallInterface {\n  private readonly _esiClient;\n  private readonly _queryFactory;\n  private readonly _url = \"/v2/search/\";\n\n  constructor(\n    esiClient: EsiClientInterface,\n    queryFactory: QueryFactoryInterface\n  ) {\n    this._esiClient = esiClient;\n    this._queryFactory = queryFactory;\n  }\n\n  /**\n   * @throws Error\n   */\n  async get(\n    searchString: string,\n    categories: EsiCategory[],\n    strict?: boolean\n  ): Promise<EsiPublicSearchInterface> {\n    let query = this._queryFactory.make();\n    query.add(\"search\", [searchString]);\n    query.add(\"categories\", categories);\n    if (strict !== undefined) {\n      query.add(\"strict\", [String(strict)]);\n    }\n\n    let response = await this._esiClient.getResponse(this._url, \"GET\", query);\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n}\n\nexport default PublicSearchCall;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import AllianceListCallInterface from \"../../service/Call/AllianceListCall/AllianceListCallInterface\";\nimport NameRepositoryInterface from \"../NameRepository/NameRepositoryInterface\";\nimport AllianceRepositoryInterface from \"./AllianceRepositoryInterface\";\nimport AllianceInfoCallInterface from \"../../service/Call/AllianceInfoCall/AllianceInfoCallInterface\";\nimport RepoAllianceInterface from \"./RepoAllianceInterface\";\nimport AllianceCorporationsCallInterface\n  from \"../../service/Call/AllianceCorporationsCall/AllianceCorporationsCallInterface\";\nimport EsiUniverseNamesInterface from \"../../service/Call/UniverseNamesCall/EsiUniverseNamesInterface\";\n\nclass AllianceRepository implements AllianceRepositoryInterface {\n  private readonly _allianceListCall;\n  private readonly _allianceInfoCall;\n  private readonly _allianceCorpsCall;\n  private readonly _nameRepo;\n\n  constructor(\n    allianceListCall: AllianceListCallInterface,\n    allianceInfoCall: AllianceInfoCallInterface,\n    allianceCorpsCall: AllianceCorporationsCallInterface,\n    nameRepo: NameRepositoryInterface\n  ) {\n    this._allianceListCall = allianceListCall;\n    this._allianceInfoCall = allianceInfoCall;\n    this._allianceCorpsCall = allianceCorpsCall;\n    this._nameRepo = nameRepo;\n  }\n\n  public async getOne(id: number): Promise<RepoAllianceInterface> {\n    let [\n      esiAlliance,\n      esiAllianceCorps\n    ] = await Promise.all([\n      this._allianceInfoCall.get(id),\n      this._allianceCorpsCall.get(id)\n    ]);\n\n    let repoAlliance: RepoAllianceInterface = {\n      ...esiAlliance,\n      id: id,\n      creator_corporation_name: \"#error\",\n      creator_name: \"#error\",\n      executor_corporation_name: undefined,\n      faction_name: undefined,\n      corporations: {}\n    };\n\n    let {\n      creator_corporation_id,\n      creator_id,\n      executor_corporation_id,\n      faction_id\n    } = esiAlliance;\n    let idsToResolve: number[] = [];\n    this._pushUnique(idsToResolve, creator_corporation_id);\n    this._pushUnique(idsToResolve, creator_id);\n    if (executor_corporation_id !== undefined) {\n      this._pushUnique(idsToResolve, executor_corporation_id);\n    }\n    if (faction_id !== undefined) {\n      this._pushUnique(idsToResolve, faction_id);\n    }\n\n    let [\n      allianceNames,\n      corpsNames\n    ] = await Promise.all([\n      this._nameRepo.resolveGeneric(idsToResolve),\n      this._nameRepo.resolveGeneric(esiAllianceCorps)\n    ]);\n\n    allianceNames.forEach(resolvedName => {\n      let { id, name } = resolvedName;\n      if (id === creator_corporation_id) {\n        repoAlliance.creator_corporation_name = name;\n      }\n      if (id === creator_id) {\n        repoAlliance.creator_name = name;\n      }\n      if (id === executor_corporation_id) {\n        repoAlliance.executor_corporation_name = name;\n      }\n      if (id === faction_id) {\n        repoAlliance.faction_name = name;\n      }\n    });\n\n    corpsNames.forEach(corpName => {\n      repoAlliance.corporations[corpName.id] = corpName.name;\n    });\n\n    return repoAlliance;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getList(): Promise<EsiUniverseNamesInterface[]> {\n    let allianceIDs = await this._allianceListCall.get();\n    let names = await this._nameRepo.resolveGeneric(allianceIDs);\n\n    let resolvedIDs: number[] = [];\n    names.forEach(({id}) => resolvedIDs.push(id));\n\n    allianceIDs.forEach(id => {\n      if (!resolvedIDs.includes(id)) {\n        names.push({\n          category: \"alliance\",\n          id: id,\n          name: `UNRESOLVED#${id}`\n        });\n      }\n    });\n\n    return names;\n  }\n\n  private _pushUnique(inputArray: number[], value: number): number[] {\n    if (!inputArray.includes(value)) {\n      inputArray.push(value);\n    }\n\n    return inputArray;\n  }\n}\n\nexport default AllianceRepository;\n","const categoriesForType = [\"agent\", \"alliance\", \"character\", \"constellation\", \"corporation\", \"faction\", \"inventory_type\", \"region\", \"solar_system\", \"station\"] as const;\ntype EsiCategory = typeof categoriesForType[number];\nconst esiCategories: EsiCategory[] = [\"agent\", \"alliance\", \"character\", \"constellation\", \"corporation\", \"faction\", \"inventory_type\", \"region\", \"solar_system\", \"station\"];\n\nexport default EsiCategory;\nexport { esiCategories };","import SearchRepositoryInterface from \"./SearchRepositoryInterface\";\nimport NameRepositoryInterface from \"../NameRepository/NameRepositoryInterface\";\nimport PublicSearchCallInterface from \"../../service/Call/PublicSearchCall/PublicSearchCallInterface\";\nimport RepoCategory from \"./RepoCategory\";\nimport EsiCategory, {esiCategories} from \"../../service/Call/PublicSearchCall/EsiCategory\";\nimport EsiUniverseNamesInterface from \"../../service/Call/UniverseNamesCall/EsiUniverseNamesInterface\";\nimport ResultWithLinkInterface from \"./ResulWithLinkInterface\";\nimport {MutableRefObject} from \"react\";\nimport PathGenerator from \"../../service/PathGenerator/PathGenerator\";\n\n\nexport type AutocompleteCache = { [key: string]: ResultWithLinkInterface[] };\n\nclass SearchRepository implements SearchRepositoryInterface {\n  private readonly _nameRepo;\n  private readonly _publicSearchCall;\n  private readonly _pathGenerator;\n\n  constructor(\n    nameRepo: NameRepositoryInterface,\n    publicSearchCall: PublicSearchCallInterface,\n    pathGenerator: PathGenerator\n  ) {\n    this._nameRepo = nameRepo;\n    this._publicSearchCall = publicSearchCall;\n    this._pathGenerator = pathGenerator;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async publicSearch(\n    searchString: string,\n    category: RepoCategory,\n    strict: boolean\n  ): Promise<ResultWithLinkInterface[]> {\n    let categoriesForCall: EsiCategory[];\n    if (category === \"all\") {\n      categoriesForCall = esiCategories;\n    } else {\n      categoriesForCall = [category];\n    }\n    let search = await this._publicSearchCall.get(searchString, categoriesForCall, strict);\n\n    let ids: number[] = [];\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    for (let [key, value] of Object.entries(search)) {\n      ids = ids.concat(value);\n    }\n    let names = await this._nameRepo.resolveGeneric(ids);\n\n    return this._composeResult(names);\n  }\n\n  public async forAutocomplete(\n    searchString: string,\n    category: RepoCategory,\n    cacheRef: MutableRefObject<AutocompleteCache>\n  ): Promise<ResultWithLinkInterface[]> {\n    if (cacheRef.current.hasOwnProperty(searchString)) {\n      return cacheRef.current[searchString];\n    }\n\n    let categoriesForCall: EsiCategory[];\n    if (category === \"all\") {\n      categoriesForCall = esiCategories;\n    } else {\n      categoriesForCall = [category];\n    }\n    let search = await this._publicSearchCall.get(searchString, categoriesForCall, false);\n\n    let ids: number[] = [];\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    for (let [key, value] of Object.entries(search)) {\n      ids = ids.concat(value);\n    }\n\n    let uniNames = await this._nameRepo.resolveGeneric(ids);\n    let justNames: EsiUniverseNamesInterface[] = [];\n    let lowercaseSearchString = searchString.toLowerCase();\n    uniNames.forEach(uniName => {\n      let { name } = uniName;\n      if (name.toLowerCase().startsWith(lowercaseSearchString)) {\n        justNames.push(uniName);\n      }\n    });\n\n    let orderedNames = justNames.sort((a, b) => a.name.length - b.name.length);\n    let result = this._composeResult(orderedNames);\n\n    cacheRef.current = {\n      ...cacheRef.current,\n      [searchString]: result\n    };\n\n    return result;\n  }\n\n  private _composeResult(names: EsiUniverseNamesInterface[]): ResultWithLinkInterface[] {\n    let result: ResultWithLinkInterface[] = [];\n    names.forEach(name => {\n      let prettyCategory;\n      let link;\n      switch (name.category) {\n        case \"alliance\":\n          prettyCategory = \"Alliance\";\n          link = this._pathGenerator.allianceInfo(`${name.id}`)\n          break;\n        case \"character\":\n          prettyCategory = \"Character\";\n          link = this._pathGenerator.characterInfo(`${name.id}`)\n          break;\n        case \"constellation\":\n          prettyCategory = \"Constellation\";\n          //link = \"/constellation/\";\n          link = null;\n          break;\n        case \"corporation\":\n          prettyCategory = \"Corporation\";\n          link = this._pathGenerator.corporationInfo(`${name.id}`);\n          break;\n        case \"inventory_type\":\n          prettyCategory = \"Item\";\n          //link = \"/type/\";\n          link = null;\n          break;\n        case \"region\":\n          prettyCategory = \"Region\";\n          //link = \"/region/\";\n          link = null;\n          break;\n        case \"solar_system\":\n          prettyCategory = \"System\";\n          //link = \"/system/\";\n          link = null;\n          break;\n        case \"station\":\n          prettyCategory = \"Station\";\n          //link = \"/station/\";\n          link = null\n          break;\n        case \"faction\":\n          prettyCategory = \"Faction\";\n          link = this._pathGenerator.factionInfo(`${name.id}`);\n          break;\n        default:\n          prettyCategory = name.category;\n          link = null;\n      }\n\n      result.push({\n        ...name,\n        prettyCategory: prettyCategory,\n        link: link\n      });\n    });\n\n    return result;\n  }\n}\n\nexport default SearchRepository;\n","import CharacterInfoCallInterface from \"./CharacterInfoCallInterface\";\nimport EsiCharacterInfoInterface from \"./EsiCharacterInfoInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass CharacterInfoCall implements CharacterInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(id: number): Promise<EsiCharacterInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v4/characters/${id}/`;\n  }\n}\n\nexport default CharacterInfoCall;\n","import ConstellationInfoCallInterface from \"./ConstellationInfoCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiConstellationInfoInterface from \"./EsiConstellationInfoInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass ConstellationInfoCall implements ConstellationInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  public async get(id: number): Promise<EsiConstellationInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v1/universe/constellations/${id}/`;\n  }\n}\n\nexport default ConstellationInfoCall;\n","import CorporationInfoCallInterface from \"./CorporationInfoCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiCorporationInfoInterface from \"./EsiCorporationInfoInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass CorporationInfoCall implements CorporationInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(id: number): Promise<EsiCorporationInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v5/corporations/${id}/`;\n  }\n}\n\nexport default CorporationInfoCall;\n","import TypeInfoCallInterface from \"./TypeInfoCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiTypeInfoInterface from \"./EsiTypeInfoInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass TypeInfoCall implements TypeInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(id: number): Promise<EsiTypeInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v3/universe/types/${id}/`;\n  }\n}\n\nexport default TypeInfoCall;\n","import RegionInfoCallInterface from \"./RegionInfoCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiRegionInfoInterface from \"./EsiRegionInfoInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass RegionInfoCall implements RegionInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(id: number): Promise<EsiRegionInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v1/universe/regions/${id}/`;\n  }\n}\n\nexport default RegionInfoCall;\n","import SystemInfoCallInterface from \"./SystemInfoCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiSystemInfoInterface from \"./EsiSystemInfoInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass SystemInfoCall implements SystemInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(id: number): Promise<EsiSystemInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v4/universe/systems/${id}/`;\n  }\n}\n\nexport default SystemInfoCall;\n","import StationInfoCallInterface from \"./StationInfoCallInterface\";\nimport EsiStationInfoInterface from \"./EsiStationInfoInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass StationInfoCall implements StationInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  public async get(id: number): Promise<EsiStationInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v2/universe/stations/${id}/`;\n  }\n}\n\nexport default StationInfoCall;\n","import FactionCallInterface from \"./FactionCallInterface\";\nimport EsiFactionInterface from \"./EsiFactionInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass FactionCall implements FactionCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(): Promise<EsiFactionInterface[]> {\n    let response = await this._esiClient.getResponse(this._getUrl(), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(): string {\n    return `/v2/universe/factions/`;\n  }\n}\n\nexport default FactionCall;\n","import AncestryCallInterface from \"./AncestryCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiAncestryInterface from \"./EsiAncestryInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass AncestryCall implements AncestryCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(): Promise<EsiAncestryInterface[]> {\n    let response = await this._esiClient.getResponse(this._getUrl(), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(): string {\n    return `/v1/universe/ancestries/`;\n  }\n}\n\nexport default AncestryCall;\n","import BloodlineCallInterface from \"./BloodlineCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiBloodlineInterface from \"./EsiBloodlineInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass BloodlineCall implements BloodlineCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(): Promise<EsiBloodlineInterface[]> {\n    let response = await this._esiClient.getResponse(this._getUrl(), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(): string {\n    return `/v1/universe/bloodlines/`;\n  }\n}\n\nexport default BloodlineCall;\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import AncestryRepositoryInterface from \"./AncestryRepositoryInterface\";\nimport EsiAncestryInterface from \"../../service/Call/AncestryCall/EsiAncestryInterface\";\nimport AncestryCallInterface from \"../../service/Call/AncestryCall/AncestryCallInterface\";\n\nclass AncestryRepository implements AncestryRepositoryInterface {\n  private readonly _ancestryCall;\n\n  constructor(ancestryCall: AncestryCallInterface) {\n    this._ancestryCall = ancestryCall;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getName(id: number): Promise<string> {\n    let ancestries = await this._ancestryCall.get();\n    let foundAncestry: EsiAncestryInterface | null = null;\n    for (let ancestry of ancestries) {\n      if (ancestry.id === id) {\n        foundAncestry = ancestry;\n        break;\n      }\n    }\n\n    if (foundAncestry === null) {\n      throw new Error(\"Ancestry not found\");\n    }\n\n    return foundAncestry.name;\n  }\n}\n\nexport default AncestryRepository;\n","import EsiUniverseNamesInterface from \"../../service/Call/UniverseNamesCall/EsiUniverseNamesInterface\";\n\nabstract class AbstractRepository {\n  protected _pushUnique(inputArray: number[], value: number): number[] {\n    if (!inputArray.includes(value)) {\n      inputArray.push(value);\n    }\n\n    return inputArray;\n  }\n\n  protected _orderNamesByID(\n    names: EsiUniverseNamesInterface[]\n  ): {\n    [key: string]: EsiUniverseNamesInterface\n  } {\n    let orderedNames: {[key: string]: EsiUniverseNamesInterface} = {};\n    names.forEach(name => {\n      orderedNames[String(name.id)] = name;\n    });\n\n    return orderedNames;\n  }\n}\n\nexport default AbstractRepository;\n","import BloodlineRepositoryInterface from \"./BloodlineRepositoryInterface\";\nimport BloodlineCallInterface from \"../../service/Call/BloodlineCall/BloodlineCallInterface\";\nimport EsiBloodlineInterface from \"../../service/Call/BloodlineCall/EsiBloodlineInterface\";\nimport RepoBloodlineInterface from \"./RepoBloodlineInterface\";\nimport RaceRepositoryInterface from \"../RaceRepository/RaceRepositoryInterface\";\nimport NameRepositoryInterface from \"../NameRepository/NameRepositoryInterface\";\nimport AbstractRepository from \"../AbstractRepository/AbstractRepository\";\nimport EsiUniverseNamesInterface from \"../../service/Call/UniverseNamesCall/EsiUniverseNamesInterface\";\n\nclass BloodlineRepository extends AbstractRepository implements BloodlineRepositoryInterface {\n  private readonly _bloodlineCall;\n  private readonly _raceRepo;\n  private readonly _nameRepo;\n\n  constructor(\n    bloodlineCall: BloodlineCallInterface,\n    raceRepo: RaceRepositoryInterface,\n    nameRepo: NameRepositoryInterface\n  ) {\n    super();\n    this._bloodlineCall = bloodlineCall;\n    this._raceRepo = raceRepo;\n    this._nameRepo = nameRepo;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getAll(): Promise<RepoBloodlineInterface[]> {\n    return [];\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getOne(id: number): Promise<RepoBloodlineInterface> {\n    let foundBloodline = await this._getEsiBloodline(id);\n    let {\n      race_id,\n      corporation_id,\n      ship_type_id\n    } = foundBloodline;\n\n    let raceNamePromise = this._raceRepo.getName(race_id);\n\n    let idsToResolve = this._getIDsToResolve([foundBloodline]);\n    let indexedNames: {[key: string]: EsiUniverseNamesInterface} = {};\n    if (idsToResolve.length > 0) {\n      indexedNames = this._orderNamesByID(await this._nameRepo.resolveGeneric(idsToResolve));\n    }\n\n    let ship_type_name = undefined;\n    if (ship_type_id !== undefined && ship_type_id !== null) {\n      ship_type_name = indexedNames[ship_type_id].name ?? \"#error\";\n    }\n\n    return {\n      ...foundBloodline,\n      corporation_name: indexedNames[corporation_id].name ?? \"#error\",\n      race_name: await raceNamePromise,\n      ship_type_name: ship_type_name\n    }\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getName(id: number): Promise<string> {\n    let foundBloodline = await this._getEsiBloodline(id);\n\n    return foundBloodline.name;\n  }\n\n  private _getIDsToResolve(bloodlines: EsiBloodlineInterface[]): number[] {\n    let idsToResolve: number[] = [];\n\n    bloodlines.forEach(bloodline => {\n      let {\n        corporation_id,\n        ship_type_id\n      } = bloodline;\n      this._pushUnique(idsToResolve, corporation_id);\n      if (ship_type_id !== undefined && ship_type_id !== null) {\n        this._pushUnique(idsToResolve, ship_type_id);\n      }\n    });\n\n    return idsToResolve;\n  }\n\n  /**\n   * @throws Error\n   */\n  private async _getEsiBloodline(id: number): Promise<EsiBloodlineInterface> {\n    let bloodlines = await this._bloodlineCall.get();\n    let foundBloodline: EsiBloodlineInterface | null = null;\n    for (let bloodline of bloodlines) {\n      if (bloodline.bloodline_id === id) {\n        foundBloodline = bloodline;\n        break;\n      }\n    }\n\n    if (foundBloodline === null) {\n      throw new Error(\"Bloodline not found\");\n    }\n\n    return foundBloodline;\n  }\n}\n\nexport default BloodlineRepository;\n","import CharacterRepositoryInterface from \"./CharacterRepositoryInterface\";\nimport RepoCharacterInterface from \"./RepoCharacterInterface\";\nimport AncestryRepositoryInterface from \"../AncestryRepository/AncestryRepositoryInterface\";\nimport CharacterInfoCallInterface from \"../../service/Call/CharacterInfoCall/CharacterInfoCallInterface\";\nimport BloodlineRepositoryInterface from \"../BloodlineRepository/BloodlineRepositoryInterface\";\nimport NameRepositoryInterface from \"../NameRepository/NameRepositoryInterface\";\nimport RaceRepositoryInterface from \"../RaceRepository/RaceRepositoryInterface\";\nimport CharacterCorpHistoryCallInterface\n  from \"../../service/Call/CharacterCorpHistoryCall/CharacterCorpHistoryCallInterface\";\nimport RepoCharacterCorpHistoryInterface from \"./RepoCharacterCorpHistoryInterface\";\n\nclass CharacterRepository implements CharacterRepositoryInterface {\n  private readonly _characterInfoCall;\n  private readonly _characterCorpHistoryCall;\n  private readonly _ancestryRepo;\n  private readonly _bloodlineRepo;\n  private readonly _nameRepo;\n  private readonly _raceRepo;\n\n  constructor(\n    characterInfoCall: CharacterInfoCallInterface,\n    characterCorpHistoryCall: CharacterCorpHistoryCallInterface,\n    ancestryRepo: AncestryRepositoryInterface,\n    bloodlineRepo: BloodlineRepositoryInterface,\n    nameRepo: NameRepositoryInterface,\n    raceRepo: RaceRepositoryInterface\n  ) {\n    this._characterInfoCall = characterInfoCall;\n    this._characterCorpHistoryCall = characterCorpHistoryCall;\n    this._ancestryRepo = ancestryRepo;\n    this._bloodlineRepo = bloodlineRepo;\n    this._nameRepo = nameRepo;\n    this._raceRepo = raceRepo;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getOne(id: number): Promise<RepoCharacterInterface> {\n    let [\n      esiChar,\n      repoCorpHistory\n    ] = await Promise.all([\n      this._characterInfoCall.get(id),\n      this._getCorpHistory(id)\n    ]);\n\n    let repoChar: RepoCharacterInterface = {\n      ...esiChar,\n      alliance_name: esiChar.alliance_id === undefined ? undefined : \"#error\",\n      ancestry_name: esiChar.ancestry_id === undefined ? undefined : \"#error\",\n      bloodline_name: \"#error\",\n      corporation_name: \"#name\",\n      faction_name: esiChar.faction_id === undefined ? undefined : \"#error\",\n      race_name: \"#error\",\n      id: id,\n      corporation_history: repoCorpHistory\n    }\n\n    let {\n      alliance_id,\n      ancestry_id,\n      bloodline_id,\n      corporation_id,\n      faction_id,\n      race_id\n    } = esiChar;\n    let idsToResolve: number[] = [];\n    idsToResolve.push(corporation_id);\n    if (alliance_id !== undefined) {\n      idsToResolve.push(alliance_id);\n    }\n    if (faction_id !== undefined) {\n      idsToResolve.push(faction_id);\n    }\n\n    let ancestryPromise = null; // Because ancestry is optional\n    if (ancestry_id !== undefined) {\n      ancestryPromise = this._ancestryRepo.getName(ancestry_id);\n    }\n    let bloodlinePromise = this._bloodlineRepo.getName(bloodline_id);\n    let namesPromise = this._nameRepo.resolveGeneric(idsToResolve);\n    let racePromise = this._raceRepo.getName(race_id);\n\n    if (ancestryPromise !== null) {\n      try {\n        repoChar.ancestry_name = await ancestryPromise;\n      } catch (e) {\n        // Intentionally left blank, it's a call of secondary importance\n      }\n    }\n    try {\n      repoChar.bloodline_name = await bloodlinePromise;\n    } catch (e) {\n      // Intentionally left blank, it's a call of secondary importance\n    }\n    try {\n      repoChar.race_name = await racePromise;\n    } catch (e) {\n      // Intentionally left blank, it's a call of secondary importance\n    }\n    try {\n      let charNames = await namesPromise;\n      charNames.forEach(resolvedName => {\n        let { id, name } = resolvedName;\n        if (id === corporation_id) {\n          repoChar.corporation_name = name;\n        }\n        if (id === alliance_id) {\n          repoChar.alliance_name = name;\n        }\n        if (id === faction_id) {\n          repoChar.faction_name = name;\n        }\n      });\n    } catch (e) {\n      // Intentionally left blank, it's a call of secondary importance\n    }\n\n    return repoChar;\n  }\n\n  private async _getCorpHistory(id: number): Promise<RepoCharacterCorpHistoryInterface[]> {\n    let corpHistory = await this._characterCorpHistoryCall.get(id);\n    let idsToResolve: number[] = [];\n    corpHistory.forEach(corp => {\n      if (corp.is_deleted === undefined || !corp.is_deleted) {\n        idsToResolve = this._pushUnique(idsToResolve, corp.corporation_id);\n      }\n    });\n\n    let names = await this._nameRepo.resolveGeneric(idsToResolve);\n    let repoCorpHistory: RepoCharacterCorpHistoryInterface[] = [];\n    corpHistory.forEach(corp => {\n      let { corporation_id } = corp;\n      let foundName = `#${corporation_id}`;\n      for (let name of names) {\n        if (name.id === corporation_id) {\n          foundName = name.name;\n          break;\n        }\n      }\n\n      repoCorpHistory.push({\n        ...corp,\n        corporation_name: foundName\n      });\n    });\n\n    return repoCorpHistory;\n  }\n\n  private _pushUnique(inputArray: number[], value: number): number[] {\n    if (!inputArray.includes(value)) {\n      inputArray.push(value);\n    }\n\n    return inputArray;\n  }\n}\n\nexport default CharacterRepository;\n","import RaceCallInterface from \"./RaceCallInterface\";\nimport EsiRaceInterface from \"./EsiRaceInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass RaceCall implements RaceCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(): Promise<EsiRaceInterface[]> {\n    let response = await this._esiClient.getResponse(this._getUrl(), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(): string {\n    return `/v1/universe/races/`;\n  }\n}\n\nexport default RaceCall;\n","import RaceRepositoryInterface from \"./RaceRepositoryInterface\";\nimport RaceCallInterface from \"../../service/Call/RaceCall/RaceCallInterface\";\nimport EsiRaceInterface from \"../../service/Call/RaceCall/EsiRaceInterface\";\nimport RepoRaceInterface from \"./RepoRaceInterface\";\nimport NameRepositoryInterface from \"../NameRepository/NameRepositoryInterface\";\nimport AbstractRepository from \"../AbstractRepository/AbstractRepository\";\nimport FactionRepositoryInterface from \"../FactionRepository/FactionRepositoryInterface\";\n\nclass RaceRepository extends AbstractRepository implements RaceRepositoryInterface {\n  private readonly _raceCall;\n  private readonly _nameRepo;\n  private readonly _factionRepo;\n\n  constructor(\n    raceCall: RaceCallInterface,\n    nameRepo: NameRepositoryInterface,\n    factionRepo: FactionRepositoryInterface\n  ) {\n    super();\n    this._raceCall = raceCall;\n    this._nameRepo = nameRepo;\n    this._factionRepo = factionRepo;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getAll(): Promise<RepoRaceInterface[]> {\n    let esiRaces = await this._raceCall.get();\n    let idsToResolve: number[] = [];\n    let repoRaces: RepoRaceInterface[] = [];\n    esiRaces.forEach(esiRace => {\n      this._pushUnique(idsToResolve, esiRace.alliance_id);\n      repoRaces.push({\n        ...esiRace,\n        alliance_name: \"#error\",\n      });\n    });\n\n    let names = this._orderNamesByID(await this._nameRepo.resolveGeneric(idsToResolve));\n    repoRaces.forEach(repoRace => {\n      if (names[String(repoRace.alliance_id)] !== undefined) {\n        repoRace.alliance_name = names[String(repoRace.alliance_id)].name;\n      }\n    });\n\n    return repoRaces;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getOne(id: number): Promise<RepoRaceInterface> {\n    let foundRace = await this._getEsiRace(id);\n\n    return {\n      ...foundRace,\n      alliance_name: await this._factionRepo.getName(foundRace.alliance_id)\n    };\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getName(id: number): Promise<string> {\n    let foundRace = await this._getEsiRace(id);\n\n    return foundRace.name;\n  }\n\n  /**\n   * @throws Error\n   */\n  private async _getEsiRace(id: number): Promise<EsiRaceInterface> {\n    let races = await this._raceCall.get();\n    let foundRace: EsiRaceInterface | null = null;\n    for (let race of races) {\n      if (race.race_id === id) {\n        foundRace = race;\n        break;\n      }\n    }\n\n    if (foundRace === null) {\n      throw new Error(\"Race not found\");\n    }\n\n    return foundRace;\n  }\n}\n\nexport default RaceRepository;\n","import CharacterCorpHistoryCallInterface from \"./CharacterCorpHistoryCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiCharacterCorpHistoryInterface from \"./EsiCharacterCorpHistoryInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass CharacterCorpHistoryCall implements CharacterCorpHistoryCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  public async get(id: number): Promise<EsiCharacterCorpHistoryInterface[]> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v1/characters/${id}/corporationhistory/`;\n  }\n}\n\nexport default CharacterCorpHistoryCall;\n","import DateFormatterInterface from \"./DateFormatterInterface\";\n\nclass DateFormatter implements DateFormatterInterface {\n  public withDateTime(date: Date): string {\n    let yyyy = `${date.getUTCFullYear()}`;\n    let mm = this.toStringWithLeadingZero(date.getUTCMonth() + 1);\n    let dd = this.toStringWithLeadingZero(date.getUTCDate());\n    let hr = this.toStringWithLeadingZero(date.getUTCHours());\n    let min = this.toStringWithLeadingZero(date.getUTCMinutes());\n    let sec = this.toStringWithLeadingZero(date.getUTCSeconds());\n\n    return `${yyyy}.${mm}.${dd} ${hr}:${min}:${sec}`;\n  }\n\n  public onlyDate(date: Date): string {\n    let yyyy = `${date.getUTCFullYear()}`;\n    let mm = this.toStringWithLeadingZero(date.getUTCMonth() + 1);\n    let dd = this.toStringWithLeadingZero(date.getUTCDate());\n\n    return `${yyyy}.${mm}.${dd}`;\n  }\n\n  private toStringWithLeadingZero(value: number): string {\n    if (value < 10) {\n      return `0${value}`;\n    }\n\n    return `${value}`;\n  }\n}\n\nexport default DateFormatter;\n","import CorporationAllianceHistoryCallInterface from \"./CorporationAllianceHistoryCallInterface\";\nimport EsiCorporationAllianceHistoryInterface from \"./EsiCorporationAllianceHistoryInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass CorporationAllianceHistoryCall implements CorporationAllianceHistoryCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  public async get(id: number): Promise<EsiCorporationAllianceHistoryInterface[]> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v3/corporations/${id}/alliancehistory/`;\n  }\n}\n\nexport default CorporationAllianceHistoryCall;\n","import CorporationRepositoryInterface from \"./CorporationRepositoryInterface\";\nimport RepoCorporationInterface from \"./RepoCorporationInterface\";\nimport CorporationInfoCallInterface from \"../../service/Call/CorporationInfoCall/CorporationInfoCallInterface\";\nimport NameRepositoryInterface from \"../NameRepository/NameRepositoryInterface\";\nimport CorporationAllianceHistoryCallInterface\n  from \"../../service/Call/CorporationAllianceHistoryCall/CorporationAllianceHistoryCallInterface\";\nimport RepoCorpAllianceHistoryInterface from \"./RepoCorpAllianceHistoryInterface\";\n\nclass CorporationRepository implements CorporationRepositoryInterface {\n  private readonly _corpInfoCall;\n  private readonly _corpAllianceHistoryCall;\n  private readonly _nameRepo;\n\n  constructor(\n    corpInfoCall: CorporationInfoCallInterface,\n    corpAllianceHistoryCall: CorporationAllianceHistoryCallInterface,\n    nameRepo: NameRepositoryInterface\n  ) {\n    this._corpInfoCall = corpInfoCall;\n    this._corpAllianceHistoryCall = corpAllianceHistoryCall;\n    this._nameRepo = nameRepo;\n  }\n\n  public async getOne(id: number): Promise<RepoCorporationInterface> {\n    let [\n      esiCorp,\n      allianceHistory\n    ] = await Promise.all([\n      this._corpInfoCall.get(id),\n      this.getAllianceHistory(id)\n    ]);\n\n    let repoCorp: RepoCorporationInterface = {\n      ...esiCorp,\n      alliance_name: undefined,\n      ceo_name: \"#error\",\n      creator_name: \"#error\",\n      faction_name: undefined,\n      home_station_name: undefined,\n      alliance_history: allianceHistory,\n      id: id,\n    };\n\n    let {\n      alliance_id,\n      ceo_id,\n      creator_id,\n      faction_id,\n      home_station_id\n    } = esiCorp;\n    let idsToResolve: number[] = [];\n    this._pushUnique(idsToResolve, ceo_id);\n    this._pushUnique(idsToResolve, creator_id);\n    if (alliance_id !== undefined) {\n      this._pushUnique(idsToResolve, alliance_id);\n    }\n    if (faction_id !== undefined) {\n      this._pushUnique(idsToResolve, faction_id);\n    }\n    if (home_station_id !== undefined) {\n      this._pushUnique(idsToResolve, home_station_id);\n    }\n\n    let corpNames = await this._nameRepo.resolveGeneric(idsToResolve);\n    corpNames.forEach(resolvedName => {\n      let { id, name } = resolvedName;\n\n      if (id === alliance_id) {\n        repoCorp.alliance_name = name;\n      }\n      if (id === ceo_id) {\n        repoCorp.ceo_name = name;\n      }\n      if (id === creator_id) {\n        repoCorp.creator_name = name;\n      }\n      if (id === faction_id) {\n        repoCorp.faction_name = name;\n      }\n      if (id === home_station_id) {\n        repoCorp.home_station_name = name;\n      }\n    });\n\n    return repoCorp;\n  }\n\n  public async getAllianceHistory(id: number): Promise<RepoCorpAllianceHistoryInterface[]> {\n    let corpHistory = await this._corpAllianceHistoryCall.get(id);\n\n    let idsToResolve: number[] = [];\n    let recordIDs: number[] = [];\n    let indexedCorpHistory: { [key: string]: RepoCorpAllianceHistoryInterface } = {};\n    corpHistory.forEach(record => {\n      let allianceNamePlaceholder = undefined;\n      if (record.alliance_id !== undefined) {\n        idsToResolve = this._pushUnique(idsToResolve, record.alliance_id);\n        allianceNamePlaceholder = \"#error\";\n      }\n      recordIDs.push(record.record_id);\n      indexedCorpHistory[record.record_id] = {\n        ...record,\n        end_date: undefined,\n        alliance_name: allianceNamePlaceholder,\n      };\n    });\n    let names = await this._nameRepo.resolveGeneric(idsToResolve);\n\n    let historyToReturn: RepoCorpAllianceHistoryInterface[] = [];\n    recordIDs.sort((a, b) => a - b);\n    for (let i = 0; i < recordIDs.length; i++) {\n      let id = recordIDs[i];\n\n      // Add alliance name, if the record has the id\n      if (indexedCorpHistory[id].alliance_id !== undefined) {\n        for (let name of names) {\n          if (name.id === indexedCorpHistory[id].alliance_id) {\n            indexedCorpHistory[id].alliance_name = name.name;\n            break;\n          }\n        }\n      }\n\n      // Add end date, if the current record is an alliance, and the following is not\n      if (\n        indexedCorpHistory[id].alliance_id !== undefined\n        && i < recordIDs.length - 1\n        && indexedCorpHistory[recordIDs[i + 1]].alliance_id === undefined\n      ) {\n        indexedCorpHistory[id].end_date = indexedCorpHistory[recordIDs[i + 1]].start_date;\n      }\n\n      // Add to the elements to return if it's an alliance\n      if (indexedCorpHistory[id].alliance_id !== undefined) {\n        historyToReturn.unshift(indexedCorpHistory[id]);\n      }\n    }\n\n    return historyToReturn;\n  }\n\n  private _pushUnique(inputArray: number[], value: number): number[] {\n    if (!inputArray.includes(value)) {\n      inputArray.push(value);\n    }\n\n    return inputArray;\n  }\n}\n\nexport default CorporationRepository;\n","import FactionRepositoryInterface from \"./FactionRepositoryInterface\";\nimport RepoFactionInterface from \"./RepoFactionInterface\";\nimport AbstractRepository from \"../AbstractRepository/AbstractRepository\";\nimport FactionCallInterface from \"../../service/Call/FactionCall/FactionCallInterface\";\nimport NameRepositoryInterface from \"../NameRepository/NameRepositoryInterface\";\nimport EsiUniverseNamesInterface from \"../../service/Call/UniverseNamesCall/EsiUniverseNamesInterface\";\nimport EsiFactionInterface from \"../../service/Call/FactionCall/EsiFactionInterface\";\n\nclass FactionRepository extends AbstractRepository implements FactionRepositoryInterface {\n  private readonly _factionCall;\n  private readonly _nameRepo;\n\n  constructor(\n    factionCall: FactionCallInterface,\n    nameRepo: NameRepositoryInterface\n  ) {\n    super();\n    this._factionCall = factionCall;\n    this._nameRepo = nameRepo;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getAll(): Promise<RepoFactionInterface[]> {\n    let esiFactions = await this._factionCall.get();\n    let idsToResolve: number[] = this._getIDsToResolve(esiFactions);\n    let indexedNames: {[key: string]: EsiUniverseNamesInterface} = {}\n    if (idsToResolve.length > 0) {\n      indexedNames = this._orderNamesByID(await this._nameRepo.resolveGeneric(idsToResolve));\n    }\n\n    let repoFactions: RepoFactionInterface[] = [];\n    esiFactions.forEach(esiFaction => {\n      repoFactions.push(this._assembleRepoFaction(esiFaction, indexedNames));\n    });\n\n    return repoFactions;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getOne(id: number): Promise<RepoFactionInterface> {\n    let foundFaction = await this._getEsiFaction(id);\n\n    let idsToResolve = this._getIDsToResolve([foundFaction]);\n    let indexedNames: {[key: string]: EsiUniverseNamesInterface} = {}\n    if (idsToResolve.length > 0) {\n      indexedNames = this._orderNamesByID(await this._nameRepo.resolveGeneric(idsToResolve));\n    }\n\n    return this._assembleRepoFaction(foundFaction, indexedNames);\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getName(id: number): Promise<string> {\n    let foundFaction = await this._getEsiFaction(id);\n\n    return foundFaction.name;\n  }\n\n  /**\n   * @throws Error\n   */\n  private async _getEsiFaction(id: number): Promise<EsiFactionInterface> {\n    let esiFactions = await this._factionCall.get();\n    let foundFaction: EsiFactionInterface | null = null;\n    for (let esiFaction of esiFactions) {\n      if (esiFaction.faction_id === id) {\n        foundFaction = esiFaction;\n        break;\n      }\n    }\n    if (foundFaction === null) {\n      throw new Error(\"Faction not found\");\n    }\n\n    return foundFaction;\n  }\n\n  private _getIDsToResolve(factions: EsiFactionInterface[]): number[] {\n    let idsToResolve: number[] = [];\n\n    factions.forEach(faction => {\n      let {\n        corporation_id,\n        militia_corporation_id,\n        solar_system_id\n      } = faction;\n      if (corporation_id !== undefined) {\n        this._pushUnique(idsToResolve, corporation_id);\n      }\n      if (militia_corporation_id !== undefined) {\n        this._pushUnique(idsToResolve, militia_corporation_id);\n      }\n      if (solar_system_id !== undefined) {\n        this._pushUnique(idsToResolve, solar_system_id);\n      }\n    });\n\n    return idsToResolve;\n  }\n\n  private _assembleRepoFaction(\n    esiFaction: EsiFactionInterface,\n    indexedNames: {[key: string]: EsiUniverseNamesInterface}\n  ): RepoFactionInterface {\n    let {\n      corporation_id,\n      militia_corporation_id,\n      solar_system_id\n    } = esiFaction;\n\n    let corporation_name = undefined;\n    let militia_corporation_name = undefined;\n    let solar_system_name = undefined;\n\n    if (corporation_id !== undefined) {\n      corporation_name = indexedNames[corporation_id].name ?? \"#error\";\n    }\n    if (militia_corporation_id !== undefined) {\n      militia_corporation_name = indexedNames[militia_corporation_id].name ?? \"#error\";\n    }\n    if (solar_system_id !== undefined) {\n      solar_system_name = indexedNames[solar_system_id].name ?? \"#error\";\n    }\n\n    return {\n      ...esiFaction,\n      corporation_name: corporation_name,\n      militia_corporation_name: militia_corporation_name,\n      solar_system_name: solar_system_name\n    };\n  }\n}\n\nexport default FactionRepository;\n","import RSSRepositoryInterface from \"./RSSRepositoryInterface\";\nimport RSSFeedEntryInterface from \"./RSSFeedEntryInterface\";\n\nclass RSSRepository implements RSSRepositoryInterface {\n  public async getEveNewsFeed(): Promise<RSSFeedEntryInterface[]> {\n    return this._fetch(\"https://www.eveonline.com/rss/json/news\");\n  }\n\n  public async getDevBlogsFeed(): Promise<RSSFeedEntryInterface[]> {\n    return this._fetch(\"https://www.eveonline.com/rss/json/dev-blogs\");\n  }\n\n  public async getPatchNotesFeed(): Promise<RSSFeedEntryInterface[]> {\n    return this._fetch(\"https://www.eveonline.com/rss/json/patch-notes\");\n  }\n\n  private async _fetch(url: string): Promise<RSSFeedEntryInterface[]> {\n    let response = await fetch(\n      url,\n      {\n        cache: \"default\",\n      }\n    );\n\n    return response.json();\n  }\n}\n\nexport default RSSRepository;\n","import StatusRepositoryInterface from \"./StatusRepositoryInterface\";\nimport StatusCallInterface from \"../../service/Call/StatusCall/StatusCallInterface\";\n\nclass StatusRepository implements StatusRepositoryInterface {\n  private readonly _statusCall;\n\n  constructor(statusCall: StatusCallInterface) {\n    this._statusCall = statusCall;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async isEveOnline(): Promise<boolean> {\n    let status = await this._statusCall.get();\n\n    return status.players > 100;\n  }\n}\n\nexport default StatusRepository;\n","import EntityManagerInterface from \"./EntityManagerInterface\";\nimport MigrationInterface from \"./Migration/MigrationInterface\";\n\nclass EntityManager implements EntityManagerInterface {\n  private _migrations: MigrationInterface[]\n\n  constructor(\n    migrations: MigrationInterface[]\n  ) {\n    this._migrations = migrations;\n  }\n\n  public async getConnection(): Promise<IDBDatabase> {\n    let dbName = \"evelook\";\n    let versions = [0, 1];\n\n    return new Promise((resolve, reject) => {\n      let dbReq = indexedDB.open(dbName, 1);\n\n      dbReq.onupgradeneeded = event => {\n        versions.forEach(version => {\n          if (event.oldVersion < version) {\n            this._migrations.forEach(migration => {\n              migration.run(dbReq.result, version);\n            });\n          }\n        });\n      };\n\n      dbReq.onsuccess = () => {\n        resolve(dbReq.result);\n\n        return;\n      };\n\n      dbReq.onblocked = () => {\n        reject(\"Database version can't be upgraded because the app is open somewhere else.\");\n      }\n\n      dbReq.onerror = () => {\n        let error = dbReq.error;\n        let message = \"Error opening database\";\n        if (error !== null) {\n          message += `: ${error.code} ${error.message} ${error.name}`;\n        }\n        reject(message);\n\n        return;\n      };\n    });\n  }\n}\n\nexport default EntityManager;\n","import MigrationInterface from \"./MigrationInterface\";\n\nclass MarketOrdersMigration implements MigrationInterface {\n  public run(db: IDBDatabase, version: number): void {\n    if (version < 1) {\n      let store = db.createObjectStore(\n        \"market_orders\",\n        {\n          keyPath: \"order_id\",\n          autoIncrement: false\n        }\n      );\n      store.createIndex(\"by_region\", \"region_id\");\n    }\n  }\n}\n\nexport default MarketOrdersMigration;\n","import MigrationInterface from \"./MigrationInterface\";\n\nclass SettingsMigration implements MigrationInterface {\n  public run(db: IDBDatabase, version: number): void {\n    if (version <= 1) {\n      let store = db.createObjectStore(\n        \"settings\",\n        {\n          keyPath: \"name\",\n          autoIncrement: false\n        }\n      );\n      store.add({ name: \"dark_mode\", value: false });\n    }\n  }\n}\n\nexport default SettingsMigration;\n","import EntityManagerInterface from \"../EntityManagerInterface\";\nimport BaseTable from \"./BaseTable\";\nimport SettingsTableInterface from \"./SettingsTableInterface\";\n\nclass SettingsTable extends BaseTable implements SettingsTableInterface {\n  public readonly name = \"settings\";\n\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(\n    em: EntityManagerInterface\n  ) {\n    super(em);\n  }\n}\n\nexport default SettingsTable;\n","import EntityManagerInterface from \"../EntityManagerInterface\";\nimport BaseTableInterface from \"./BaseTableInterface\";\n\nabstract class BaseTable implements BaseTableInterface {\n  abstract name: string;\n  private _em: EntityManagerInterface;\n\n  protected constructor(\n    em: EntityManagerInterface\n  ) {\n    this._em = em;\n  }\n\n  public async addOne(value: any, key?: any): Promise<void> {\n    return this.addMany([{value, key}]);\n  }\n\n  public async addMany(items: [{value: any, key?: any}]): Promise<void> {\n    let transaction = await this._getReadwriteTransaction();\n\n    return new Promise((resolve, reject) => {\n      let store = this._getObjectStore(transaction);\n      items.forEach(item => {\n        if (item.key === undefined) {\n          store.add(item.value);\n        } else {\n          store.add(item.value, item.key);\n        }\n      });\n\n      // \"oncomplete\" fires after all transaction completed successfully,\n      // unlike \"onsuccess\" which fires when some transaction may still fail\n      // after the event.\n      transaction.oncomplete = () => {\n        resolve();\n      };\n\n      transaction.onerror = () => {\n        reject(this._getErrorMessage(transaction.error));\n      };\n    });\n  }\n\n  public async clear(): Promise<void> {\n    let transaction = await this._getReadwriteTransaction();\n\n    return new Promise((resolve, reject) => {\n      let store = this._getObjectStore(transaction);\n      store.clear();\n\n      transaction.oncomplete = () => {\n        resolve();\n      }\n\n      transaction.onerror = () => {\n        reject(this._getErrorMessage(transaction.error));\n      };\n    });\n  }\n\n  // TODO: also in index\n  public async count(key?: IDBValidKey | IDBKeyRange): Promise<number> {\n    let transaction = await this._getReadonlyTransaction();\n\n    return new Promise((resolve, reject) => {\n      let store = this._getObjectStore(transaction);\n      let request = store.count(key);\n\n      request.onsuccess = () => {\n        resolve(request.result);\n      }\n\n      request.onerror = () => {\n        reject(this._getErrorMessage(request.error));\n      }\n    });\n  }\n\n  public async delete(key: IDBValidKey | IDBKeyRange): Promise<void> {\n    let transaction = await this._getReadwriteTransaction();\n\n    return new Promise((resolve, reject) => {\n      let store = this._getObjectStore(transaction);\n      store.delete(key);\n\n      transaction.oncomplete = () => {\n        resolve();\n      }\n\n      transaction.onerror = () => {\n        reject(this._getErrorMessage(transaction.error));\n      };\n    });\n  }\n\n  public async getOne<T>(key: IDBValidKey): Promise<T | undefined> {\n    return await this._get(key) as T;\n  }\n\n  public async getRange<T>(keyRange: IDBKeyRange): Promise<T[] | undefined> {\n    return await this._get(keyRange) as T[];\n  }\n\n  // fixme\n  public async getAll(): Promise<void> {\n    let transaction = await this._getReadonlyTransaction();\n\n    return new Promise((resolve, reject) => {\n      let store = this._getObjectStore(transaction);\n      store.getAll()\n      // fixme continue here\n    });\n  }\n\n  public async putOne<T>(value: T, key?: IDBValidKey): Promise<void> {\n    return this.putMany([{ value, key }]);\n  }\n\n  public async putMany<T>(items: [{ value: T, key?: IDBValidKey }]): Promise<void> {\n    let transaction = await this._getReadwriteTransaction()\n\n    return new Promise((resolve, reject) => {\n      let store = this._getObjectStore(transaction);\n      items.forEach(item => {\n        if (item.key === undefined) {\n          store.put(item.value);\n        } else {\n          store.put(item.value, item.key);\n        }\n      });\n\n      // \"oncomplete\" fires after all transaction completed successfully,\n      // unlike \"onsuccess\" which fires when some transaction may still fail\n      // after the event.\n      transaction.oncomplete = () => {\n        resolve();\n      };\n\n      transaction.onerror = () => {\n        reject(this._getErrorMessage(transaction.error));\n      };\n    });\n  }\n\n  private async _get<T>(query: IDBValidKey | IDBKeyRange): Promise<T|T[]> {\n    let transaction = await this._getReadonlyTransaction();\n\n    return new Promise((resolve, reject) => {\n      let store = this._getObjectStore(transaction);\n      let request = store.get(query);\n\n      request.onsuccess = () => {\n        resolve(request.result);\n      }\n\n      transaction.onerror = () => {\n        reject(this._getErrorMessage(transaction.error));\n      };\n    });\n  }\n\n  private async _getReadonlyTransaction(): Promise<IDBTransaction> {\n    let connection = await this._em.getConnection();\n\n    return connection.transaction([this.name], \"readonly\");\n  }\n\n  private async _getReadwriteTransaction(): Promise<IDBTransaction> {\n    let connection = await this._em.getConnection();\n\n    return connection.transaction([this.name], \"readwrite\");\n  }\n\n  private _getObjectStore(transaction: IDBTransaction): IDBObjectStore {\n    return transaction.objectStore(this.name);\n  }\n\n  private _getErrorMessage(error: DOMException | null): string {\n    let message = \"Database error\";\n    if (error !== null) {\n      message = `Error: ${error.code} ${error.message} ${error.name}`;\n    }\n\n    return message;\n  }\n};\n\nexport default BaseTable;\n","export const KEY_DARK_MODE = \"dark_mode\";\n\ninterface SettingsStoreInterface {\n  name: typeof KEY_DARK_MODE,\n  value: any\n}\n\nexport default SettingsStoreInterface;\n","import SettingsRepositoryInterface from \"./SettingsRepositoryInterface\";\nimport SettingsTableInterface from \"../../service/EntityManager/Table/SettingsTableInterface\";\nimport SettingsStoreInterface, { KEY_DARK_MODE } from \"../../service/EntityManager/Store/SettingsStoreInterface\";\n\nclass SettingsRepository implements SettingsRepositoryInterface {\n  private _settingsTable;\n\n  constructor(settingsTable: SettingsTableInterface) {\n    this._settingsTable = settingsTable;\n  }\n\n  public async getDarkMode(): Promise<boolean> {\n    let item = await this._settingsTable.getOne<SettingsStoreInterface>(KEY_DARK_MODE);\n    if (item === undefined) {\n      return false;\n    }\n\n    return item.value;\n  }\n\n  public async setDarkMode(value: boolean): Promise<void> {\n    await this._settingsTable.putOne<SettingsStoreInterface>({ name: KEY_DARK_MODE, value: value });\n  }\n}\n\nexport default SettingsRepository;\n","import EsiProxyInterface from \"./EsiProxyInterface\";\nimport EsiErrorManagerInterface from \"../EsiErrorManager/EsiErrorManagerInterface\";\n\n/**\n * This class is used as a proxy for \"fetch\" inside the service worker, to keep\n * track globally (even if multiple tabs are open) of the error window.\n */\nclass EsiProxy implements EsiProxyInterface {\n  private readonly _fetchClient;\n  private readonly _esiErrorManager;\n\n  constructor(\n    fetchClient: (\n      input: RequestInfo,\n      init?: RequestInit\n    ) => Promise<Response>,\n    esiErrorManager: EsiErrorManagerInterface\n  ) {\n    this._fetchClient = fetchClient;\n    this._esiErrorManager = esiErrorManager;\n  }\n\n  public async getResponse(\n    request: Request\n  ): Promise<Response> {\n    if (this._esiErrorManager.isErrorWindowBroken()) {\n      return new Response(\n        null,\n        {\n          status: 420,\n          statusText: \"Error window broken, request blocked by service worker\"\n        }\n      );\n    }\n\n    // Default response, this will be returned in case of network error.\n    let response = new Response(\n      null,\n      {\n        status: 502,\n        statusText: \"Network error inside the service worker\"\n      }\n    );\n\n    try {\n      response = await this._fetchClient(request);\n      this._esiErrorManager.saveErrorWindowInfo(response.headers);\n      if (!response.ok) {\n        if (response.status === 420) {  // We are error limited\n          this._esiErrorManager.flagWindowAsBroken();\n        } else {\n          this._esiErrorManager.incrementError();\n        }\n      }\n    } catch(e) {\n      this._esiErrorManager.incrementError();\n    }\n\n    return response;\n  }\n}\n\nexport default EsiProxy;\n","// Intentionally not using an interface\nclass PathGenerator {\n  public readonly base = {\n    allianceList: \"/alliance/\",\n    allianceInfo: \"/alliance/:id\",\n    ancestryInfo: \"/ancestry/:id\",\n    bloodlineInfo: \"/bloodline/:id\",\n    characterInfo: \"/character/:id\",\n    constellationInfo: \"/constellation/:id\",\n    corporationInfo: \"/corporation/:id\",\n    factionInfo: \"/faction/:id\",\n    home: \"/\",\n    raceInfo: \"/race/:id\",\n    regionInfo: \"/region/:id\",\n    search: \"/search\",\n    systemInfo: \"/system/:id\",\n    stationInfo: \"/station/:id\",\n    test: \"/test\",\n    typeInfo: \"/type/:id\",\n  };\n  private readonly _idPlaceholder = \":id\";\n\n  public allianceInfo(id: string): string {\n    return this.base.allianceInfo.replace(this._idPlaceholder, id);\n  }\n\n  public allianceList(): string {\n    return this.base.allianceList;\n  }\n\n  public ancestryInfo(id: string): string {\n    return this.base.ancestryInfo.replace(this._idPlaceholder, id);\n  }\n\n  public bloodlineInfo(id: string): string {\n    return this.base.bloodlineInfo.replace(this._idPlaceholder, id);\n  }\n\n  public characterInfo(id: string): string {\n    return this.base.characterInfo.replace(this._idPlaceholder, id);\n  }\n\n  public corporationInfo(id: string): string {\n    return this.base.corporationInfo.replace(this._idPlaceholder, id);\n  }\n\n  public factionInfo(id: string): string {\n    return this.base.factionInfo.replace(this._idPlaceholder, id);\n  }\n\n  public raceInfo(id: string): string {\n    return this.base.raceInfo.replace(this._idPlaceholder, id);\n  }\n\n  public systemInfo(id: string): string {\n    return this.base.systemInfo.replace(this._idPlaceholder, id);\n  }\n\n  public stationInfo(id: string): string {\n    return this.base.stationInfo.replace(this._idPlaceholder, id);\n  }\n}\n\nexport default PathGenerator;\n","import ImagerInterface, { SupportedSizes } from \"./ImagerInterface\";\n\n\nclass Imager implements ImagerInterface {\n  private readonly _baseUrl = \"https://images.evetech.net/\";\n\n  getAlliance(id: string, size: SupportedSizes | null = null): string {\n    return `${this._baseUrl}alliances/${id}/logo${this._getQuery(size)}`;\n  }\n\n  getCharacter(id: string, size: SupportedSizes | null = null): string {\n    return `${this._baseUrl}characters/${id}/portrait${this._getQuery(size)}`;\n  }\n\n  getCorporation(id: string, size: SupportedSizes | null = null): string {\n    return `${this._baseUrl}corporations/${id}/logo${this._getQuery(size)}`;\n  }\n\n  getTypeIcon(id: string, size: SupportedSizes | null = null): string {\n    return `${this._baseUrl}type/${id}/icon${this._getQuery(size)}`;\n  }\n\n  getTypeRender(id: string, size: SupportedSizes | null = null): string {\n    return `${this._baseUrl}type/${id}/render${this._getQuery(size)}`;\n  }\n\n  private _getQuery(size: SupportedSizes | null): string {\n    return size === null ? \"\" : `?size=${size}`;\n  }\n}\n\nexport default Imager;\n","import EsiClient from \"../EsiClient/EsiClient\";\nimport EsiErrorManagerInterface from \"../EsiErrorManager/EsiErrorManagerInterface\";\nimport EsiErrorManager from \"../EsiErrorManager/EsiErrorManager\";\nimport QueryFactoryInterface from \"../QueryFactory/QueryFactoryInterface\";\nimport QueryFactory from \"../QueryFactory/QueryFactory\";\nimport StatusCall from \"../Call/StatusCall/StatusCall\";\nimport StatusCallInterface from \"../Call/StatusCall/StatusCallInterface\";\nimport UniverseNamesCallInterface from \"../Call/UniverseNamesCall/UniverseNamesCallInterface\";\nimport UniverseNamesCall from \"../Call/UniverseNamesCall/UniverseNamesCall\";\nimport AllianceListCallInterface from \"../Call/AllianceListCall/AllianceListCallInterface\";\nimport AllianceListCall from \"../Call/AllianceListCall/AllianceListCall\";\nimport AllianceInfoCallInterface from \"../Call/AllianceInfoCall/AllianceInfoCallInterface\";\nimport AllianceInfoCall from \"../Call/AllianceInfoCall/AllianceInfoCall\";\nimport NameRepositoryInterface from \"../../repository/NameRepository/NameRepositoryInterface\";\nimport NameRepository from \"../../repository/NameRepository/NameRepository\";\nimport AllianceCorporationsCallInterface from \"../Call/AllianceCorporationsCall/AllianceCorporationsCallInterface\";\nimport AllianceCorporationsCall from \"../Call/AllianceCorporationsCall/AllianceCorporationsCall\";\nimport PublicSearchCallInterface from \"../Call/PublicSearchCall/PublicSearchCallInterface\";\nimport PublicSearchCall from \"../Call/PublicSearchCall/PublicSearchCall\";\nimport AllianceRepositoryInterface from \"../../repository/AllianceRepository/AllianceRepositoryInterface\";\nimport AllianceRepository from \"../../repository/AllianceRepository/AllianceRepository\";\nimport SearchRepositoryInterface from \"../../repository/SearchRepository/SearchRepositoryInterface\";\nimport SearchRepository from \"../../repository/SearchRepository/SearchRepository\";\nimport CharacterInfoCallInterface from \"../Call/CharacterInfoCall/CharacterInfoCallInterface\";\nimport CharacterInfoCall from \"../Call/CharacterInfoCall/CharacterInfoCall\";\nimport ConstellationInfoCallInterface from \"../Call/ConstellationInfoCall/ConstellationInfoCallInterface\";\nimport ConstellationInfoCall from \"../Call/ConstellationInfoCall/ConstellationInfoCall\";\nimport CorporationInfoCall from \"../Call/CorporationInfoCall/CorporationInfoCall\";\nimport TypeInfoCallInterface from \"../Call/TypeInfoCall/TypeInfoCallInterface\";\nimport TypeInfoCall from \"../Call/TypeInfoCall/TypeInfoCall\";\nimport RegionInfoCallInterface from \"../Call/RegionInfoCall/RegionInfoCallInterface\";\nimport RegionInfoCall from \"../Call/RegionInfoCall/RegionInfoCall\";\nimport SystemInfoCallInterface from \"../Call/SystemInfoCall/SystemInfoCallInterface\";\nimport SystemInfoCall from \"../Call/SystemInfoCall/SystemInfoCall\";\nimport StationInfoCall from \"../Call/StationInfoCall/StationInfoCall\";\nimport StationInfoCallInterface from \"../Call/StationInfoCall/StationInfoCallInterface\";\nimport FactionCallInterface from \"../Call/FactionCall/FactionCallInterface\";\nimport CorporationInfoCallInterface from \"../Call/CorporationInfoCall/CorporationInfoCallInterface\";\nimport FactionCall from \"../Call/FactionCall/FactionCall\";\nimport AncestryCallInterface from \"../Call/AncestryCall/AncestryCallInterface\";\nimport AncestryCall from \"../Call/AncestryCall/AncestryCall\";\nimport BloodlineCallInterface from \"../Call/BloodlineCall/BloodlineCallInterface\";\nimport BloodlineCall from \"../Call/BloodlineCall/BloodlineCall\";\nimport AncestryRepositoryInterface from \"../../repository/AncestryRepository/AncestryRepositoryInterface\";\nimport AncestryRepository from \"../../repository/AncestryRepository/AncestryRepository\";\nimport BloodlineRepositoryInterface from \"../../repository/BloodlineRepository/BloodlineRepositoryInterface\";\nimport BloodlineRepository from \"../../repository/BloodlineRepository/BloodlineRepository\";\nimport CharacterRepository from \"../../repository/CharacterRepository/CharacterRepository\";\nimport CharacterRepositoryInterface from \"../../repository/CharacterRepository/CharacterRepositoryInterface\";\nimport RaceCallInterface from \"../Call/RaceCall/RaceCallInterface\";\nimport RaceCall from \"../Call/RaceCall/RaceCall\";\nimport RaceRepositoryInterface from \"../../repository/RaceRepository/RaceRepositoryInterface\";\nimport RaceRepository from \"../../repository/RaceRepository/RaceRepository\";\nimport CharacterCorpHistoryCallInterface from \"../Call/CharacterCorpHistoryCall/CharacterCorpHistoryCallInterface\";\nimport CharacterCorpHistoryCall from \"../Call/CharacterCorpHistoryCall/CharacterCorpHistoryCall\";\nimport DateFormatterInterface from \"../DateFormatter/DateFormatterInterface\";\nimport DateFormatter from \"../DateFormatter/DateFormatter\";\nimport CorporationAllianceHistoryCallInterface\n  from \"../Call/CorporationAllianceHistoryCall/CorporationAllianceHistoryCallInterface\";\nimport CorporationAllianceHistoryCall from \"../Call/CorporationAllianceHistoryCall/CorporationAllianceHistoryCall\";\nimport CorporationRepositoryInterface from \"../../repository/CorporationRepository/CorporationRepositoryInterface\";\nimport CorporationRepository from \"../../repository/CorporationRepository/CorporationRepository\";\nimport FactionRepositoryInterface from \"../../repository/FactionRepository/FactionRepositoryInterface\";\nimport FactionRepository from \"../../repository/FactionRepository/FactionRepository\";\nimport RSSRepositoryInterface from \"../../repository/RSSRepository/RSSRepositoryInterface\";\nimport RSSRepository from \"../../repository/RSSRepository/RSSRepository\";\nimport StatusRepositoryInterface from \"../../repository/StatusRepository/StatusRepositoryInterface\";\nimport StatusRepository from \"../../repository/StatusRepository/StatusRepository\";\nimport EntityManagerInterface from \"../EntityManager/EntityManagerInterface\";\nimport EntityManager from \"../EntityManager/EntityManager\";\nimport MarketOrdersMigration from \"../EntityManager/Migration/MarketOrdersMigration\";\nimport SettingsMigration from \"../EntityManager/Migration/SettingsMigration\";\nimport SettingsTable from \"../EntityManager/Table/SettingsTable\";\nimport SettingsTableInterface from \"../EntityManager/Table/SettingsTableInterface\";\nimport SettingsRepositoryInterface from \"../../repository/SettingsRepository/SettingsRepositoryInterface\";\nimport SettingsRepository from \"../../repository/SettingsRepository/SettingsRepository\";\nimport EsiProxyInterface from \"../EsiProxy/EsiProxyInterface\";\nimport EsiProxy from \"../EsiProxy/EsiProxy\";\nimport PathGenerator from \"../PathGenerator/PathGenerator\";\nimport ImagerInterface from \"../Imager/ImagerInterface\";\nimport Imager from \"../Imager/Imager\";\n\nclass Container {\n  private _esi: EsiClient | null = null;\n  private _esiProxy: EsiProxyInterface | null = null;\n  private _esiErrorManager: EsiErrorManagerInterface | null = null;\n  private _imager: ImagerInterface | null = null;\n  private _pathGenerator: PathGenerator | null = null;\n\n  get dateFormatter(): DateFormatterInterface {\n    return new DateFormatter();\n  }\n\n  get entityManager(): EntityManagerInterface {\n    return new EntityManager(\n      [\n        new MarketOrdersMigration(),\n        new SettingsMigration()\n      ]\n    );\n  }\n\n  get esi(): EsiClient {\n    if (this._esi === null) {\n      this._esi = new EsiClient(\n        (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n          return fetch(input, init);\n        },\n        this.esiErrorManager\n      );\n    }\n\n    return this._esi;\n  }\n\n  get esiErrorManager(): EsiErrorManagerInterface {\n    if (this._esiErrorManager === null) {\n      this._esiErrorManager = new EsiErrorManager();\n    }\n\n    return this._esiErrorManager;\n  }\n\n  get esiProxy(): EsiProxyInterface {\n    if (this._esiProxy === null) {\n      this._esiProxy = new EsiProxy(\n        (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n          return fetch(input, init);\n        },\n        this.esiErrorManager\n      );\n    }\n\n    return this._esiProxy;\n  }\n\n  get imager(): ImagerInterface {\n    if (this._imager === null) {\n      this._imager = new Imager();\n    }\n\n    return this._imager;\n  }\n\n  get pathGenerator(): PathGenerator {\n    if (this._pathGenerator === null) {\n      this._pathGenerator = new PathGenerator();\n    }\n\n    return this._pathGenerator;\n  }\n\n  get queryFactory(): QueryFactoryInterface {\n    return new QueryFactory();\n  }\n\n  // CALL //-------------------------------------------------------------------\n\n  get allianceCorporationsCall(): AllianceCorporationsCallInterface {\n    return new AllianceCorporationsCall(this.esi);\n  }\n\n  get allianceInfoCall(): AllianceInfoCallInterface {\n    return new AllianceInfoCall(this.esi);\n  }\n\n  get allianceListCall(): AllianceListCallInterface {\n    return new AllianceListCall(this.esi);\n  }\n\n  get ancestryCall(): AncestryCallInterface {\n    return new AncestryCall(this.esi);\n  }\n\n  get bloodlineCall(): BloodlineCallInterface {\n    return new BloodlineCall(this.esi);\n  }\n\n  get characterCorpHistoryCall(): CharacterCorpHistoryCallInterface {\n    return new CharacterCorpHistoryCall(this.esi);\n  }\n\n  get characterInfoCall(): CharacterInfoCallInterface {\n    return new CharacterInfoCall(this.esi);\n  }\n\n  get constellationInfoCall(): ConstellationInfoCallInterface {\n    return new ConstellationInfoCall(this.esi);\n  }\n\n  get corporationAllianceHistoryCall(): CorporationAllianceHistoryCallInterface {\n    return new CorporationAllianceHistoryCall(this.esi);\n  }\n\n  get corporationInfoCall(): CorporationInfoCallInterface {\n    return new CorporationInfoCall(this.esi);\n  }\n\n  get factionCall(): FactionCallInterface {\n    return new FactionCall(this.esi);\n  }\n\n  get publicSearchCall(): PublicSearchCallInterface {\n    return new PublicSearchCall(this.esi, this.queryFactory);\n  }\n\n  get raceCall(): RaceCallInterface {\n    return new RaceCall(this.esi);\n  }\n\n  get regionInfoCall(): RegionInfoCallInterface {\n    return new RegionInfoCall(this.esi);\n  }\n\n  get statusCall(): StatusCallInterface {\n    return new StatusCall(this.esi);\n  }\n\n  get stationInfoCall(): StationInfoCallInterface {\n    return new StationInfoCall(this.esi);\n  }\n\n  get systemInfoCall(): SystemInfoCallInterface {\n    return new SystemInfoCall(this.esi);\n  }\n\n  get typeInfoCall(): TypeInfoCallInterface {\n    return new TypeInfoCall(this.esi);\n  }\n\n  get universeNamesCall(): UniverseNamesCallInterface {\n    return new UniverseNamesCall(this.esi);\n  }\n\n  // CALL - END // ------------------------------------------------------------\n\n  // REPOSITORY //-------------------------------------------------------------\n\n  get allianceRepository(): AllianceRepositoryInterface {\n    return new AllianceRepository(\n      this.allianceListCall,\n      this.allianceInfoCall,\n      this.allianceCorporationsCall,\n      this.nameRepository\n    );\n  }\n\n  get ancestryRepository(): AncestryRepositoryInterface {\n    return new AncestryRepository(this.ancestryCall);\n  }\n\n  get bloodlineRepository(): BloodlineRepositoryInterface {\n    return new BloodlineRepository(\n      this.bloodlineCall,\n      this.raceRepository,\n      this.nameRepository\n    );\n  }\n\n  get characterRepository(): CharacterRepositoryInterface {\n    return new CharacterRepository(\n      this.characterInfoCall,\n      this.characterCorpHistoryCall,\n      this.ancestryRepository,\n      this.bloodlineRepository,\n      this.nameRepository,\n      this.raceRepository\n    );\n  }\n\n  get corporationRepository(): CorporationRepositoryInterface {\n    return new CorporationRepository(\n      this.corporationInfoCall,\n      this.corporationAllianceHistoryCall,\n      this.nameRepository\n    );\n  }\n\n  get factionRepository(): FactionRepositoryInterface {\n    return new FactionRepository(\n      this.factionCall,\n      this.nameRepository\n    );\n  }\n\n  get nameRepository(): NameRepositoryInterface {\n    return new NameRepository(this.universeNamesCall);\n  }\n\n  get raceRepository(): RaceRepositoryInterface {\n    return new RaceRepository(\n      this.raceCall,\n      this.nameRepository,\n      this.factionRepository\n    );\n  }\n\n  get rssRepository(): RSSRepositoryInterface {\n    return new RSSRepository();\n  }\n\n  get searchRepository(): SearchRepositoryInterface {\n    return new SearchRepository(\n      this.nameRepository,\n      this.publicSearchCall,\n      this.pathGenerator\n    );\n  }\n\n  get settingsRepository(): SettingsRepositoryInterface {\n    return new SettingsRepository(this.settingsTable);\n  }\n\n  get statusRepository(): StatusRepositoryInterface {\n    return new StatusRepository(this.statusCall);\n  }\n\n  // REPOSITORY - END // ------------------------------------------------------\n\n  // TABLE //------------------------------------------------------------------\n\n  get settingsTable(): SettingsTableInterface {\n    return new SettingsTable(this.entityManager);\n  }\n}\n\nexport default Container;\n","/// <reference lib=\"webworker\" />\n/* eslint-disable no-restricted-globals */\nimport Container from \"./service/Container/Container\";\n\ndeclare const self: ServiceWorkerGlobalScope;\n\n// eslint-disable-next-line no-restricted-globals\n// @ts-ignore\nconst ignored = self.__WB_MANIFEST;\n\n\nconst { esi, esiProxy } = new Container();\n\nself.addEventListener('install', function(event) {\n  event.waitUntil(\n    console.log(\"Service worker installed\")\n  );\n});\n\nself.addEventListener('activate', function(event) {\n  event.waitUntil(\n    console.log(\"Service worker activated\")\n  );\n});\n\nself.addEventListener('fetch', event => {\n  event.respondWith(\n    event.request.url.startsWith(esi.baseUrl)\n    ? esiProxy.getResponse(event.request)\n    : fetch(event.request)\n  );\n});\n\n\n// old inactive stuff, keeping it for reference -----------------------------//\n\nfunction sleep(milliseconds: number): void {\n  const date = Date.now();\n  let currentDate = null;\n  do {\n    currentDate = Date.now();\n  } while (currentDate - date < milliseconds);\n}\n\nasync function doSomeStuff(): Promise<any> {\n  while (1) {\n    console.log(\"uhm\");\n    sleep(1000);\n  }\n}\n"]}