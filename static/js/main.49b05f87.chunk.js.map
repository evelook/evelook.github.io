{"version":3,"sources":["feature/notifier/notifierActions.ts","component/Notifier/Notifier.tsx","context/DepsContext/DepsContext.tsx","feature/theme/themeActions.ts","hooks.ts","component/AppBar/AppBar.tsx","component/Home/RSSContent/RSSContent.tsx","component/Home/RSSSkeleton/RSSSkeleton.tsx","component/Home/RSSError/RSSError.tsx","component/Home/RSSPaper/RSSPaper.tsx","component/Home/AutocompleteOption/AutocompleteOption..tsx","component/Home/AutocompleteTextField/AutocompleteTextField.tsx","component/Home/HomeSearch/HomeSearch.tsx","feature/notifier/notifierKeys.ts","component/StatusCheck/StatusCheck.tsx","component/Home/Home.tsx","repository/SearchRepository/RepoCategory.ts","component/LoadingFullPage/LoadingFullPage.tsx","component/Search/SearchForm/SearchForm.tsx","component/Search/ResultTable/ResultTable.tsx","component/Search/ResultContainer/ResultContainer.tsx","component/ApiErrorFullPage/ApiErrorFullPage.tsx","component/Search/SearchResult/SearchResult.tsx","component/Search/SearchEmpty/SearchEmpty.tsx","component/Search/Search.tsx","component/AllianceInfo/CorpListTable/CorpListTable.tsx","component/AllianceInfo/AllianceInfoContent/AllianceInfoContent.tsx","component/AllianceInfo/AllianceInfo.tsx","component/CharacterInfo/CorpHistoryTable/CorpHistoryTable.tsx","component/EntityDescription/EntityDescription.tsx","component/CharacterInfo/CharacterInfoContent/CharacterInfoContent.tsx","component/CharacterInfo/CharacterInfo.tsx","component/ConstellationInfo/ConstellationInfo.tsx","component/CorporationInfo/AllianceHistoryTable/AllianceHistoryTable.tsx","component/CorporationInfo/CorporationInfoContent/CorporationInfoContent.tsx","component/CorporationInfo/CorporationInfo.tsx","component/TypeInfo/TypeInfo.tsx","component/RegionInfo/RegionInfo.tsx","component/SystemInfo/SystemInfo.tsx","component/StationInfo/StationInfo.tsx","component/FactionInfo/FactionInfo.tsx","component/RaceInfo/RaceInfo.tsx","component/AncestryInfo/AncestryInfo.tsx","component/BloodlineInfo/BloodlineInfo.tsx","component/Test/Test.tsx","component/AllianceList/AlliancesTable/AlliancesTable.tsx","component/AllianceList/AllianceList.tsx","component/Dashboard/Dashboard.tsx","component/MyApp/MyApp.tsx","service/EsiClient/EsiClient.ts","service/EsiErrorManager/EsiErrorManager.ts","service/QueryFactory/Query.ts","service/QueryFactory/QueryFactory.ts","error/EsiError/EsiError.ts","service/Call/StatusCall/StatusCall.ts","service/Call/UniverseNamesCall/UniverseNamesCall.ts","service/Call/AllianceListCall/AllianceListCall.ts","service/Call/AllianceInfoCall/AllianceInfoCall.ts","repository/NameRepository/NameRepository.ts","service/Call/AllianceCorporationsCall/AllianceCorporationsCall.ts","service/Call/PublicSearchCall/PublicSearchCall.ts","repository/AllianceRepository/AllianceRepository.ts","service/Call/PublicSearchCall/EsiCategory.ts","repository/SearchRepository/SearchRepository.ts","service/Call/CharacterInfoCall/CharacterInfoCall.ts","service/Call/ConstellationInfoCall/ConstellationInfoCall.ts","service/Call/CorporationInfoCall/CorporationInfoCall.ts","service/Call/TypeInfoCall/TypeInfoCall.ts","service/Call/RegionInfoCall/RegionInfoCall.ts","service/Call/SystemInfoCall/SystemInfoCall.ts","service/Call/StationInfoCall/StationInfoCall.ts","service/Call/FactionCall/FactionCall.ts","service/Call/AncestryCall/AncestryCall.ts","service/Call/BloodlineCall/BloodlineCall.ts","repository/AncestryRepository/AncestryRepository.ts","repository/AbstractRepository/AbstractRepository.ts","repository/BloodlineRepository/BloodlineRepository.ts","repository/CharacterRepository/CharacterRepository.ts","service/Call/RaceCall/RaceCall.ts","repository/RaceRepository/RaceRepository.ts","service/Call/CharacterCorpHistoryCall/CharacterCorpHistoryCall.ts","service/DateFormatter/DateFormatter.ts","service/Call/CorporationAllianceHistoryCall/CorporationAllianceHistoryCall.ts","repository/CorporationRepository/CorporationRepository.ts","repository/FactionRepository/FactionRepository.ts","repository/RSSRepository/RSSRepository.ts","repository/StatusRepository/StatusRepository.ts","service/EntityManager/EntityManager.ts","service/EntityManager/Migration/MarketOrdersMigration.ts","service/EntityManager/Migration/SettingsMigration.ts","service/EntityManager/Table/SettingsTable.ts","service/EntityManager/Table/BaseTable.ts","service/EntityManager/Store/SettingsStoreInterface.ts","repository/SettingsRepository/SettingsRepository.ts","service/EsiProxy/EsiProxy.ts","service/PathGenerator/PathGenerator.ts","service/Container/Container.ts","feature/drawer/drawerSlice.ts","feature/theme/themeSlice.ts","feature/notifier/notifierSlice.ts","reducer.ts","store.ts","serviceWorker.ts","index.tsx"],"names":["ENQUEUE_SNACKBAR","CLOSE_ONE","CLOSE_ALL","REMOVE_SNACKBAR","enqueueSnackbar","notification","key","options","type","Date","getTime","Math","random","closeOne","displayed","Notifier","dispatch","useDispatch","notifications","useSelector","store","notifier","useSnackbar","closeSnackbar","useEffect","forEach","id","message","dismissed","includes","onClose","event","reason","myKey","onExited","Number","removeOne","filter","DepsContext","createContext","useDeps","useContext","DepsProvider","children","container","Provider","value","THEME_CHANGE_MODE","THEME_SET_MODE","changeDarkMode","getState","a","state","darkMode","theme","settingsRepository","setDarkMode","catch","e","console","error","useStyles","makeStyles","createStyles","root","display","appBar","breakpoints","up","width","marginLeft","menuButton","marginRight","spacing","AppBar","title","Fragment","useTheme","classes","toolbarVariant","useMediaQuery","position","className","Toolbar","variant","IconButton","color","aria-label","edge","onClick","Typography","noWrap","buttonLinkParent","right","gridItem","down","paddingTop","RSSContent","entries","isSmall","dateFormatter","length","splice","map","entry","index","ListItem","ListItemText","primary","secondary","onlyDate","publishingDate","primaryTypographyProps","ListItemSecondaryAction","target","href","link","RSSSkeleton","Skeleton","height","RSSError","retry","style","paddingBottom","paddingLeft","paddingRight","Alert","severity","action","Button","size","cardTitle","RSSPaper","source","useState","paperContent","setPaperContent","setRetry","then","Grid","item","xs","md","Paper","List","dense","button","chip","flexAlignCenter","alignItems","flexJustifyCenter","justifyContent","margin","AutocompleteOption","option","Link","underline","name","Chip","clickable","label","prettyCategory","AutocompleteTextField","params","searchTextErrorText","searchTextIsError","submitWithoutOptionHandler","TextField","helperText","fullWidth","InputProps","endAdornment","InputAdornment","padding","popper","zIndex","createLink","category","HomeSearch","history","useHistory","autocompleteCache","useRef","searchOptions","setSearchOptions","apiOptions","setApiOptions","inputValue","setInputValue","isEveOnline","setIsEveOnline","searchInProgress","setSearchInProgress","setSearchTextErrorText","setSearchTextIsError","searchTextRef","searchRepository","statusRepository","filterOptions","createFilterOptions","limit","handleSubmitWithoutOption","push","Autocomplete","disableClearable","freeSolo","getOptionLabel","ListboxProps","onFocus","result","onChange","preventDefault","onInputChange","forAutocomplete","names","finally","onKeyPress","PopperComponent","props","Popper","modifiers","flip","enabled","ref","renderInput","renderOption","colorBlack","StatusCheck","isOnline","onClickCallback","closeOneSnackbarAction","anchorOrigin","horizontal","vertical","autoHideDuration","preventDuplicate","enqueueSnackbarAction","log","content","flexDirection","flexGrow","footerText","searchGridItem","minWidth","toolbar","minHeight","Home","rssRepository","direction","justify","getEveNewsFeed","getDevBlogsFeed","getPatchNotesFeed","align","repoCategories","circularProgress","marginTop","LoadingFullPage","CircularProgress","form","marginBottom","filledGrid","emptyGrid","selectGridItem","order","textGridItem","emptyGridItem","checkGridItem","SearchForm","needle","strict","categoryValue","setCategoryValue","strictValue","setStrictValue","submit","searchTextElement","current","text","replace","String","autoComplete","sm","FormControl","InputLabel","Select","labelId","MenuItem","inputRef","defaultValue","FormControlLabel","control","Checkbox","checked","arrowRightIconStyle","verticalAlign","emptyIconCell","ResultTable","data","denseTable","tableOptions","download","elevation","filterType","print","responsive","rowsPerPage","rowsPerPageOptions","search","selectableRows","setTableProps","viewColumns","columns","sort","customHeadLabelRender","customBodyRender","tableMeta","updateValue","rowData","component","to","setCellProps","ResultContainer","resultData","maxWidth","ApiErrorFullPage","AlertTitle","SearchResult","resultComponent","setResultComponent","publicSearch","SearchEmpty","Search","query","URLSearchParams","useLocation","queryCategory","get","queryStrict","queryNeedle","fixedHeader","rowHover","CorpListTable","corpList","customHeadRender","corpID","buttonCell","gridContainer","gridWithTable","logo","textAlign","nameCell","backgroundColor","palette","main","contrastText","AllianceInfoContent","alt","src","TableContainer","Table","TableBody","TableRow","TableCell","colSpan","ticker","creator_name","creator_id","creator_corporation_name","creator_corporation_id","date_founded","undefined","executor_corporation_name","executor_corporation_id","faction_name","faction_id","corporations","AllianceInfo","apiResult","setApiResult","allianceRepository","useParams","getOne","styles","corpImg","extractCorpID","CorpHistoryTable","withDateTime","EntityDescription","paragraphs","bio","split","paragraph","entityLogoCell","entityLogoGrid","entityLogoImg","bioCell","successColorText","success","errorColorText","CharacterInfoContent","corporation_id","corporation_name","alliance_name","alliance_id","birthday","security_status","race_name","ancestry_id","ancestry_name","bloodline_name","gender","toUpperCase","substr","description","corporation_history","CharacterInfo","characterRepository","ConstellationInfo","allianceImg","extractAllianceID","AllianceHistoryTable","alliances","isDeleted","start","end","whiteSpace","noWrapCell","CorporationInfoContent","ceo_id","ceo_name","member_count","home_station_id","home_station_name","tax_rate","shares","war_eligible","url","alliance_history","CorporationInfo","corporationRepository","TypeInfo","RegionInfo","SystemInfo","StationInfo","FactionInfo","RaceInfo","AncestryInfo","BloodlineInfo","snackbarAction","Test","closeAllSnackbar","sortOrder","AlliancesTable","AllianceList","getList","drawer","flexShrink","drawerPaper","logoText","fontFamily","join","fontWeight","textDecoration","darkModeToggle","nested","ResponsiveDrawer","window","mobileOpen","openListMore","setOpenListMore","pathGenerator","getDarkMode","savedDarkMode","save","payload","handleCloseDrawer","Divider","FormGroup","row","ListItemIcon","Collapse","in","timeout","unmountOnExit","disablePadding","allianceList","document","body","Hidden","lgUp","implementation","Drawer","anchor","open","paper","ModalProps","keepMounted","mdDown","exact","path","base","home","allianceInfo","ancestryInfo","bloodlineInfo","characterInfo","constellationInfo","corporationInfo","typeInfo","raceInfo","regionInfo","systemInfo","stationInfo","factionInfo","test","createMuiTheme","MyApp","ThemeProvider","CssBaseline","EsiClient","fetchClient","esiErrorManager","baseUrl","_userAgent","_fetchClient","_esiErrorManager","this","endUrl","method","isErrorWindowBroken","Error","headers","cache","uri","isEmpty","concat","toString","JSON","stringify","response","saveErrorWindowInfo","ok","status","flagWindowAsBroken","incrementError","EsiErrorManager","_errorReset","now","_errorRemain","_resetErrorWindow","limitReset","limitRemain","headerErrorReset","headerErrorRemain","Query","spaceDelimiter","_spaceDelimiter","_query","attribute","values","Object","keys","queryString","hasOwnProperty","encodeURIComponent","QueryFactory","EsiError","statusText","StatusCall","esiClient","_esiClient","_url","getResponse","json","UniverseNamesCall","ids","AllianceListCall","AllianceInfoCall","_getUrl","NameRepository","universeNamesCaller","_universeNamesCaller","_removeBannedIDs","allResolvedIDs","failuresCount","maxAllowedFailures","chunks","chunk","localResolvedIDs","round","indexOf","AllianceCorporationsCall","PublicSearchCall","queryFactory","_queryFactory","searchString","categories","make","add","AllianceRepository","allianceListCall","allianceInfoCall","allianceCorpsCall","nameRepo","_allianceListCall","_allianceInfoCall","_allianceCorpsCall","_nameRepo","Promise","all","esiAlliance","esiAllianceCorps","repoAlliance","idsToResolve","_pushUnique","resolveGeneric","allianceNames","corpsNames","resolvedName","corpName","allianceIDs","resolvedIDs","inputArray","esiCategories","SearchRepository","publicSearchCall","_publicSearchCall","_pathGenerator","categoriesForCall","_composeResult","cacheRef","uniNames","justNames","lowercaseSearchString","toLowerCase","uniName","startsWith","orderedNames","b","CharacterInfoCall","ConstellationInfoCall","CorporationInfoCall","TypeInfoCall","RegionInfoCall","SystemInfoCall","StationInfoCall","FactionCall","AncestryCall","BloodlineCall","AncestryRepository","ancestryCall","_ancestryCall","ancestries","foundAncestry","ancestry","AbstractRepository","BloodlineRepository","bloodlineCall","raceRepo","_bloodlineCall","_raceRepo","_getEsiBloodline","foundBloodline","race_id","ship_type_id","raceNamePromise","getName","_getIDsToResolve","indexedNames","_orderNamesByID","ship_type_name","bloodlines","bloodline","bloodline_id","CharacterRepository","characterInfoCall","characterCorpHistoryCall","ancestryRepo","bloodlineRepo","_characterInfoCall","_characterCorpHistoryCall","_ancestryRepo","_bloodlineRepo","_getCorpHistory","esiChar","repoCorpHistory","repoChar","ancestryPromise","bloodlinePromise","namesPromise","racePromise","corpHistory","corp","is_deleted","foundName","RaceCall","RaceRepository","raceCall","factionRepo","_raceCall","_factionRepo","esiRaces","repoRaces","esiRace","repoRace","_getEsiRace","foundRace","races","race","CharacterCorpHistoryCall","DateFormatter","date","yyyy","getUTCFullYear","mm","toStringWithLeadingZero","getUTCMonth","dd","getUTCDate","hr","getUTCHours","min","getUTCMinutes","sec","getUTCSeconds","CorporationAllianceHistoryCall","CorporationRepository","corpInfoCall","corpAllianceHistoryCall","_corpInfoCall","_corpAllianceHistoryCall","getAllianceHistory","esiCorp","allianceHistory","repoCorp","recordIDs","indexedCorpHistory","record","allianceNamePlaceholder","record_id","end_date","historyToReturn","i","start_date","unshift","FactionRepository","factionCall","_factionCall","esiFactions","repoFactions","esiFaction","_assembleRepoFaction","_getEsiFaction","foundFaction","factions","faction","militia_corporation_id","solar_system_id","militia_corporation_name","solar_system_name","RSSRepository","_fetch","fetch","StatusRepository","statusCall","_statusCall","players","EntityManager","migrations","_migrations","versions","resolve","reject","dbReq","indexedDB","onupgradeneeded","version","oldVersion","migration","run","onsuccess","onblocked","onerror","code","MarketOrdersMigration","db","createObjectStore","keyPath","autoIncrement","createIndex","SettingsMigration","SettingsTable","em","_em","addMany","items","_getReadwriteTransaction","transaction","_getObjectStore","oncomplete","_getErrorMessage","clear","_getReadonlyTransaction","request","count","delete","_get","keyRange","getAll","putMany","put","getConnection","connection","objectStore","KEY_DARK_MODE","SettingsRepository","settingsTable","_settingsTable","putOne","EsiProxy","Response","PathGenerator","_idPlaceholder","Container","_esi","_esiProxy","input","init","esi","allianceCorporationsCall","nameRepository","raceRepository","ancestryRepository","bloodlineRepository","corporationInfoCall","corporationAllianceHistoryCall","universeNamesCall","factionRepository","entityManager","initialState","rootReducer","combineReducers","actionNotification","createStore","applyMiddleware","thunk","withExtraArgument","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","maxSnack","getElementById","URL","process","origin","addEventListener","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.49b05f87.chunk.js","sourcesContent":["import SnackbarNotificationInterface from \"./SnackbarNotificationInterface\";\n\nexport const ENQUEUE_SNACKBAR = 'ENQUEUE_SNACKBAR';\nexport const CLOSE_ONE = 'CLOSE_ONE';\nexport const CLOSE_ALL = 'CLOSE_ALL';\nexport const REMOVE_SNACKBAR = 'REMOVE_SNACKBAR';\n\nexport const enqueueSnackbar = (notification: SnackbarNotificationInterface) => {\n  const key = notification.options && notification.options.key;\n\n  return {\n    type: ENQUEUE_SNACKBAR,\n    notification: {\n      ...notification,\n      key: key || new Date().getTime() + Math.random(),\n    },\n  };\n};\n\nexport const closeOne = (key: number) => ({\n  type: CLOSE_ONE,\n  key,\n});\n\nexport const closeAll = () => ({\n  type: CLOSE_ALL,\n});\n\nexport const removeOne = (key: number) => ({\n  type: REMOVE_SNACKBAR,\n  key,\n});\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSnackbar } from 'notistack';\nimport { removeOne } from '../../feature/notifier/notifierActions'\nimport { RootState } from \"../../store\";\n\nlet displayed: number[] = [];\n\nexport default function Notifier() {\n  const dispatch = useDispatch();\n  const notifications = useSelector((store: RootState) => store.notifier.notifications);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const storeDisplayed = (id: number) => {\n    displayed = [...displayed, id];\n  };\n\n  const removeDisplayed = (id: number) => {\n    displayed = [...displayed.filter(key => id !== key)];\n  };\n\n  useEffect(() => {\n    notifications.forEach(({ key, message, options = {}, dismissed = false }) => {\n      if (dismissed) {\n        closeSnackbar(key);\n\n        return;\n      }\n\n      if (displayed.includes(key)) {\n        return;\n      }\n\n      enqueueSnackbar(message, {\n        key,\n        ...options,\n        onClose: (event, reason, myKey) => {\n          if (options.onClose) {\n            options.onClose(event, reason, myKey);\n          }\n        },\n        onExited: (event, myKey) => {\n          // remove this snackbar from redux store\n          let key = Number(myKey);\n          dispatch(removeOne(key));\n          removeDisplayed(key);\n        },\n      });\n\n      // keep track of snackbars that we've displayed\n      storeDisplayed(key);\n    });\n  }, [notifications, closeSnackbar, enqueueSnackbar, dispatch]);\n\n  return null;\n}\n","import React, { createContext, useContext } from \"react\";\nimport Container from \"../../service/Container/Container\";\n\nlet DepsContext = createContext({});\n\nexport function useDeps(): any {\n  return useContext(DepsContext);\n}\n\nexport function DepsProvider({children, container}: {children: any, container: Container}) {\n  return (\n    <DepsContext.Provider value={container}>\n      {children}\n    </DepsContext.Provider>\n  )\n}\n","import Container from \"../../service/Container/Container\";\nimport {RootState} from \"../../store\";\n\nexport const THEME_CHANGE_MODE = 'theme/changeMode';\nexport const THEME_SET_MODE = 'theme/setMode';\n\nexport async function changeDarkMode(\n  dispatch: any,\n  getState: any,\n  container: Container\n) {\n  let state = getState() as RootState;\n  let { darkMode }: { darkMode: boolean } = state.theme;\n  let { settingsRepository } = container;\n\n  settingsRepository.setDarkMode(!darkMode).catch(e => console.error(e));\n  dispatch({ type: THEME_CHANGE_MODE });\n}\n\nexport function setDarkMode(darkMode: boolean, save: boolean) {\n  return function(dispatch: any, getState: any, container: Container) {\n    let { settingsRepository } = container;\n\n    if (save) {\n      settingsRepository.setDarkMode(darkMode).catch(e => console.error(e));\n    }\n    dispatch({ type: THEME_SET_MODE, payload: darkMode });\n  };\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport MUIAppBar from '@material-ui/core/AppBar';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useDispatch } from 'react-redux';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      [theme.breakpoints.up('lg')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('lg')]: {\n        display: 'none',\n      },\n    },\n  }),\n);\n\nexport default function AppBar(\n  {\n    title = \"\",\n    children = <React.Fragment />\n  }: {\n    title: string,\n    children?: React.ReactNode\n  }\n) {\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const toolbarVariant = useMediaQuery(theme.breakpoints.up('sm')) ? \"dense\" : \"regular\";\n\n  return (\n    <MUIAppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar variant={toolbarVariant}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          edge=\"start\"\n          onClick={() => dispatch({type: 'drawer/mobileOpen'})}\n          className={classes.menuButton}\n        >\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" noWrap>\n          {title}\n        </Typography>\n        {children}\n      </Toolbar>\n    </MUIAppBar>\n  );\n}\n","import React from 'react';\nimport RSSFeedEntryInterface from \"../../../repository/RSSRepository/RSSFeedEntryInterface\";\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport {makeStyles, Theme, createStyles, useTheme} from '@material-ui/core/styles';\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport ListItem from '@material-ui/core/ListItem';\nimport { useDeps } from \"../../../context/DepsContext/DepsContext\";\nimport DateFormatterInterface from \"../../../service/DateFormatter/DateFormatterInterface\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonLinkParent: {\n      right: 0,\n    },\n    gridItem: {\n      [theme.breakpoints.down('xs')]: {\n        paddingTop: theme.spacing(3),\n      }\n    },\n  }),\n);\n\nexport default function RSSContent(\n  {\n    entries\n  }: {\n    entries: RSSFeedEntryInterface[]\n  }\n) {\n  const classes = useStyles();\n  let theme = useTheme();\n  let isSmall = useMediaQuery(theme.breakpoints.down('xs'));\n  let {\n    dateFormatter\n  }: {\n    dateFormatter: DateFormatterInterface\n  } = useDeps();\n\n  if (entries.length > 5) {\n    entries.splice(5, entries.length - 5);\n  }\n\n  return (\n    <React.Fragment>\n      {entries.map((entry, index) => {\n        return (\n          <ListItem key={index}>\n            <ListItemText\n              primary={entry.title}\n              secondary={dateFormatter.onlyDate(new Date(entry.publishingDate))}\n              primaryTypographyProps={ isSmall ? {} : { noWrap: true } }\n            />\n            <ListItemSecondaryAction className={classes.buttonLinkParent}>\n              <IconButton target=\"_blank\" href={entry.link}>\n                <ArrowRightIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      })}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport {ListItem} from \"@material-ui/core\";\n\nexport default function RSSSkeleton() {\n  return (\n    <React.Fragment>\n      <ListItem>\n        <Skeleton variant=\"rect\" width={\"100%\"} height={52} />\n      </ListItem>\n      <ListItem>\n        <Skeleton variant=\"rect\" width={\"100%\"} height={52} />\n      </ListItem>\n      <ListItem>\n        <Skeleton variant=\"rect\" width={\"100%\"} height={52} />\n      </ListItem>\n      <ListItem>\n        <Skeleton variant=\"rect\" width={\"100%\"} height={52} />\n      </ListItem>\n      <ListItem>\n        <Skeleton variant=\"rect\" width={\"100%\"} height={52} />\n      </ListItem>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport Button from '@material-ui/core/Button';\n\nexport default function RSSError(\n  {\n    retry\n  }: {\n    retry: () => void\n  }\n) {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"300px\",\n        paddingTop: \"4px\",\n        paddingBottom: \"4px\",\n        paddingLeft: \"16px\",\n        paddingRight: \"16px\"\n      }}\n    >\n      <Alert\n        severity=\"error\"\n        action={\n          <Button color=\"inherit\" size=\"small\" onClick={retry}>\n            RETRY\n          </Button>\n        }\n      >\n        Error while fetching the feed.\n      </Alert>\n    </div>\n  )\n}\n","import React, {useEffect, useState} from 'react';\nimport RSSFeedEntryInterface from \"../../../repository/RSSRepository/RSSFeedEntryInterface\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\nimport RSSContent from \"../RSSContent/RSSContent\";\nimport RSSSkeleton from \"../RSSSkeleton/RSSSkeleton\";\nimport RSSError from \"../RSSError/RSSError\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonLinkParent: {\n      right: 0,\n    },\n    cardTitle: {\n      paddingTop: theme.spacing(2),\n      paddingLeft: theme.spacing(3)\n    },\n    gridItem: {\n      [theme.breakpoints.down('xs')]: {\n        paddingTop: theme.spacing(3),\n      }\n    },\n  }),\n);\n\nexport default function RSSPaper(\n  {\n    title,\n    source\n  }: {\n    title: string,\n    source: () => Promise<RSSFeedEntryInterface[]>\n  }\n) {\n  const classes = useStyles();\n  const [paperContent, setPaperContent] = useState<React.ReactElement | null>(<RSSSkeleton />);\n  const [retry, setRetry] = useState<boolean>(false);\n\n  useEffect(() => {\n    setPaperContent(<RSSSkeleton />);\n\n    source()\n      .then(entries => setPaperContent(<RSSContent entries={entries} />))\n      .catch(() => setPaperContent(<RSSError retry={() => setRetry(!retry)}/>));\n  }, [retry]);\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} md={4} className={classes.gridItem}>\n        <Paper>\n          <Typography variant=\"h6\" className={classes.cardTitle}>\n            {title}\n          </Typography>\n          <List dense={true}>\n            {paperContent}\n          </List>\n        </Paper>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport {createStyles, makeStyles} from \"@material-ui/core/styles\";\nimport Link from \"@material-ui/core/Link\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ShortcutIcon from \"@material-ui/icons/Shortcut\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chip from \"@material-ui/core/Chip\";\n\nimport { OptionType } from \"../HomeSearch/HomeSearch\";\n\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    button: {\n      marginRight: 0,\n    },\n    chip: {\n      marginRight: theme.spacing(1.5),\n    },\n    flexAlignCenter: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    flexJustifyCenter: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n    link: {\n      margin: \"0px\",\n      display: \"flex\",\n      width: \"100%\",\n      height: \"100%\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n    },\n  })\n);\n\nexport default function AutocompleteOption(\n  {\n    option,\n    link\n  }: {\n    option: OptionType,\n    link: string\n  }\n) {\n  const classes = useStyles();\n\n  return (\n    <Link\n      className={classes.link}\n      color=\"inherit\"\n      href={`#${link}`}\n      underline=\"none\"\n    >\n      <div className={classes.flexJustifyCenter}>\n        <IconButton\n          aria-label=\"search result action\"\n          className={classes.button}\n          edge=\"end\"\n        >\n          {option.link === null\n            ? <SearchIcon />\n            : <ShortcutIcon />\n          }\n        </IconButton>\n        <Typography className={classes.flexAlignCenter} noWrap={true}>\n          {option.name}\n        </Typography>\n      </div>\n      <Chip\n        className={classes.chip}\n        clickable={true}\n        label={option.prettyCategory}\n        size=\"small\"\n        variant=\"outlined\"\n      />\n    </Link>\n  );\n}\n","import React from 'react';\nimport {AutocompleteRenderInputParams} from \"@material-ui/lab/Autocomplete/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nexport default function AutocompleteTextField(\n  {\n    params,\n    searchTextErrorText,\n    searchTextIsError,\n    submitWithoutOptionHandler\n  }: {\n    params: AutocompleteRenderInputParams,\n    searchTextErrorText: string,\n    searchTextIsError: boolean,\n    submitWithoutOptionHandler: () => void\n  }\n) {\n\n  return (\n    <TextField\n      {...params}\n      color=\"secondary\"\n      error={searchTextIsError}\n      helperText={searchTextErrorText}\n      fullWidth\n      id=\"home-search-text\"\n      label=\"Search\"\n      variant=\"outlined\"\n      InputProps={{\n        ...params.InputProps,\n        type: 'search',\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={submitWithoutOptionHandler}\n              edge=\"end\"\n              style={{ marginRight: \"-7px\" }}\n            >\n              <SearchIcon />\n            </IconButton>\n          </InputAdornment>\n        )\n      }}\n    />\n  );\n}\n","import React, {useRef, useState, useEffect} from \"react\";\nimport {createStyles, makeStyles} from \"@material-ui/core/styles\";\nimport Autocomplete, { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport {AutocompleteInputChangeReason} from \"@material-ui/lab/useAutocomplete/useAutocomplete\";\nimport { useHistory } from \"react-router-dom\";\nimport Popper from \"@material-ui/core/Popper\";\n\nimport { useDeps } from \"../../../context/DepsContext/DepsContext\";\nimport SearchRepositoryInterface from \"../../../repository/SearchRepository/SearchRepositoryInterface\";\nimport ResultWithLinkInterface from \"../../../repository/SearchRepository/ResulWithLinkInterface\";\nimport AutocompleteOption from \"../AutocompleteOption/AutocompleteOption.\";\nimport AutocompleteTextField from \"../AutocompleteTextField/AutocompleteTextField\";\nimport StatusRepositoryInterface from \"../../../repository/StatusRepository/StatusRepositoryInterface\";\nimport {AutocompleteCache} from \"../../../repository/SearchRepository/SearchRepository\";\n\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      padding: 0,\n      margin: 0,\n      \"& li\": {\n        padding: 0,\n        width: \"100%\",\n      }\n    },\n    popper: {\n      zIndex: \"unset\",\n    }\n  })\n);\n\ninterface FakeResult {\n  name: string,\n  prettyCategory: \"search...\",\n  link: string | null\n}\n\nexport type OptionType = ResultWithLinkInterface | FakeResult;\n\nconst createLink = (option: OptionType) => {\n  if (\"id\" in option && option.link !== null) {\n    return option.link;\n  }\n\n  let category = \"all\";\n  if (\"category\" in option) {\n    category = option.category;\n  }\n\n  return `/search?category=${category}&strict=false&needle=${option.name}`\n};\n\nexport default function HomeSearch() {\n  let history = useHistory();\n  let classes = useStyles();\n  let autocompleteCache = useRef<AutocompleteCache>({});\n  // The options going fueling the autocomplete\n  let [searchOptions, setSearchOptions] = useState<OptionType[]>([]);\n  // The options just as returned from the API\n  let [apiOptions, setApiOptions] = useState<Array<ResultWithLinkInterface>>([]);\n  let [inputValue, setInputValue] = useState<string>(\"\");\n  let [isEveOnline, setIsEveOnline] = useState<boolean | null>(null);\n  let [searchInProgress, setSearchInProgress] = useState<boolean>(false);\n  let [searchTextErrorText, setSearchTextErrorText] = useState(\"\");\n  let [searchTextIsError, setSearchTextIsError] = useState(false);\n  let searchTextRef = useRef<HTMLInputElement | null>(null); // FIXME: maybe it's not needed?\n  let {\n    searchRepository,\n    statusRepository\n  }: {\n    searchRepository: SearchRepositoryInterface,\n    statusRepository: StatusRepositoryInterface\n  } = useDeps();\n  const filterOptions = createFilterOptions<OptionType>({\n    limit: 9,\n  });\n\n  // We do this in order to add the user input as a first option,\n  // on top of the api result.\n  useEffect(() => {\n    if (inputValue.length < 3) {\n      setSearchOptions([]);\n\n      return;\n    }\n\n    let inputOption: FakeResult = {\n      name: inputValue,\n      prettyCategory: \"search...\",\n      link: null\n    };\n\n    setSearchOptions([\n      inputOption,\n      ...apiOptions\n    ]);\n  }, [apiOptions, inputValue]);\n\n  // reason = 'input' on manual typing\n  // reason = 'reset' after click on suggestion\n  const handleInputChange = (\n    event: React.ChangeEvent<{}>,\n    value: string,\n    reason: AutocompleteInputChangeReason\n  ): void => {\n    setInputValue(value);\n\n    // When the text box gets cleared with the \"x\" or when\n    // the user backspace without triggering new searches\n    if (value.length < 3) {\n      setApiOptions([]);\n\n      return;\n    }\n\n    if (\n      searchInProgress\n      || isEveOnline === false\n      || reason === \"reset\"\n      || value.length < 3\n      || value.length > 15\n      || value.length % 2 === 0\n    ) {\n      return;\n    }\n\n    setSearchInProgress(true);\n    searchRepository.forAutocomplete(value, \"all\", autocompleteCache)\n      .then(names => {\n        setApiOptions(names);\n      })\n      .catch(e => {\n\n      })\n      .finally(() => {\n        setSearchInProgress(false);\n      });\n  };\n\n  const handleSelect = (\n    event: React.ChangeEvent<{}>,\n    value: string | OptionType,  // no idea where the string type come from, possibly it's the string the user has typed without selecting anything from the box\n    reason: string\n  ): void => {\n    if (typeof value === 'string') {\n      return;\n    }\n\n    event.preventDefault();\n    history.push(createLink(value));\n  }\n\n  // Handle a submit that didn't involved the selection box, so only triggered\n  // by pressing enter while in the text field, or by clicking the search button.\n  const handleSubmitWithoutOption = (): void => {\n    if (inputValue.length < 3) {\n      setSearchTextIsError(true);\n      setSearchTextErrorText(\"It must be at least 3 characters long.\")\n\n      return;\n    }\n\n    history.push(`/search?category=all&strict=false&needle=${inputValue}`);\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent): void => {\n    if (e.key === \"Enter\") {\n      handleSubmitWithoutOption();\n    }\n  }\n\n  const handleFocus = (): void => {\n    if (isEveOnline !== null) {\n      return;\n    }\n\n    statusRepository.isEveOnline()\n      .then(result => setIsEveOnline(result))\n      .catch(e => console.error(e));\n  }\n\n  return (\n    <React.Fragment>\n      <Autocomplete\n        disableClearable\n        filterOptions={filterOptions}\n        freeSolo  // The user input is not bound to provided options.\n        getOptionLabel={(option: OptionType | string) => typeof option === 'string' ? option : option.name}\n        id=\"free-solo-2-demo\"\n        ListboxProps={{\n          className: [classes.root],\n        }}\n        onFocus={handleFocus}\n        onChange={handleSelect}\n        onInputChange={handleInputChange}\n        onKeyPress={handleKeyPress}\n        options={searchOptions}\n        PopperComponent={props => (\n          <Popper\n            {...props}\n            modifiers={{\n              flip: {\n                enabled: false,\n              },\n            }}\n            className={classes.popper}\n          >\n            {props.children}\n          </Popper>\n        )}\n        ref={searchTextRef}\n        renderInput={params => (\n          <AutocompleteTextField\n            params={params}\n            searchTextErrorText={searchTextErrorText}\n            searchTextIsError={searchTextIsError}\n            submitWithoutOptionHandler={handleSubmitWithoutOption}\n          />)}\n        renderOption={(option, state) => (\n          <AutocompleteOption\n            option={option}\n            link={createLink(option)}\n          />\n        )}\n      />\n    </React.Fragment>\n  );\n}\n","export const KEY_EVE_OFFLINE = 1;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from 'react-redux';\n\nimport { useDeps } from \"../../context/DepsContext/DepsContext\";\nimport StatusRepositoryInterface from \"../../repository/StatusRepository/StatusRepositoryInterface\";\nimport {\n  enqueueSnackbar as enqueueSnackbarAction,\n  closeOne as closeOneSnackbarAction\n} from '../../feature/notifier/notifierActions';import Button from \"@material-ui/core/Button\";\nimport { KEY_EVE_OFFLINE } from \"../../feature/notifier/notifierKeys\";\nimport SnackbarNotificationInterface from \"../../feature/notifier/SnackbarNotificationInterface\";\n\nconst colorBlack = { color: \"black\" };\n\nconst snackbarAction = (onClickCallback: () => void) => (\n  <React.Fragment>\n    <Button style={ colorBlack }>\n      CHECK\n    </Button>\n    <Button style={ colorBlack } onClick={onClickCallback}>\n      DISMISS\n    </Button>\n  </React.Fragment>\n);\n\nexport default function StatusCheck() {\n  const dispatch = useDispatch();\n  const enqueueSnackbar = (notification: SnackbarNotificationInterface) => dispatch(enqueueSnackbarAction(notification));\n  const closeSnackbar = (key: number) => dispatch(closeOneSnackbarAction(key));\n  const {\n    statusRepository\n  }: {\n    statusRepository: StatusRepositoryInterface\n  } = useDeps();\n\n  useEffect(() => {\n    statusRepository.isEveOnline()\n      .then(isOnline => {\n        if (!isOnline) {\n          enqueueSnackbar({\n            message: \"EVE is offline, don't hit the API.\",\n            options: {\n              action: key => snackbarAction(() => closeSnackbar(Number(key))),\n              anchorOrigin: {\n                horizontal: \"right\",\n                vertical: \"bottom\",\n              },\n              autoHideDuration: null,\n              key: KEY_EVE_OFFLINE,\n              preventDuplicate: true,\n              variant: 'error',\n            },\n          });\n        }\n      })\n      .catch(e => console.log(`Error while checking EVE status: ${e}`));\n  });\n\n  return null;\n}\n","import React from 'react';\nimport {makeStyles, Theme, createStyles, useTheme} from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { useDeps } from \"../../context/DepsContext/DepsContext\";\nimport AppBar from \"../AppBar/AppBar\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport RSSRepositoryInterface from \"../../repository/RSSRepository/RSSRepositoryInterface\";\nimport RSSPaper from \"./RSSPaper/RSSPaper\";\nimport HomeSearch from \"./HomeSearch/HomeSearch\";\nimport Typography from \"@material-ui/core/Typography\";\nimport StatusCheck from \"../StatusCheck/StatusCheck\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonLinkParent: {\n      right: 0,\n    },\n    cardTitle: {\n      paddingTop: theme.spacing(2),\n      paddingLeft: theme.spacing(3)\n    },\n    content: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-between\",\n\n      height: \"100vh\",\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      [theme.breakpoints.down('xs')]: {\n        padding: 0\n      }\n    },\n    footerText: {\n      paddingTop: theme.spacing(2),\n      [theme.breakpoints.down('xs')]: {\n        paddingBottom: theme.spacing(1),\n      }\n    },\n    searchGridItem: {\n      minWidth: \"40%\",\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(9),\n      [theme.breakpoints.down('lg')]: {\n        minWidth: \"40%\",\n      },\n      [theme.breakpoints.down('md')]: {\n        minWidth: \"60%\",\n      },\n      [theme.breakpoints.down('sm')]: {\n        minWidth: \"70%\",\n      },\n      [theme.breakpoints.down('xs')]: {\n        paddingTop: theme.spacing(3),\n        paddingBottom: theme.spacing(0),\n        minWidth: \"100%\",\n      }\n    },\n\n    // necessary for content to be below app bar\n    toolbar: {\n      minHeight: 56,\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 48,\n      }\n    },\n  }),\n);\n\nexport default function Home(props: {}) {\n  const classes = useStyles();\n  let theme = useTheme();\n  let isSmall = useMediaQuery(theme.breakpoints.down('xs'));\n  let {\n    rssRepository\n  }: {\n    rssRepository: RSSRepositoryInterface\n  } = useDeps();\n\n  return (\n    <React.Fragment>\n      <StatusCheck />\n      <AppBar title=\"Home\" />\n      <main className={classes.content}>\n        <div>\n          <div className={classes.toolbar} />\n\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"center\"\n          >\n\n            <Grid item className={classes.searchGridItem} xs={6}>\n              <HomeSearch />\n            </Grid>\n\n            <Grid item style={{ minWidth: \"100%\" }} xs={6}>\n              <Grid container spacing={isSmall ? 0 : 3}>\n                <RSSPaper\n                  title={\"Official news\"}\n                  source={() => rssRepository.getEveNewsFeed()}\n                />\n                <RSSPaper\n                  title={\"Dev blogs\"}\n                  source={() => rssRepository.getDevBlogsFeed()}\n                />\n                <RSSPaper\n                  title={\"Patch notes\"}\n                  source={() => rssRepository.getPatchNotesFeed()}\n                />\n              </Grid>\n            </Grid>\n\n          </Grid>\n        </div>\n\n        <Typography\n          variant=\"caption\"\n          align=\"center\"\n          className={classes.footerText}\n        >\n          All Eve Related Materials are Property of CCP Games\n        </Typography>\n      </main>\n    </React.Fragment>\n  );\n}\n","const repoCategories = [\"all\", \"agent\", \"alliance\", \"character\", \"constellation\", \"corporation\", \"faction\", \"inventory_type\", \"region\", \"solar_system\", \"station\"] as const;\n\ntype RepoCategory = typeof repoCategories[number];\n\nexport default RepoCategory;\nexport { repoCategories };\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    circularProgress: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      marginTop: theme.spacing(3),\n    }\n  }),\n);\n\nexport default function LoadingFullPage() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.circularProgress}>\n      <CircularProgress color=\"secondary\" />\n    </div>\n  );\n}\n","import Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport React, {ReactElement, useRef, useState} from \"react\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    form: {\n      width: \"100%\",\n      marginBottom: theme.spacing(0.5),\n      [theme.breakpoints.down('xs')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    },\n    filledGrid: {\n      padding: theme.spacing(0.5),\n    },\n    emptyGrid: {\n      padding: theme.spacing(0.5),\n      // Removing the border when hitting the breakpoint\n      [theme.breakpoints.down('xs')]: {\n        padding: 0,\n      }\n    },\n    selectGridItem: {\n      order: 1,\n      [theme.breakpoints.down('xs')]: {\n        order: 2,\n      }\n    },\n    textGridItem: {\n      order: 2,\n      [theme.breakpoints.down('xs')]: {\n        order: 1,\n        paddingBottom: theme.spacing(2),\n      }\n    },\n    emptyGridItem: {\n      order: 3,\n    },\n    checkGridItem: {\n      order: 4,\n    }\n  }),\n);\n\nexport default function SearchForm(\n  {\n    category,\n    needle,\n    strict\n  }: {\n    category: string,\n    needle: string,\n    strict: boolean\n  }\n) {\n  let classes = useStyles();\n  let history = useHistory();\n  let [categoryValue, setCategoryValue] = useState(category);\n  let [strictValue, setStrictValue] = useState(strict);\n  let [searchTextErrorText, setSearchTextErrorText] = useState(\"\");\n  let [searchTextIsError, setSearchTextIsError] = useState(false);\n  let searchTextRef = useRef<HTMLInputElement | null>(null);\n\n  let submit = (): ReactElement | void => {\n    let searchTextElement = searchTextRef.current;\n    if (searchTextElement === null || searchTextElement.value.length < 3) {\n      setSearchTextIsError(true);\n      setSearchTextErrorText(\"It must be at least 3 characters long.\")\n\n      return;\n    }\n\n    let text = searchTextElement.value;\n    history.replace(`/search?category=${categoryValue}&strict=${String(strictValue)}&needle=${text}`);\n  }\n\n  let handleEnterPress = (e: React.KeyboardEvent): void => {\n    if (e.key === \"Enter\") {\n      submit();\n    }\n  }\n\n  return(\n    <form autoComplete=\"off\" className={classes.form}>\n      <Grid container>\n        <Grid item xs={12} sm={4} className={`${classes.filledGrid} ${classes.selectGridItem}`}>\n          <FormControl\n            variant=\"outlined\"\n            fullWidth\n          >\n            <InputLabel id=\"demo-simple-select-outlined-label\">Category</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={categoryValue}\n              onChange={e => setCategoryValue(e.target.value as string)}\n              label=\"Category\"\n              color=\"secondary\"\n            >\n              <MenuItem value={\"all\"}>All</MenuItem>\n              <MenuItem value={\"agent\"}>Agent</MenuItem>\n              <MenuItem value={\"alliance\"}>Alliance</MenuItem>\n              <MenuItem value={\"character\"}>Character</MenuItem>\n              <MenuItem value={\"constellation\"}>Constellation</MenuItem>\n              <MenuItem value={\"corporation\"}>Corporation</MenuItem>\n              <MenuItem value={\"faction\"}>Faction</MenuItem>\n              <MenuItem value={\"inventory_type\"}>Item</MenuItem>\n              <MenuItem value={\"region\"}>Region</MenuItem>\n              <MenuItem value={\"solar_system\"}>System</MenuItem>\n              <MenuItem value={\"station\"}>Station</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12} sm={8} className={`${classes.filledGrid} ${classes.textGridItem}`}>\n          <TextField\n            id=\"outlined-basic\"\n            error={searchTextIsError}\n            helperText={searchTextErrorText}\n            label=\"Search\"\n            variant=\"outlined\"\n            color=\"secondary\"\n            fullWidth\n            onKeyPress={handleEnterPress}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={submit}\n                    edge=\"end\"\n                  >\n                    <SearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            inputRef={searchTextRef}\n            defaultValue={needle}\n          />\n        </Grid>\n        <Grid item xs={12} sm={4} className={`${classes.emptyGrid} ${classes.emptyGridItem}`}>\n        </Grid>\n        <Grid item xs={12} sm={8} className={`${classes.filledGrid} ${classes.checkGridItem}`}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={strictValue}\n                onChange={e => setStrictValue(e.target.checked as boolean)}\n                name=\"checkedA\"\n              />\n            }\n            label=\"Strict\"\n          />\n        </Grid>\n      </Grid>\n    </form>\n  );\n}\n","import React from 'react';\nimport MUIDataTable, {MUIDataTableColumnDef, MUIDataTableOptions} from \"mui-datatables\";\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport ResultWithLinkInterface from \"../../../repository/SearchRepository/ResulWithLinkInterface\";\nimport { Link } from \"react-router-dom\";\nimport IconButton from '@material-ui/core/IconButton';\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    arrowRightIconStyle: {\n      verticalAlign: \"middle\",\n    },\n    emptyIconCell: {\n      minHeight: \"30px\"\n    }\n  }),\n);\n\nexport default function ResultTable(\n  {\n    data\n  }: {\n    data: ResultWithLinkInterface[]\n  }\n) {\n  const theme = useTheme();\n  let classes = useStyles();\n  const denseTable = useMediaQuery(theme.breakpoints.up('sm'));\n\n  let tableOptions: MUIDataTableOptions = {\n    download: false,\n    elevation: 1,\n    filterType: \"checkbox\",\n    print: false,\n    responsive: \"standard\",\n    rowsPerPage: 25,\n    rowsPerPageOptions: [],\n    search: false,\n    selectableRows: \"none\",\n    setTableProps: () => {\n      return {\n        size: denseTable ? \"small\" : \"medium\"\n      };\n    },\n    viewColumns: false\n  };\n\n  const columns: MUIDataTableColumnDef[] = [\n    {\n      name: \"name\",\n      label: \"Name\",\n      options: {\n        filter: false,\n        sort: true,\n      }\n    },\n    {\n      name: \"prettyCategory\",\n      label: \"Category\",\n      options: {\n        filter: true,\n        sort: true,\n      }\n    },\n    {\n      name: \"link\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      }\n    },\n    {\n      name: \"id\",\n      options: {\n        filter: false,\n        sort: false,\n        display: false,\n      }\n    },\n    {\n      name: \"icon\",\n      label: \"\",\n      options: {\n        customHeadLabelRender: () => null,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let link = tableMeta.rowData[2];\n\n          if (link === null) {\n            return <div className={classes.emptyIconCell} />;\n          }\n\n          return (\n            <IconButton\n              size=\"small\"\n              aria-label=\"open\"\n              component={Link}\n              to={link}\n            >\n              <ArrowRightIcon className={classes.arrowRightIconStyle}/>\n            </IconButton>\n\n          );\n        },\n        filter: false,\n        setCellProps: () => ({ style: { width: \"0\"}}),\n        sort: false,\n      }\n    }\n  ];\n\n  return (\n    <MUIDataTable\n      title={\"\"}\n      data={data}\n      columns={columns}\n      options={tableOptions}\n    />\n  );\n}\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport SearchForm from \"../SearchForm/SearchForm\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport ResultTable from \"../ResultTable/ResultTable\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport ResultWithLinkInterface from \"../../../repository/SearchRepository/ResulWithLinkInterface\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      padding: 0,\n    }\n  })\n);\n\nexport default function ResultContainer(\n  {\n    category,\n    needle,\n    strict,\n    resultData\n  }: {\n    category: string,\n    needle: string,\n    strict: boolean\n    resultData: ResultWithLinkInterface[]\n  }\n) {\n  let classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <Container maxWidth=\"sm\" className={classes.container}>\n        <SearchForm\n          category={category}\n          needle={needle}\n          strict={strict}\n        />\n        {resultData.length >= 500 &&\n        <Alert severity=\"warning\">More than 500 records found, the API hasn't performed a full search. Try refining your parameters if you need more accuracy.</Alert>\n        }\n        <ResultTable data={resultData}/>\n      </Container>\n    </React.Fragment>\n  )\n}\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport { AlertTitle } from \"@material-ui/lab\";\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n      [theme.breakpoints.down('xs')]: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n      }\n    },\n  }),\n);\n\nexport default function ApiErrorFullPage(\n  {\n    retry,\n    text\n  }: {\n    retry: () => void,\n    text: string\n  }\n) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Alert\n        severity=\"error\"\n        action={\n          <Button color=\"inherit\" size=\"small\" onClick={retry}>\n            <strong>RETRY</strong>\n          </Button>\n        }\n        variant=\"outlined\"\n      >\n        <AlertTitle>Error</AlertTitle>\n        {text}\n      </Alert>\n    </div>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nimport { useDeps } from \"../../../context/DepsContext/DepsContext\";\nimport AppBar from \"../../AppBar/AppBar\";\nimport SearchRepositoryInterface from \"../../../repository/SearchRepository/SearchRepositoryInterface\";\nimport RepoCategory from \"../../../repository/SearchRepository/RepoCategory\";\nimport LoadingFullPage from \"../../LoadingFullPage/LoadingFullPage\";\nimport ResultContainer from \"../ResultContainer/ResultContainer\";\nimport ApiErrorFullPage from \"../../ApiErrorFullPage/ApiErrorFullPage\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      height: \"100vh\",\n      [theme.breakpoints.down('xs')]: {\n        paddingLeft: 0,\n        paddingRight: 0\n      }\n    },\n    // necessary for content to be below app bar\n    toolbar: {\n      minHeight: 56,\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 48,\n      }\n    },\n  }),\n);\n\nexport default function SearchResult(\n  {\n    category,\n    needle,\n    strict\n  }: {\n    category: string,\n    needle: string,\n    strict: boolean\n  }\n) {\n  let classes = useStyles();\n  let [resultComponent, setResultComponent] = useState<any>(<LoadingFullPage />);\n  let [retry, setRetry] = useState(false);\n  let {\n    searchRepository\n  }: {\n    searchRepository: SearchRepositoryInterface\n  } = useDeps();\n\n  useEffect(() => {\n    setResultComponent(<LoadingFullPage />);\n    setRetry(false);\n\n    searchRepository.publicSearch(needle, category as RepoCategory, strict)  // FIX typescript\n      .then(data => {\n        setResultComponent(\n          <ResultContainer\n            category={category}\n            needle={needle}\n            strict={strict}\n            resultData={data}\n          />\n        );\n      }).catch(e => {\n        setResultComponent(\n          <ApiErrorFullPage\n            retry={() => setRetry(true)}\n            text={e.message}\n          />\n        );\n      }\n    );\n  }, [category, needle, strict, retry]);\n\n  return (\n    <React.Fragment>\n      <AppBar title=\"Search\" />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {resultComponent}\n      </main>\n    </React.Fragment>\n  );\n}\n","import {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport AppBar from \"../../AppBar/AppBar\";\nimport Container from \"@material-ui/core/Container\";\nimport SearchForm from \"../SearchForm/SearchForm\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      height: \"100vh\",\n    },\n    // necessary for content to be below app bar\n    toolbar: {\n      minHeight: 56,\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 48,\n      }\n    },\n    container: {\n      padding: 0,\n      display: \"flex\",\n      alignItems: \"center\",\n      height: \"70vh\"\n    },\n  }),\n);\n\nexport default function SearchEmpty(\n  {\n    category\n  }: {\n    category: string\n  }\n) {\n  let classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <AppBar title=\"Search\" />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Container maxWidth=\"sm\" className={classes.container}>\n          <SearchForm\n            category={category}\n            needle={\"\"}\n            strict={false}\n          />\n        </Container>\n      </main>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport RepoCategory, { repoCategories } from \"../../repository/SearchRepository/RepoCategory\";\nimport SearchResult from \"./SearchResult/SearchResult\";\nimport SearchEmpty from \"./SearchEmpty/SearchEmpty\";\n\nexport default function Search() {\n  let query = new URLSearchParams(useLocation().search);\n\n  let category: RepoCategory = \"all\";\n  let queryCategory = query.get(\"category\");\n  if (queryCategory !== null && repoCategories.includes(queryCategory as RepoCategory)) {\n    category = queryCategory as RepoCategory;\n  }\n\n  let queryStrict = query.get(\"strict\");\n  let queryNeedle = query.get(\"needle\");\n  if (queryStrict !== null && queryNeedle !== null) {\n    return (\n      <SearchResult\n        category={category}\n        needle={queryNeedle}\n        strict={queryStrict === \"true\"}\n      />\n    );\n  }\n\n  return (\n    <SearchEmpty category={category} />\n  );\n}\n","import MUIDataTable, {MUIDataTableColumnDef, MUIDataTableOptions} from \"mui-datatables\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Link} from \"react-router-dom\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport React from \"react\";\n\nconst options: MUIDataTableOptions = {\n  elevation: 1,\n  filter: false,\n  fixedHeader: false,\n  print: false,\n  responsive: \"standard\",\n  rowHover: false,\n  rowsPerPageOptions: [],\n  selectableRows: \"none\",\n  viewColumns: false,\n};\n\nexport default function CorpListTable(\n  {\n    corpList\n  }: {\n    corpList: { [key:string]: string }\n  }\n) {\n  const columns: MUIDataTableColumnDef[] = [\n    {\n      name: \"name\",\n      label: \"Name\",\n      options: {\n        customHeadRender: () => null\n      }\n    },\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        customHeadRender: () => null,\n        display: false,\n      }\n    },\n    {\n      name: \"icon\",\n      label: \"\",\n      options: {\n        customHeadRender: () => null,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let id = tableMeta.rowData[1];\n\n          return (\n            <IconButton\n              size=\"small\"\n              aria-label=\"open\"\n              component={Link}\n              to={`/corporation/${id}`}\n            >\n              <ArrowRightIcon />\n            </IconButton>\n          );\n        },\n        download: false,\n        setCellProps: () => ({ style: { width: 0, paddingTop: 0, paddingBottom: 0 }}),\n      }\n    }\n  ];\n\n  let data: { name: string, id: number }[] = [];\n  for (let corpID in corpList) {\n    data.push({ name: corpList[corpID], id: Number(corpID) });\n  }\n\n  return(\n    <MUIDataTable\n      title={\"Corporations\"}\n      data={data}\n      columns={columns}\n      options={options}\n    />\n  );\n}\n","import React from 'react';\nimport RepoAllianceInterface from \"../../../repository/AllianceRepository/RepoAllianceInterface\";\nimport {createStyles, makeStyles, Theme, useTheme} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Link} from \"react-router-dom\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Typography from \"@material-ui/core/Typography\";\nimport CorpListTable from \"../CorpListTable/CorpListTable\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonCell: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      width: 0,\n    },\n    gridContainer: {\n      marginTop: 0,\n    },\n    gridWithTable: {\n      [theme.breakpoints.down('xs')]: {\n        paddingBottom: theme.spacing(3),\n      },\n    },\n    title: {\n      [theme.breakpoints.down('xs')]: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2)\n      },\n    },\n    logo: {\n      textAlign: \"center\",\n      //marginTop: -(theme.spacing(3)),\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n    nameCell: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText,\n    }\n  }),\n);\n\nexport default function AllianceInfoContent(\n  {\n    content\n  }: {\n    content: RepoAllianceInterface\n  }\n) {\n  let classes = useStyles();\n  let theme = useTheme();\n  let isSmall = useMediaQuery(theme.breakpoints.down('xs'));\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={isSmall ? 0 : 3} className={classes.gridContainer}>\n        <Grid item xs={12} className={classes.logo}>\n          <img\n            alt=\"alliance logo\"\n            src={`https://images.evetech.net/alliances/${content.id}/logo`}\n            height=\"180\"\n            width=\"180\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} className={classes.gridWithTable}>\n          <TableContainer component={Paper}>\n            <Table aria-label=\"alliance information\">\n              <TableBody>\n                <TableRow>\n                  <TableCell\n                    colSpan={3}\n                    align=\"center\"\n                    className={classes.nameCell}\n                  >\n                    <Typography variant=\"h6\">{ content.name }</Typography>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Ticker:</TableCell>\n                  <TableCell>{ content.ticker }</TableCell>\n                  <TableCell align=\"right\"> </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>ID:</TableCell>\n                  <TableCell>{ content.id }</TableCell>\n                  <TableCell align=\"right\"> </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Creator (char):</TableCell>\n                  <TableCell>{ content.creator_name }</TableCell>\n                  <TableCell align=\"right\" className={classes.buttonCell}>\n                    <IconButton\n                      size=\"small\"\n                      aria-label=\"open character\"\n                      component={Link}\n                      to={`/character/${content.creator_id}`}\n                    >\n                      <ArrowRightIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Creator (corp):</TableCell>\n                  <TableCell>{ content.creator_corporation_name }</TableCell>\n                  <TableCell align=\"right\" className={classes.buttonCell}>\n                    <IconButton\n                      size=\"small\"\n                      aria-label=\"open character\"\n                      component={Link}\n                      to={`/corporation/${content.creator_corporation_id}`}\n                    >\n                      <ArrowRightIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Date founded:</TableCell>\n                  <TableCell>{ content.date_founded }</TableCell>\n                  <TableCell align=\"right\"> </TableCell>\n                </TableRow>\n                {content.executor_corporation_name !== undefined &&\n                  <TableRow>\n                      <TableCell>Executor:</TableCell>\n                      <TableCell>{ content.executor_corporation_name }</TableCell>\n                      <TableCell align=\"right\" className={classes.buttonCell}>\n                          <IconButton\n                              size=\"small\"\n                              aria-label=\"open character\"\n                              component={Link}\n                              to={`/corporation/${content.executor_corporation_id}`}\n                          >\n                              <ArrowRightIcon />\n                          </IconButton>\n                      </TableCell>\n                  </TableRow>\n                }\n                {content.faction_name !== undefined &&\n                  <TableRow>\n                      <TableCell>Faction:</TableCell>\n                      <TableCell>{ content.faction_name }</TableCell>\n                      <TableCell align=\"right\">\n                          <TableCell align=\"right\" className={classes.buttonCell}>\n                              <IconButton\n                                  size=\"small\"\n                                  aria-label=\"open character\"\n                                  component={Link}\n                                  to={`/faction/${content.faction_id}`}\n                              >\n                                  <ArrowRightIcon />\n                              </IconButton>\n                          </TableCell>\n                      </TableCell>\n                  </TableRow>\n                }\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item xs={12} sm={6} className={classes.gridWithTable}>\n          <CorpListTable corpList={content.corporations} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\n/*\nexport default function AllianceInfoContent(\n  {\n    content\n  }: {\n    content: RepoAllianceInterface\n  }\n) {\n  return (\n    <React.Fragment>\n      <h1>{content.name}</h1>\n      <ul>\n        <li>\n          <details>\n            <summary>Corporations:</summary>\n            <ul>\n              {Object.keys(content.corporations).map(key => {\n                return <li key={key}>{content.corporations[key]}</li>\n              })}\n            </ul>\n          </details>\n        </li>\n      </ul>\n    </React.Fragment>\n  );\n}\n*/","import React, {useState, useEffect} from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Container from \"@material-ui/core/Container\";\n\nimport { useDeps } from \"../../context/DepsContext/DepsContext\";\nimport AppBar from \"../AppBar/AppBar\";\nimport LoadingFullPage from \"../LoadingFullPage/LoadingFullPage\";\nimport AllianceRepositoryInterface from \"../../repository/AllianceRepository/AllianceRepositoryInterface\";\nimport ApiErrorFullPage from \"../ApiErrorFullPage/ApiErrorFullPage\";\nimport AllianceInfoContent from \"./AllianceInfoContent/AllianceInfoContent\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      //paddingTop: theme.spacing(3),\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    content: {\n      flexGrow: 1,\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n      [theme.breakpoints.down('xs')]: {\n        padding: 0,\n      }\n    },\n    // necessary for content to be below app bar\n    toolbar: {\n      minHeight: 56,\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 48,\n      }\n    },\n  }),\n);\n\nexport default function AllianceInfo() {\n  let classes = useStyles();\n  let [apiResult, setApiResult] = useState(<LoadingFullPage />);\n  let [retry, setRetry] = useState(false);\n  let {\n    allianceRepository\n  }: {\n    allianceRepository: AllianceRepositoryInterface\n  } = useDeps();\n  let { id } = useParams<Record<string, string | undefined>>();\n  if (id === undefined) {\n    // TODO: redirect to not found\n  }\n\n  useEffect(() => {\n    if (id === undefined) {\n      return;\n    }\n\n    setApiResult(<LoadingFullPage />);\n    setRetry(false);\n\n    allianceRepository.getOne(Number(id))\n      .then(data => {\n        setApiResult(\n          <AllianceInfoContent content={data} />\n        );\n      }).catch(e => {\n        setApiResult(\n          <ApiErrorFullPage\n            retry={() => setRetry(true)}\n            text={e.message}\n          />\n        );\n      });\n  }, [retry, id]);\n\n  return (\n    <React.Fragment>\n      <AppBar title=\"Alliance\" />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {apiResult}\n        </Container>\n      </main>\n    </React.Fragment>\n  );\n}\n","import MUIDataTable, {MUIDataTableColumnDef, MUIDataTableMeta, MUIDataTableOptions} from \"mui-datatables\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Link} from \"react-router-dom\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport React from \"react\";\nimport {useTheme} from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport { useDeps } from \"../../../context/DepsContext/DepsContext\";\nimport RepoCharacterCorpHistoryInterface\n  from \"../../../repository/CharacterRepository/RepoCharacterCorpHistoryInterface\";\nimport DateFormatterInterface from \"../../../service/DateFormatter/DateFormatterInterface\";\n\nconst options: MUIDataTableOptions = {\n  download: false,\n  elevation: 1,\n  filter: false,\n  fixedHeader: false,\n  print: false,\n  responsive: \"standard\",\n  rowHover: false,\n  rowsPerPage: 100,\n  rowsPerPageOptions: [],\n  search: false,\n  selectableRows: \"none\",\n  viewColumns: false,\n};\n\nconst styles = {\n  corpImg: {\n    display: \"flex\",\n  }\n};\n\nconst extractCorpID = (tableMeta: MUIDataTableMeta): number => {\n  return tableMeta.rowData[3];\n};\n\nexport default function CorpHistoryTable(\n  {\n    corporations\n  }: {\n    corporations: RepoCharacterCorpHistoryInterface[]\n  }\n) {\n  let theme = useTheme();\n  let isSmall = useMediaQuery(theme.breakpoints.down('xs'));\n  let {\n    dateFormatter\n  }: {\n    dateFormatter: DateFormatterInterface\n  } = useDeps();\n\n  const columns: MUIDataTableColumnDef[] = [\n    {\n      name: \"logo\",\n      label: \"\",\n      options: {\n        customHeadRender: () => null,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let id = extractCorpID(tableMeta);\n\n          return (\n            <img\n              src={`https://images.evetech.net/corporations/${id}/logo?size=64`}\n              alt=\"corporation logo\"\n              height={48}\n              width={48}\n              style={styles.corpImg}\n            />\n          );\n        },\n        display: !isSmall,\n        setCellProps: () => ({ style: { width: 0, paddingTop: 0, paddingBottom: 0, paddingRight: 0 }}),\n      }\n    },\n    {\n      name: \"corporation_name\",\n      label: \"Name\",\n      options: {\n        customHeadRender: () => null\n      }\n    },\n    {\n      name: \"start_date\",\n      label: \"From\",\n      options: {\n        customHeadRender: () => null,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return dateFormatter.withDateTime(new Date(value));\n        },\n      }\n    },\n    {\n      name: \"corporation_id\",\n      label: \"ID\",\n      options: {\n        customHeadRender: () => null,\n        display: false,\n      }\n    },\n    {\n      name: \"icon\",\n      label: \"\",\n      options: {\n        customHeadRender: () => null,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let id = extractCorpID(tableMeta);\n\n          return (\n            <IconButton\n              size=\"small\"\n              aria-label=\"open\"\n              component={Link}\n              to={`/corporation/${id}`}\n            >\n              <ArrowRightIcon />\n            </IconButton>\n          );\n        },\n        download: false,\n        setCellProps: () => ({ style: { width: 0, paddingTop: 0, paddingBottom: 0 }}),\n      }\n    }\n  ];\n\n  return(\n    <MUIDataTable\n      title={\"Corp History\"}\n      data={corporations}\n      columns={columns}\n      options={options}\n    />\n  );\n}\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function EntityDescription(\n  {\n    bio\n  }: {\n    bio: string\n  }\n) {\n  let paragraphs = bio.split(\"<br>\");\n\n  return (\n    <React.Fragment>\n      {paragraphs.map((paragraph, key) => {\n        return <Typography>{ paragraph.replace(/(<([^>]+)>)/gi, \"\") }</Typography>\n      })}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport {createStyles, makeStyles, Theme, useTheme} from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport RepoCharacterInterface from \"../../../repository/CharacterRepository/RepoCharacterInterface\";\nimport CorpHistoryTable from \"../CorpHistoryTable/CorpHistoryTable\";\nimport { useDeps } from \"../../../context/DepsContext/DepsContext\";\nimport DateFormatterInterface from \"../../../service/DateFormatter/DateFormatterInterface\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Link} from \"react-router-dom\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport EntityDescription from \"../../EntityDescription/EntityDescription\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonCell: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      width: 0,\n    },\n    gridContainer: {\n      marginTop: 0,\n    },\n    gridWithTable: {\n      [theme.breakpoints.down('xs')]: {\n        paddingBottom: theme.spacing(3),\n      },\n    },\n    title: {\n      [theme.breakpoints.down('xs')]: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2)\n      },\n    },\n    logo: {\n      textAlign: \"center\",\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n    nameCell: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText,\n    },\n    entityLogoCell: {\n      paddingTop: 0,\n      paddingRight: 0,\n      paddingBottom: 0\n    },\n    entityLogoGrid: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    entityLogoImg: {\n      marginRight: theme.spacing(1),\n      [theme.breakpoints.down('xs')]: {\n        display: \"none\",\n      },\n    },\n    bioCell: {\n      verticalAlign: \"top\",\n    },\n    successColorText: {\n      color: theme.palette.success.main,\n    },\n    errorColorText: {\n      color: theme.palette.error.main,\n    },\n  }),\n);\n\nexport default function CharacterInfoContent(\n  {\n    content\n  }: {\n    content: RepoCharacterInterface\n  }\n) {\n  let classes = useStyles();\n  let theme = useTheme();\n  let isSmall = useMediaQuery(theme.breakpoints.down('xs'));\n  let {\n    dateFormatter\n  }: {\n    dateFormatter: DateFormatterInterface\n  } = useDeps();\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={isSmall ? 0 : 3} className={classes.gridContainer}>\n        <Grid item xs={12} className={classes.logo}>\n          <img\n            alt=\"character portrait\"\n            src={`https://images.evetech.net/characters/${content.id}/portrait`}\n            height=\"180\"\n            width=\"180\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridWithTable}>\n          <TableContainer component={Paper}>\n            <Table aria-label=\"character information\">\n              <TableBody>\n                <TableRow>\n                  <TableCell\n                    colSpan={3}\n                    align=\"center\"\n                    className={classes.nameCell}\n                  >\n                    <Typography variant=\"h6\">{ content.name }</Typography>\n                  </TableCell>\n                </TableRow>\n\n                <TableRow>\n                  <TableCell>Corporation:</TableCell>\n                  <TableCell className={classes.entityLogoCell}>\n                    <Grid container>\n                      <Grid item className={classes.entityLogoGrid}>\n                        <img\n                          src={`https://images.evetech.net/corporations/${content.corporation_id}/logo?size=64`}\n                          alt=\"corporation logo\"\n                          height={48}\n                          width={48}\n                          className={classes.entityLogoImg}\n                        />\n                      </Grid>\n                      <Grid item className={classes.entityLogoGrid}>\n                        { content.corporation_name }\n                      </Grid>\n                    </Grid>\n                  </TableCell>\n                  <TableCell align=\"right\" className={classes.buttonCell}>\n                    <IconButton\n                      size=\"small\"\n                      aria-label=\"open corporation\"\n                      component={Link}\n                      to={`/corporation/${content.corporation_id}`}\n                    >\n                      <ArrowRightIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n\n                {content.alliance_name !== undefined &&\n                  <TableRow>\n                      <TableCell>Alliance:</TableCell>\n                      <TableCell className={classes.entityLogoCell}>\n                          <Grid container>\n                              <Grid item className={classes.entityLogoGrid}>\n                                  <img\n                                      src={`https://images.evetech.net/alliances/${content.alliance_id}/logo?size=64`}\n                                      alt=\"alliance logo\"\n                                      height={48}\n                                      width={48}\n                                      className={classes.entityLogoImg}\n                                  />\n                              </Grid>\n                              <Grid item className={classes.entityLogoGrid}>\n                                { content.alliance_name }\n                              </Grid>\n                          </Grid>\n                      </TableCell>\n                      <TableCell align=\"right\" className={classes.buttonCell}>\n                          <IconButton\n                              size=\"small\"\n                              aria-label=\"open alliance\"\n                              component={Link}\n                              to={`/alliance/${content.alliance_id}`}\n                          >\n                              <ArrowRightIcon />\n                          </IconButton>\n                      </TableCell>\n                  </TableRow>\n                }\n\n                <TableRow>\n                  <TableCell>Birthday:</TableCell>\n                  <TableCell>{ dateFormatter.withDateTime(new Date(content.birthday)) }</TableCell>\n                  <TableCell align=\"right\"> </TableCell>\n                </TableRow>\n\n                {content.security_status !== undefined &&\n                  <TableRow>\n                      <TableCell>Sec status:</TableCell>\n                      <TableCell\n                          className={content.security_status < 0 ? classes.errorColorText : classes.successColorText}>\n                        {content.security_status}\n                      </TableCell>\n                      <TableCell align=\"right\"> </TableCell>\n                  </TableRow>\n                }\n\n                <TableRow>\n                  <TableCell>Title</TableCell>\n                  <TableCell>{ content.title }</TableCell>\n                  <TableCell align=\"right\"> </TableCell>\n                </TableRow>\n\n                <TableRow>\n                  <TableCell>Race:</TableCell>\n                  <TableCell>{ content.race_name }</TableCell>\n                  <TableCell align=\"right\" className={classes.buttonCell}>\n                    {/* TODO: remove when the race page is implemented\n                      <IconButton\n                        size=\"small\"\n                        aria-label=\"open race\"\n                        component={Link}\n                        to={`/race/${content.race_id}`}\n                      >\n                        <ArrowRightIcon/>\n                      </IconButton>*/\n                    }\n                  </TableCell>\n                </TableRow>\n\n                {content.ancestry_id !== undefined && content.ancestry_id > 0 && // 0 is possible even if it's not valid\n                  <TableRow>\n                      <TableCell>Ancestry:</TableCell>\n                      <TableCell>{ content.ancestry_name }</TableCell>\n                      <TableCell align=\"right\" className={classes.buttonCell}>\n                        {/* TODO: remove when the ancestry page is implemented\n                          <IconButton\n                            size=\"small\"\n                            aria-label=\"open ancestry\"\n                            component={Link}\n                            to={`/ancestry/${content.ancestry_id}`}\n                          >\n                            <ArrowRightIcon/>\n                          </IconButton>*/\n                        }\n                      </TableCell>\n                  </TableRow>\n                }\n\n                <TableRow>\n                  <TableCell>Bloodline:</TableCell>\n                  <TableCell>{ content.bloodline_name }</TableCell>\n                  <TableCell align=\"right\" className={classes.buttonCell}>\n                    {/* TODO: remove when the bloodline page is implemented\n                    <IconButton\n                      size=\"small\"\n                      aria-label=\"open bloodline\"\n                      component={Link}\n                      to={`/bloodline/${content.bloodline_id}`}\n                    >\n                      <ArrowRightIcon />\n                    </IconButton>*/}\n                  </TableCell>\n                </TableRow>\n\n                {content.faction_name !== undefined &&\n                  <TableRow>\n                      <TableCell>Faction:</TableCell>\n                      <TableCell>{ content.faction_name }</TableCell>\n                      <TableCell align=\"right\" className={classes.buttonCell}>\n                        {/* TODO: remove when the faction page is implemented\n                          <IconButton\n                              size=\"small\"\n                              aria-label=\"open faction\"\n                              component={Link}\n                              to={`/faction/${content.faction_id}`}\n                          >\n                              <ArrowRightIcon />\n                          </IconButton>*/}\n                      </TableCell>\n                  </TableRow>\n                }\n                <TableRow>\n                  <TableCell>Gender:</TableCell>\n                  <TableCell>{ `${content.gender[0].toUpperCase()}${content.gender.substr(1)}` }</TableCell>\n                  <TableCell align=\"right\"> </TableCell>\n                </TableRow>\n                {content.description !== undefined &&\n                  <TableRow>\n                      <TableCell className={classes.bioCell}>Bio:</TableCell>\n                      <TableCell colSpan={2}><EntityDescription bio={content.description} /></TableCell>\n                  </TableRow>\n                }\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridWithTable}>\n          <CorpHistoryTable corporations={content.corporation_history} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import React, {useEffect, useState} from 'react';\nimport { useParams } from \"react-router-dom\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport AppBar from \"../AppBar/AppBar\";\nimport CharacterInfoContent from \"./CharacterInfoContent/CharacterInfoContent\";\nimport Container from \"@material-ui/core/Container\";\nimport LoadingFullPage from \"../LoadingFullPage/LoadingFullPage\";\nimport { useDeps } from \"../../context/DepsContext/DepsContext\";\nimport CharacterRepositoryInterface from \"../../repository/CharacterRepository/CharacterRepositoryInterface\";\nimport ApiErrorFullPage from \"../ApiErrorFullPage/ApiErrorFullPage\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    content: {\n      flexGrow: 1,\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n      [theme.breakpoints.down('xs')]: {\n        padding: 0,\n      }\n    },\n    // necessary for content to be below app bar\n    toolbar: {\n      minHeight: 56,\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 48,\n      }\n    },\n  }),\n);\n\nexport default function CharacterInfo() {\n  let classes = useStyles();\n  let [apiResult, setApiResult] = useState(<LoadingFullPage />);\n  let [retry, setRetry] = useState(false);\n  let {\n    characterRepository\n  }: {\n    characterRepository: CharacterRepositoryInterface\n  } = useDeps();\n  let { id } = useParams<Record<string, string | undefined>>();\n  if (id === undefined) {\n    // TODO: redirect to not found\n  }\n\n  useEffect(() => {\n    if (id === undefined) {\n      return;\n    }\n\n    setApiResult(<LoadingFullPage />);\n    setRetry(false);\n\n    characterRepository.getOne(Number(id))\n      .then(data => {\n        setApiResult(\n          <CharacterInfoContent content={data} />\n        )\n      }).catch(e => {\n        setApiResult(\n          <ApiErrorFullPage\n            retry={() => setRetry(true)}\n            text={e.message}\n          />\n        );\n      });\n  }, [retry, id]);\n\n  return (\n    <React.Fragment>\n      <AppBar title=\"Character\" />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {apiResult}\n        </Container>\n      </main>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { useParams } from \"react-router-dom\";\n\nexport default function ConstellationInfo() {\n  let { id } = useParams<Record<string, string | undefined>>();\n  if (id === undefined) {\n    // TODO: redirect to not found\n  }\n\n  return (\n    <h1>constellation {id}</h1>\n  );\n}\n","import MUIDataTable, {MUIDataTableColumnDef, MUIDataTableMeta, MUIDataTableOptions} from \"mui-datatables\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Link} from \"react-router-dom\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport React from \"react\";\nimport {useTheme} from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Grid from '@material-ui/core/Grid';\nimport { useDeps } from \"../../../context/DepsContext/DepsContext\";\nimport DateFormatterInterface from \"../../../service/DateFormatter/DateFormatterInterface\";\nimport RepoCorpAllianceHistoryInterface\n  from \"../../../repository/CorporationRepository/RepoCorpAllianceHistoryInterface\";\n\n\nconst options: MUIDataTableOptions = {\n  download: false,\n  elevation: 1,\n  filter: false,\n  fixedHeader: false,\n  print: false,\n  responsive: \"standard\",\n  rowHover: false,\n  rowsPerPage: 100,\n  rowsPerPageOptions: [],\n  search: false,\n  selectableRows: \"none\",\n  viewColumns: false,\n};\n\nconst styles = {\n  allianceImg: {\n    display: \"flex\",\n  }\n};\n\nconst extractAllianceID = (tableMeta: MUIDataTableMeta): number => {\n  return tableMeta.rowData[5];\n};\n\nexport default function AllianceHistoryTable(\n  {\n    alliances\n  }: {\n    alliances: RepoCorpAllianceHistoryInterface[]\n  }\n) {\n  let theme = useTheme();\n  let isSmall = useMediaQuery(theme.breakpoints.down('xs'));\n  let {\n    dateFormatter\n  }: {\n    dateFormatter: DateFormatterInterface\n  } = useDeps();\n\n  const columns: MUIDataTableColumnDef[] = [\n    {\n      name: \"logo\",\n      label: \"\",\n      options: {\n        customHeadRender: () => null,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let id = extractAllianceID(tableMeta);\n\n          return (\n            <img\n              src={`https://images.evetech.net/alliances/${id}/logo?size=64`}\n              alt=\"alliance logo\"\n              height={48}\n              width={48}\n              style={styles.allianceImg}\n            />\n          );\n        },\n        display: !isSmall,\n        setCellProps: () => ({ style: { width: 0, paddingTop: 0, paddingBottom: 0, paddingRight: 0 }}),\n      }\n    },\n    {\n      name: \"alliance_name\",\n      label: \"Name\",\n      options: {\n        customHeadRender: () => null,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let isDeleted = tableMeta.rowData[7];\n\n          return `${value}${isDeleted === true ? \" (Closed)\" : \"\"}`;\n        },\n      }\n    },\n    {\n      name: \"start_date\",\n      label: \"From\",\n      options: {\n        display: false,\n      }\n    },\n    {\n      name: \"end_date\",\n      label: \"To\",\n      options: {\n        display: false,\n      }\n    },\n    {\n      name: \"stacked_dates\",\n      label: \"From To\",\n      options: {\n        customHeadRender: () => null,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let start = tableMeta.rowData[2];\n          let end = tableMeta.rowData[3];\n\n          return (\n            <React.Fragment>\n              <Grid container direction=\"column\">\n                {end !== undefined &&\n                  <Grid item xs style={{ whiteSpace: \"nowrap\" }}>\n                    {dateFormatter.withDateTime(new Date(end))}\n                  </Grid>\n                }\n                <Grid item xs style={{ whiteSpace: \"nowrap\" }}>\n                  {dateFormatter.withDateTime(new Date(start))}\n                </Grid>\n              </Grid>\n            </React.Fragment>\n          );\n        },\n        setCellProps: () => ({ style: { paddingTop: 0, paddingBottom: 0 }}),\n      }\n    },\n    {\n      name: \"alliance_id\",\n      label: \"ID\",\n      options: {\n        customHeadRender: () => null,\n        display: false,\n      }\n    },\n    {\n      name: \"icon\",\n      label: \"\",\n      options: {\n        customHeadRender: () => null,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let id = extractAllianceID(tableMeta);\n\n          return (\n            <IconButton\n              size=\"small\"\n              aria-label=\"open\"\n              component={Link}\n              to={`/alliance/${id}`}\n            >\n              <ArrowRightIcon/>\n            </IconButton>\n          );\n        },\n        download: false,\n        setCellProps: () => ({style: {width: 0, paddingTop: 0, paddingBottom: 0}}),\n      }\n    },\n    {\n      name: \"is_deleted\",\n      label: \"Is deleted\",\n      options: {\n        display: false,\n      }\n    },\n  ];\n\n  return(\n    <MUIDataTable\n      title={\"Alliance History\"}\n      data={alliances}\n      columns={columns}\n      options={options}\n    />\n  );\n}\n","import RepoCorporationInterface from \"../../../repository/CorporationRepository/RepoCorporationInterface\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport {createStyles, makeStyles, Theme, useTheme} from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport { useDeps } from \"../../../context/DepsContext/DepsContext\";\nimport DateFormatterInterface from \"../../../service/DateFormatter/DateFormatterInterface\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Link} from \"react-router-dom\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport CheckIcon from '@material-ui/icons/Check';\nimport EntityDescription from \"../../EntityDescription/EntityDescription\";\nimport AllianceHistoryTable from \"../AllianceHistoryTable/AllianceHistoryTable\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    buttonCell: {\n      paddingTop: 0,\n      paddingBottom: 0,\n      width: 0,\n    },\n    gridContainer: {\n      marginTop: 0,\n    },\n    gridWithTable: {\n      [theme.breakpoints.down('xs')]: {\n        paddingBottom: theme.spacing(3),\n      },\n    },\n    title: {\n      [theme.breakpoints.down('xs')]: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2)\n      },\n    },\n    logo: {\n      textAlign: \"center\",\n      paddingTop: theme.spacing(2),\n      paddingBottom: theme.spacing(2),\n    },\n    nameCell: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText,\n    },\n    entityLogoCell: {\n      paddingTop: 0,\n      paddingRight: 0,\n      paddingBottom: 0\n    },\n    entityLogoGrid: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    entityLogoImg: {\n      marginRight: theme.spacing(1),\n      [theme.breakpoints.down('xs')]: {\n        display: \"none\",\n      },\n    },\n    noWrapCell: {\n      whiteSpace: \"nowrap\",\n      [theme.breakpoints.down('xs')]: {\n        whiteSpace: \"normal\",\n      },\n    },\n    bioCell: {\n      verticalAlign: \"top\",\n    },\n    successColorText: {\n      color: theme.palette.success.main,\n    },\n    errorColorText: {\n      color: theme.palette.error.main,\n    },\n  }),\n);\n\nexport default function CorporationInfoContent(\n  {\n    content\n  }: {\n    content: RepoCorporationInterface\n  }\n) {\n  let classes = useStyles();\n  let theme = useTheme();\n  let isSmall = useMediaQuery(theme.breakpoints.down('xs'));\n  let {\n    dateFormatter\n  }: {\n    dateFormatter: DateFormatterInterface\n  } = useDeps();\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={isSmall ? 0 : 3} className={classes.gridContainer}>\n        <Grid item xs={12} className={classes.logo}>\n          <img\n            alt=\"corporation logo\"\n            src={`https://images.evetech.net/corporations/${content.id}/logo`}\n            height=\"180\"\n            width=\"180\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridWithTable}>\n          <TableContainer component={Paper}>\n            <Table aria-label=\"corporation information\">\n              <TableBody>\n\n                <TableRow>\n                  <TableCell\n                    colSpan={3}\n                    align=\"center\"\n                    className={classes.nameCell}\n                  >\n                    <Typography variant=\"h6\">{ content.name }</Typography>\n                  </TableCell>\n                </TableRow>\n\n                <TableRow>\n                  <TableCell>Ticker:</TableCell>\n                  <TableCell>{ content.ticker }</TableCell>\n                  <TableCell align=\"right\"> </TableCell>\n                </TableRow>\n\n                {content.alliance_id !== undefined &&\n                  <TableRow>\n                    <TableCell>Alliance:</TableCell>\n                    <TableCell className={classes.entityLogoCell}>\n                      <Grid container>\n                        <Grid item className={classes.entityLogoGrid}>\n                          <img\n                              src={`https://images.evetech.net/alliances/${content.alliance_id}/logo?size=64`}\n                              alt=\"alliance logo\"\n                              height={48}\n                              width={48}\n                              className={classes.entityLogoImg}\n                          />\n                        </Grid>\n                        <Grid item className={classes.entityLogoGrid}>\n                          { content.alliance_name }\n                        </Grid>\n                      </Grid>\n                    </TableCell>\n                    <TableCell align=\"right\" className={classes.buttonCell}>\n                      <IconButton\n                        size=\"small\"\n                        aria-label=\"open alliance\"\n                        component={Link}\n                        to={`/alliance/${content.alliance_id}`}\n                      >\n                        <ArrowRightIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                }\n\n                <TableRow>\n                  <TableCell>CEO:</TableCell>\n                  <TableCell className={classes.entityLogoCell}>\n                    <Grid container>\n                      <Grid item className={classes.entityLogoGrid}>\n                        <img\n                          src={`https://images.evetech.net/characters/${content.ceo_id}/portrait?size=64`}\n                          alt=\"character portrait\"\n                          height={48}\n                          width={48}\n                          className={classes.entityLogoImg}\n                        />\n                      </Grid>\n                      <Grid item className={classes.entityLogoGrid}>\n                        { content.ceo_name }\n                      </Grid>\n                    </Grid>\n                  </TableCell>\n                  <TableCell align=\"right\" className={classes.buttonCell}>\n                    <IconButton\n                      size=\"small\"\n                      aria-label=\"open character\"\n                      component={Link}\n                      to={`/character/${content.ceo_id}`}\n                    >\n                      <ArrowRightIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n\n                {content.creator_id !== 1 && // 1 when it's created manually by CCP\n                  <TableRow>\n                    <TableCell>Founder:</TableCell>\n                    <TableCell className={classes.entityLogoCell}>\n                      <Grid container>\n                        <Grid item className={classes.entityLogoGrid}>\n                          <img\n                            src={`https://images.evetech.net/characters/${content.creator_id}/portrait?size=64`}\n                            alt=\"character portrait\"\n                            height={48}\n                            width={48}\n                            className={classes.entityLogoImg}\n                          />\n                        </Grid>\n                        <Grid item className={classes.entityLogoGrid}>\n                          { content.creator_name }\n                        </Grid>\n                      </Grid>\n                    </TableCell>\n                    <TableCell align=\"right\" className={classes.buttonCell}>\n                      <IconButton\n                        size=\"small\"\n                        aria-label=\"open character\"\n                        component={Link}\n                        to={`/character/${content.creator_id}`}\n                      >\n                        <ArrowRightIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                }\n\n                <TableRow>\n                  <TableCell>Members:</TableCell>\n                  <TableCell>{ content.member_count }</TableCell>\n                  <TableCell align=\"right\"> </TableCell>\n                </TableRow>\n\n                {content.date_founded !== undefined &&\n                  <TableRow>\n                    <TableCell>Creation date:</TableCell>\n                    <TableCell>{ dateFormatter.withDateTime(new Date(content.date_founded)) }</TableCell>\n                    <TableCell align=\"right\"> </TableCell>\n                  </TableRow>\n                }\n\n                {content.faction_id !== undefined &&\n                  <TableRow>\n                    <TableCell>Faction:</TableCell>\n                    <TableCell>{ content.faction_name }</TableCell>\n                    <TableCell align=\"right\"> {/* TODO: implement link when the page is implemented */}</TableCell>\n                  </TableRow>\n                }\n\n                {content.home_station_id !== undefined &&\n                  <TableRow>\n                    <TableCell className={classes.noWrapCell}>Home station:</TableCell>\n                    <TableCell>{ content.home_station_name }</TableCell>\n                    <TableCell align=\"right\" className={classes.buttonCell}>\n                      {\n                        /* TODO: remove when the station page is implemented\n                        <IconButton\n                          size=\"small\"\n                          aria-label=\"open station\"\n                          component={Link}\n                          to={`/station/${content.home_station_id}`}\n                        >\n                          <ArrowRightIcon/>\n                        </IconButton>\n                        */\n                      }\n                    </TableCell>\n                  </TableRow>\n                }\n\n                <TableRow>\n                  <TableCell>Tax rate:</TableCell>\n                  <TableCell>{ content.tax_rate }</TableCell>\n                  <TableCell align=\"right\"> </TableCell>\n                </TableRow>\n\n                {content.shares !== undefined &&\n                  <TableRow>\n                    <TableCell>Shares:</TableCell>\n                    <TableCell>{ content.shares }</TableCell>\n                    <TableCell align=\"right\"> </TableCell>\n                  </TableRow>\n                }\n\n                <TableRow>\n                  <TableCell>War eligible:</TableCell>\n                  <TableCell className={classes.entityLogoCell}>\n                    {content.war_eligible === true\n                      ? <CheckIcon className={classes.successColorText} />\n                      : <ClearIcon className={classes.errorColorText} />\n                    }\n                  </TableCell>\n                  <TableCell align=\"right\"> </TableCell>\n                </TableRow>\n\n                <TableRow>\n                  <TableCell>ID:</TableCell>\n                  <TableCell>{ content.id }</TableCell>\n                  <TableCell align=\"right\"> </TableCell>\n                </TableRow>\n\n                {content.url !== undefined &&\n                  <TableRow>\n                    <TableCell>Url:</TableCell>\n                    <TableCell><a href={ content.url}>{ content.url }</a></TableCell>\n                    <TableCell align=\"right\"> </TableCell>\n                  </TableRow>\n                }\n\n                {content.description !== undefined &&\n                  <TableRow>\n                    <TableCell className={classes.bioCell}>Description:</TableCell>\n                    <TableCell colSpan={2}><EntityDescription bio={content.description} /></TableCell>\n                  </TableRow>\n                }\n                </TableBody>\n            </Table>\n          </TableContainer>\n        </Grid>\n        <Grid item xs={12} md={6} className={classes.gridWithTable}>\n          <AllianceHistoryTable alliances={content.alliance_history} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  )\n}\n","import React, {useEffect, useState} from 'react';\nimport { useParams } from \"react-router-dom\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport AppBar from \"../AppBar/AppBar\";\nimport Container from \"@material-ui/core/Container\";\nimport LoadingFullPage from \"../LoadingFullPage/LoadingFullPage\";\nimport { useDeps } from \"../../context/DepsContext/DepsContext\";\nimport ApiErrorFullPage from \"../ApiErrorFullPage/ApiErrorFullPage\";\nimport CorporationRepositoryInterface from \"../../repository/CorporationRepository/CorporationRepositoryInterface\";\nimport CorporationInfoContent from \"./CorporationInfoContent/CorporationInfoContent\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n    },\n    content: {\n      flexGrow: 1,\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3),\n      [theme.breakpoints.down('xs')]: {\n        padding: 0,\n      }\n    },\n    // necessary for content to be below app bar\n    toolbar: {\n      minHeight: 56,\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 48,\n      }\n    },\n  }),\n);\n\nexport default function CorporationInfo() {\n  let classes = useStyles();\n  let [apiResult, setApiResult] = useState(<LoadingFullPage />);\n  let [retry, setRetry] = useState(false);\n  let {\n    corporationRepository\n  }: {\n    corporationRepository: CorporationRepositoryInterface\n  } = useDeps();\n  let { id } = useParams<Record<string, string | undefined>>();\n  if (id === undefined) {\n    // TODO: redirect to not found\n  }\n\n  useEffect(() => {\n    if (id === undefined) {\n      return;\n    }\n\n    setApiResult(<LoadingFullPage />);\n    setRetry(false);\n\n    corporationRepository.getOne(Number(id))\n      .then(data => {\n        setApiResult(\n          <CorporationInfoContent content={data} />\n        )\n      }).catch(e => {\n        setApiResult(\n          <ApiErrorFullPage\n            retry={() => setRetry(true)}\n            text={e.message}\n          />\n        );\n      });\n  }, [retry, id]);\n\n  return (\n    <React.Fragment>\n      <AppBar title=\"Corporation\" />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          {apiResult}\n        </Container>\n      </main>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport { useParams } from \"react-router-dom\";\n\nexport default function TypeInfo() {\n  let { id } = useParams<Record<string, string | undefined>>();\n  if (id === undefined) {\n    // TODO: redirect to not found\n  }\n\n  return (\n    <h1>type {id}</h1>\n  );\n}\n","import React from 'react';\nimport { useParams } from \"react-router-dom\";\n\nexport default function RegionInfo() {\n  let { id } = useParams<Record<string, string | undefined>>();\n  if (id === undefined) {\n    // TODO: redirect to not found\n  }\n\n  return (\n    <h1>region {id}</h1>\n  );\n}\n","import React from 'react';\nimport { useParams } from \"react-router-dom\";\n\nexport default function SystemInfo() {\n  let { id } = useParams<Record<string, string | undefined>>();\n  if (id === undefined) {\n    // TODO: redirect to not found\n  }\n\n  return (\n    <h1>system {id}</h1>\n  );\n}\n","import React from 'react';\nimport { useParams } from \"react-router-dom\";\n\nexport default function StationInfo() {\n  let { id } = useParams<Record<string, string | undefined>>();\n  if (id === undefined) {\n    // TODO: redirect to not found\n  }\n\n  return (\n    <h1>station {id}</h1>\n  );\n}\n","import React from 'react';\nimport { useParams } from \"react-router-dom\";\n\nexport default function FactionInfo() {\n  let { id } = useParams<Record<string, string | undefined>>();\n  if (id === undefined) {\n    // TODO: redirect to not found\n  }\n\n  return (\n    <h1>faction {id}</h1>\n  );\n}\n","import React from 'react';\nimport { useParams } from \"react-router-dom\";\n\nexport default function RaceInfo() {\n  let { id } = useParams<Record<string, string | undefined>>();\n  if (id === undefined) {\n    // TODO: redirect to not found\n  }\n\n  return (\n    <h1>race {id}</h1>\n  );\n}\n","import React from 'react';\nimport { useParams } from \"react-router-dom\";\n\nexport default function AncestryInfo() {\n  let { id } = useParams<Record<string, string | undefined>>();\n  if (id === undefined) {\n    // TODO: redirect to not found\n  }\n\n  return (\n    <h1>ancestry {id}</h1>\n  );\n}\n","import React from 'react';\nimport { useParams } from \"react-router-dom\";\n\nexport default function BloodlineInfo() {\n  let { id } = useParams<Record<string, string | undefined>>();\n  if (id === undefined) {\n    // TODO: redirect to not found\n  }\n\n  return (\n    <h1>bloodline {id}</h1>\n);\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Button from '@material-ui/core/Button'\n\nimport {\n  enqueueSnackbar as enqueueSnackbarAction,\n  closeOne as closeOneSnackbarAction,\n  closeAll as closeAllSnackbarAction\n} from '../../feature/notifier/notifierActions';\nimport SnackbarNotificationInterface from \"../../feature/notifier/SnackbarNotificationInterface\";\n\nconst colorBlack = { color: \"black\" };\n\nconst snackbarAction = (onClickCallback: () => void) => (\n  <React.Fragment>\n    <Button style={ colorBlack }>\n      CHECK\n    </Button>\n    <Button style={ colorBlack } onClick={onClickCallback}>\n      DISMISS\n    </Button>\n  </React.Fragment>\n);\n\nexport default function Test() {\n  const dispatch = useDispatch();\n  const enqueueSnackbar = (notification: SnackbarNotificationInterface) => dispatch(enqueueSnackbarAction(notification));\n  const closeSnackbar = (key: number) => dispatch(closeOneSnackbarAction(key));\n  const closeAllSnackbar = () => dispatch(closeAllSnackbarAction());\n\n  const handleClickWarning = () => {\n    // NOTE:\n    // if you want to be able to dispatch a `closeSnackbar` action later on,\n    // you SHOULD pass your own `key` in the options. `key` can be any sequence\n    // of number or characters, but it has to be unique for a given snackbar.\n    enqueueSnackbar({\n      message: \"Warning: API health at 56%.\",\n      options: {\n        action: key => snackbarAction(() => closeSnackbar(Number(key))),\n        anchorOrigin: {\n          horizontal: \"right\",\n          vertical: \"bottom\",\n        },\n        autoHideDuration: null,\n        key: new Date().getTime() + Math.random(),\n        variant: 'warning',\n      },\n    });\n  };\n\n  const handleClickOffline = () => {\n    enqueueSnackbar({\n      message: \"EVE is offline, don't hit the API.\",\n      options: {\n        action: key => snackbarAction(() => closeSnackbar(Number(key))),\n        anchorOrigin: {\n          horizontal: \"right\",\n          vertical: \"bottom\",\n        },\n        autoHideDuration: null,\n        key: new Date().getTime() + Math.random(),\n        variant: 'error',\n      },\n    });\n  };\n\n  const handleDismissAll = () => {\n    closeAllSnackbar();\n  };\n\n  return (\n    <React.Fragment>\n      <Button variant=\"contained\" onClick={handleClickWarning}>Display low health</Button>\n      <Button variant=\"contained\" onClick={handleClickOffline}>Display offline</Button>\n      <Button variant=\"contained\" onClick={handleDismissAll}>Dismiss all snackbars</Button>\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport MUIDataTable, {MUIDataTableColumnDef, MUIDataTableMeta, MUIDataTableOptions} from \"mui-datatables\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {Link} from \"react-router-dom\";\nimport ArrowRightIcon from \"@material-ui/icons/ArrowRight\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport {useTheme} from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nimport EsiUniverseNamesInterface from \"../../../service/Call/UniverseNamesCall/EsiUniverseNamesInterface\";\n\n\nconst options: MUIDataTableOptions = {\n  elevation: 1,\n  filter: false,\n  fixedHeader: false,\n  print: false,\n  responsive: \"standard\",\n  rowHover: false,\n  rowsPerPageOptions: [],\n  selectableRows: \"none\",\n  sortOrder: {\n    name: \"name\",\n    direction: 'asc'\n  },\n  viewColumns: false,\n};\n\nconst extractCorpID = (tableMeta: MUIDataTableMeta): number => {\n  return tableMeta.rowData[1];\n};\n\nconst styles = {\n  corpImg: {\n    display: \"flex\",\n  }\n};\n\nexport default function AlliancesTable(\n  {\n    alliances\n  }: {\n    alliances: EsiUniverseNamesInterface[]\n  }\n) {\n  let theme = useTheme();\n  let isSmall = useMediaQuery(theme.breakpoints.down('xs'));\n\n  const columns: MUIDataTableColumnDef[] = [\n    {\n      name: \"name\",\n      label: \"Name\",\n      options: {\n        customHeadRender: () => null,\n      }\n    },\n    {\n      name: \"id\",\n      label: \"ID\",\n      options: {\n        customHeadRender: () => null,\n        display: false,\n      }\n    },\n    {\n      name: \"icon\",\n      label: \"\",\n      options: {\n        customHeadRender: () => null,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          let id = extractCorpID(tableMeta);\n\n          return (\n            <IconButton\n              size=\"small\"\n              aria-label=\"open\"\n              component={Link}\n              to={`/alliance/${id}`}\n            >\n              <ArrowRightIcon />\n            </IconButton>\n          );\n        },\n        download: false,\n        setCellProps: () => ({ style: { width: 0, paddingTop: 0, paddingBottom: 0 }}),\n      }\n    }\n  ];\n\n  return (\n    <Container maxWidth=\"sm\" style={{ padding: 0 }}>\n      <MUIDataTable\n        title=\"\"\n        data={alliances}\n        columns={columns}\n        options={options}\n      />\n    </Container>\n  );\n}\n","import React, {useEffect, useState} from \"react\";\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nimport { useDeps } from \"../../context/DepsContext/DepsContext\";\nimport AppBar from \"../AppBar/AppBar\";\nimport AllianceRepositoryInterface from \"../../repository/AllianceRepository/AllianceRepositoryInterface\";\nimport LoadingFullPage from \"../LoadingFullPage/LoadingFullPage\";\nimport AlliancesTable from \"./AlliancesTable/AlliancesTable\";\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n      [theme.breakpoints.down('xs')]: {\n        paddingLeft: 0,\n        paddingRight: 0\n      }\n    },\n    // necessary for content to be below app bar\n    toolbar: {\n      minHeight: 56,\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 48,\n      }\n    },\n  }),\n);\n\nfunction AllianceList() {\n  const classes = useStyles();\n  let [apiResult, setApiResult] = useState(<LoadingFullPage />);\n  let {\n    allianceRepository\n  }: {\n    allianceRepository: AllianceRepositoryInterface\n  } = useDeps();\n\n  useEffect(() => {\n    allianceRepository.getList()\n      .then(result => setApiResult(<AlliancesTable alliances={result} />))\n      .catch(e => console.error(e));  // FIXME: handle better\n  }, []);\n\n  return (\n    <React.Fragment>\n      <AppBar title=\"Alliances\" />\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        {apiResult}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default AllianceList;\n","import React, { useState, useEffect } from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport \"typeface-rajdhani\";\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport MUISwitch from '@material-ui/core/Switch';\nimport { Route, Switch } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\n\nimport { useDeps } from \"../../context/DepsContext/DepsContext\";\nimport { changeDarkMode, setDarkMode } from \"../../feature/theme/themeActions\";\nimport { useAppDispatch } from \"../../hooks\";\nimport Home from \"../Home/Home\";\nimport Search from \"../Search/Search\";\nimport AllianceInfo from \"../AllianceInfo/AllianceInfo\";\nimport CharacterInfo from \"../CharacterInfo/CharacterInfo\";\nimport ConstellationInfo from \"../ConstellationInfo/ConstellationInfo\";\nimport CorporationInfo from \"../CorporationInfo/CorporationInfo\";\nimport TypeInfo from \"../TypeInfo/TypeInfo\";\nimport RegionInfo from \"../RegionInfo/RegionInfo\";\nimport SystemInfo from \"../SystemInfo/SystemInfo\";\nimport StationInfo from \"../StationInfo/StationInfo\";\nimport FactionInfo from \"../FactionInfo/FactionInfo\";\nimport RaceInfo from \"../RaceInfo/RaceInfo\";\nimport AncestryInfo from \"../AncestryInfo/AncestryInfo\";\nimport BloodlineInfo from \"../BloodlineInfo/BloodlineInfo\";\nimport Test from \"../Test/Test\";\nimport SettingsRepositoryInterface from \"../../repository/SettingsRepository/SettingsRepositoryInterface\";\nimport PathGenerator from \"../../service/PathGenerator/PathGenerator\";\nimport AllianceList from \"../AllianceList/AllianceList\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      [theme.breakpoints.up('lg')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    // necessary for content to be below app bar\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minHeight: 56,\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 48,\n      }\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    logoText: {\n      color: \"inherit\",\n      fontFamily: [\n        'Rajdhani',\n        'sans-serif',\n      ].join(','),\n      fontWeight: 600,\n      textDecoration: \"none\"\n    },\n    darkModeToggle: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minHeight: 48,\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n  }),\n);\n\ninterface Props {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window?: () => Window;\n}\n\nexport default function ResponsiveDrawer(props: Props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  // FIXME\n  // @ts-ignore\n  const mobileOpen = useSelector(state => state.drawer.mobileOpen);\n  // @ts-ignore\n  const darkMode = useSelector(state => state.theme.darkMode);\n  const [openListMore, setOpenListMore] = useState(true);\n  const dispatch = useAppDispatch() as any;\n  const {\n    settingsRepository,\n    pathGenerator\n  }: {\n    settingsRepository: SettingsRepositoryInterface,\n    pathGenerator: PathGenerator\n  } = useDeps();\n\n  useEffect(() => {\n    settingsRepository.getDarkMode()\n      .then(savedDarkMode => {\n        if (savedDarkMode !== darkMode) {\n          dispatch(setDarkMode(savedDarkMode, false));\n        }\n      })\n      .catch(e => console.error(e));\n  }, []);\n\n  const handleCloseDrawer = () => dispatch({type: 'drawer/mobileClose'});\n\n  const handleOpenListMore = () => setOpenListMore(!openListMore);\n\n  const darkModeToggle = (\n    <React.Fragment>\n      <Divider />\n      <FormGroup row className={classes.darkModeToggle}>\n        <FormControlLabel\n          control={\n            <MUISwitch\n              checked={darkMode}\n              //onChange={() => dispatch({type: 'theme/changeMode'})}\n              onChange={() => dispatch(changeDarkMode)}\n              name=\"checkedB\"\n              //color=\"primary\"\n              size=\"small\"\n            />\n          }\n          label=\"Dark mode\"\n        />\n      </FormGroup>\n    </React.Fragment>\n  );\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar}>\n        <Typography\n          variant=\"h4\"\n          align=\"center\"\n          className={classes.logoText}\n          component={Link}\n          onClick={handleCloseDrawer}\n          to=\"/\"\n        >\n          evelook\n        </Typography>\n      </div>\n      <Divider />\n      <List>\n        <ListItem\n          button\n          component={Link}\n          to=\"/search\"\n          onClick={handleCloseDrawer}\n        >\n          <ListItemIcon>\n            <SearchIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Advanced Search\" />\n        </ListItem>\n\n        <ListItem button onClick={handleOpenListMore}>\n          <ListItemIcon>\n            <MoreHorizIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"More\" />\n          {openListMore ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={openListMore} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <ListItem\n              button\n              className={classes.nested}\n              component={Link}\n              onClick={handleCloseDrawer}\n              to={pathGenerator.allianceList()}\n            >\n              <ListItemIcon>\n                <SubdirectoryArrowRightIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Alliances\" />\n            </ListItem>\n          </List>\n        </Collapse>\n\n      </List>\n      {\n        darkModeToggle\n      }\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden lgUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleCloseDrawer}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden mdDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <Switch>\n        <Route exact path={pathGenerator.base.home}>\n          <Home />\n        </Route>\n        <Route exact path={pathGenerator.base.search}>\n          <Search />\n        </Route>\n        <Route path={pathGenerator.base.allianceInfo}>\n          <AllianceInfo />\n        </Route>\n        <Route path={pathGenerator.base.allianceList}>\n          <AllianceList />\n        </Route>\n        <Route path={pathGenerator.base.ancestryInfo}>\n          <AncestryInfo />\n        </Route>\n        <Route path={pathGenerator.base.bloodlineInfo}>\n          <BloodlineInfo />\n        </Route>\n        <Route path={pathGenerator.base.characterInfo}>\n          <CharacterInfo />\n        </Route>\n        <Route path={pathGenerator.base.constellationInfo}>\n          <ConstellationInfo />\n        </Route>\n        <Route path={pathGenerator.base.corporationInfo}>\n          <CorporationInfo />\n        </Route>\n        <Route path={pathGenerator.base.typeInfo}>\n          <TypeInfo />\n        </Route>\n        <Route path={pathGenerator.base.raceInfo}>\n          <RaceInfo />\n        </Route>\n        <Route path={pathGenerator.base.regionInfo}>\n          <RegionInfo />\n        </Route>\n        <Route path={pathGenerator.base.systemInfo}>\n          <SystemInfo />\n        </Route>\n        <Route path={pathGenerator.base.stationInfo}>\n          <StationInfo />\n        </Route>\n        <Route path={pathGenerator.base.factionInfo}>\n          <FactionInfo />\n        </Route>\n        <Route path={pathGenerator.base.test}>\n          <Test />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","import React  from \"react\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { useSelector } from 'react-redux';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Notifier from \"../Notifier/Notifier\";\nimport Dashboard from \"../Dashboard/Dashboard\";\n\nconst theme = (darkMode: boolean) => createMuiTheme({\n  palette: {\n    primary: {\n      main: '#263238',\n    },\n    secondary: {\n      main: '#607d8b',\n    },\n    type: darkMode ? 'dark' : 'light',\n  },\n});\n\nfunction MyApp() {\n  // @ts-ignore\n  const darkMode = useSelector(state => state.theme.darkMode);\n\n  return (\n    <ThemeProvider theme={theme(darkMode)}>\n      <CssBaseline />\n      <Notifier />\n      <Dashboard />\n    </ThemeProvider>\n  );\n}\n\nexport default MyApp;\n","import EsiClientInterface from \"./EsiClientInterface\";\nimport EsiErrorManagerInterface from \"../EsiErrorManager/EsiErrorManagerInterface\";\nimport Query from \"../QueryFactory/Query\";\n\nclass EsiClient implements EsiClientInterface {\n  public readonly baseUrl = \"https://esi.evetech.net\";\n  private readonly _userAgent = \"evelook\";\n  private readonly _fetchClient;\n  private readonly _esiErrorManager;\n\n  constructor(\n    fetchClient: (\n      input: RequestInfo,\n      init?: RequestInit\n    ) => Promise<Response>,\n    esiErrorManager: EsiErrorManagerInterface\n  ) {\n    this._fetchClient = fetchClient;\n    this._esiErrorManager = esiErrorManager;\n  }\n\n  /**\n   * @throws Error On network error or broken error window.\n   */\n  public async getResponse(\n    endUrl: string,\n    method: \"GET\" | \"POST\" | \"DELETE\" | \"PUT\",\n    query: Query | null = null,\n    body: object | null = null\n  ): Promise<Response> {\n    if (this._esiErrorManager.isErrorWindowBroken()) {\n      throw new Error(\"Aborting, too many errors.\");\n    }\n\n    let headers = {\n      \"X-User-Agent\": this._userAgent,\n    };\n\n    let options: RequestInit = {\n      method: method,\n      cache: \"default\",\n      headers: headers\n    };\n\n    let uri = `${this.baseUrl}${endUrl}`;\n    if (query !== null && !query.isEmpty()) {\n      uri = uri.concat(`?${query.toString()}`);\n    }\n\n    if (body !== null) {\n      options[\"body\"] = JSON.stringify(body);\n    }\n\n    let response = await this._fetchClient(uri, options);\n    this._esiErrorManager.saveErrorWindowInfo(response.headers);\n    if (!response.ok) {\n      if (response.status === 420) {  // We are error limited\n        this._esiErrorManager.flagWindowAsBroken();\n      } else {\n        this._esiErrorManager.incrementError();\n      }\n    }\n\n    return response;\n  }\n}\n\nexport default EsiClient;\n","import EsiErrorManagerInterface from \"./EsiErrorManagerInterface\";\n\nclass EsiErrorManager implements EsiErrorManagerInterface {\n  private _errorReset = Date.now() + 60000;\n  private _errorRemain = 100;\n\n  public isErrorWindowBroken(): boolean {\n    if (this._errorReset < Date.now()) {\n      this._resetErrorWindow();\n    }\n\n    return this._errorRemain <= 1;\n  }\n\n  public incrementError(): void {\n    this._errorRemain--;\n  }\n\n  public saveErrorWindowInfo(headers: Headers): void {\n    let limitReset = headers.get(\"x-esi-error-limit-reset\");\n    let limitRemain = headers.get(\"x-esi-error-limit-remain\");\n    if (limitReset === null || limitRemain === null) {\n      return;\n    }\n\n    let headerErrorReset = Number(limitReset);\n    let headerErrorRemain = Number(limitRemain);\n\n    this._errorReset = Date.now() + (headerErrorReset * 1000);\n    if (headerErrorRemain < this._errorRemain) {\n      this._errorRemain = headerErrorRemain;\n    }\n  }\n\n  public flagWindowAsBroken(): void {\n    this._errorRemain = 0;\n  }\n\n  private _resetErrorWindow(): void {\n    this._errorReset = Date.now() + 60000;\n    this._errorRemain = 100;\n  }\n}\n\nexport default EsiErrorManager;\n","import QueryDictionaryInterface from \"./QueryDictionaryInterface\";\n\nclass Query  {\n  private readonly _spaceDelimiter;\n  private _query: QueryDictionaryInterface = {};\n\n  constructor(spaceDelimiter: string = \",\") {\n    this._spaceDelimiter = spaceDelimiter;\n  }\n\n  add(attribute: string, values: string[]): void {\n    this._query[attribute] = values;\n  }\n\n  isEmpty(): boolean {\n    return Object.keys(this._query).length === 0;\n  }\n\n  toString(): string {\n    let queryString = \"\";\n\n    for (let attribute in this._query) {\n      if (!this._query.hasOwnProperty(attribute)) {\n        continue;\n      }\n\n      if (queryString.length > 0) {\n        queryString = queryString.concat(\"&\");\n      }\n\n      let values = \"\";\n      this._query[attribute].forEach((value, index) => {\n        if (index > 0) {\n          values = values.concat(this._spaceDelimiter);\n        }\n\n        values = values.concat(encodeURIComponent(value));\n      });\n\n      queryString = queryString.concat(`${attribute}=${values}`);\n    }\n\n    return queryString;\n  }\n}\n\nexport default Query;\n","import Query from \"./Query\";\n\nclass QueryFactory {\n  public make(): Query {\n    return new Query();\n  }\n}\n\nexport default QueryFactory;\n","class EsiError extends Error {\n  constructor(response: Response) {\n    super(`Esi error code ${response.status}: ${response.statusText}`);\n  }\n}\n\nexport default EsiError;\n","import EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiStatusInterface from \"./EsiStatusInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\nimport StatusCallInterface from \"./StatusCallInterface\";\n\nclass StatusCall implements StatusCallInterface{\n  private readonly _esiClient;\n  private readonly _url = \"/v2/status/\";\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  async get(): Promise<EsiStatusInterface> {\n    let response = await this._esiClient.getResponse(this._url, \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n}\n\nexport default StatusCall;\n","import UniverseNamesCallInterface from \"./UniverseNamesCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\nimport EsiUniverseNamesInterface from \"./EsiUniverseNamesInterface\";\n\nclass UniverseNamesCall implements UniverseNamesCallInterface {\n  private readonly _esiClient;\n  private readonly _url = \"/v3/universe/names/\";\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  async get(ids: number[]): Promise<EsiUniverseNamesInterface[]> {\n    let response = await this._esiClient.getResponse(\n      this._url,\n      \"POST\",\n      null,\n      ids\n    );\n\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n}\n\nexport default UniverseNamesCall;\n","import AllianceListCallInterface from \"./AllianceListCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass AllianceListCall implements AllianceListCallInterface {\n  private readonly _esiClient;\n  private readonly _url = \"/v2/alliances/\";\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  async get(): Promise<number[]> {\n    let response = await this._esiClient.getResponse(this._url, \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n}\n\nexport default AllianceListCall;\n","import AllianceInfoCallInterface from \"./AllianceInfoCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\nimport EsiAllianceInfoInterface from \"./EsiAllianceInfoInterface\";\n\nclass AllianceInfoCall implements AllianceInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  async get(id: number): Promise<EsiAllianceInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v4/alliances/${id}/`;\n  }\n}\n\nexport default AllianceInfoCall;\n","import NameRepositoryInterface from \"./NameRepositoryInterface\";\nimport UniverseNamesCallInterface from \"../../service/Call/UniverseNamesCall/UniverseNamesCallInterface\";\nimport EsiUniverseNamesInterface from \"../../service/Call/UniverseNamesCall/EsiUniverseNamesInterface\";\n\nclass NameRepository implements NameRepositoryInterface {\n  private readonly _universeNamesCaller;\n\n  constructor(universeNamesCaller: UniverseNamesCallInterface) {\n    this._universeNamesCaller = universeNamesCaller;\n  }\n\n  public async resolveGeneric(ids: number[]): Promise<EsiUniverseNamesInterface[]> {\n    this._removeBannedIDs(ids);\n\n    let allResolvedIDs: EsiUniverseNamesInterface[] = [];\n    let failuresCount = 0;\n    let maxAllowedFailures = 20;\n\n    let chunks: number[][] = [];\n    while (ids.length > 0) {\n      chunks.push(ids.splice(0, 999));\n    }\n\n    for (let chunk of chunks) {\n      if (failuresCount >= maxAllowedFailures) {\n        throw new Error(\"\");  // TODO\n      }\n\n      try {\n        let localResolvedIDs = await this._universeNamesCaller.get(chunk);\n        allResolvedIDs = allResolvedIDs.concat(localResolvedIDs);\n      } catch (e) {\n        failuresCount++;\n\n        if (chunk.length > 1) {\n          // We split the chunk in half for retries\n          chunks.push(chunk.splice(0, Math.round(chunk.length / 2)));\n          chunks.push(chunk);\n        }\n      }\n    }\n\n    return allResolvedIDs;\n  }\n\n  private _removeBannedIDs(ids: number[]): void {\n    let index = ids.indexOf(1);\n    if (index !== -1) {\n      ids.splice(index, 1);\n    }\n  }\n}\n\nexport default NameRepository;\n","import AllianceCorporationsCallInterface from \"./AllianceCorporationsCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass AllianceCorporationsCall implements AllianceCorporationsCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  async get(id: number): Promise<number[]> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v2/alliances/${id}/corporations/`;\n  }\n}\n\nexport default AllianceCorporationsCall;\n","import EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiPublicSearchInterface from \"./EsiPublicSearchInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\nimport QueryFactoryInterface from \"../../QueryFactory/QueryFactoryInterface\";\nimport PublicSearchCallInterface from \"./PublicSearchCallInterface\";\nimport EsiCategory from \"./EsiCategory\";\n\nclass PublicSearchCall implements PublicSearchCallInterface {\n  private readonly _esiClient;\n  private readonly _queryFactory;\n  private readonly _url = \"/v2/search/\";\n\n  constructor(\n    esiClient: EsiClientInterface,\n    queryFactory: QueryFactoryInterface\n  ) {\n    this._esiClient = esiClient;\n    this._queryFactory = queryFactory;\n  }\n\n  /**\n   * @throws Error\n   */\n  async get(\n    searchString: string,\n    categories: EsiCategory[],\n    strict?: boolean\n  ): Promise<EsiPublicSearchInterface> {\n    let query = this._queryFactory.make();\n    query.add(\"search\", [searchString]);\n    query.add(\"categories\", categories);\n    if (strict !== undefined) {\n      query.add(\"strict\", [String(strict)]);\n    }\n\n    let response = await this._esiClient.getResponse(this._url, \"GET\", query);\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n}\n\nexport default PublicSearchCall;\n","import AllianceListCallInterface from \"../../service/Call/AllianceListCall/AllianceListCallInterface\";\nimport NameRepositoryInterface from \"../NameRepository/NameRepositoryInterface\";\nimport AllianceRepositoryInterface from \"./AllianceRepositoryInterface\";\nimport AllianceInfoCallInterface from \"../../service/Call/AllianceInfoCall/AllianceInfoCallInterface\";\nimport RepoAllianceInterface from \"./RepoAllianceInterface\";\nimport AllianceCorporationsCallInterface\n  from \"../../service/Call/AllianceCorporationsCall/AllianceCorporationsCallInterface\";\nimport EsiUniverseNamesInterface from \"../../service/Call/UniverseNamesCall/EsiUniverseNamesInterface\";\n\nclass AllianceRepository implements AllianceRepositoryInterface {\n  private readonly _allianceListCall;\n  private readonly _allianceInfoCall;\n  private readonly _allianceCorpsCall;\n  private readonly _nameRepo;\n\n  constructor(\n    allianceListCall: AllianceListCallInterface,\n    allianceInfoCall: AllianceInfoCallInterface,\n    allianceCorpsCall: AllianceCorporationsCallInterface,\n    nameRepo: NameRepositoryInterface\n  ) {\n    this._allianceListCall = allianceListCall;\n    this._allianceInfoCall = allianceInfoCall;\n    this._allianceCorpsCall = allianceCorpsCall;\n    this._nameRepo = nameRepo;\n  }\n\n  public async getOne(id: number): Promise<RepoAllianceInterface> {\n    let [\n      esiAlliance,\n      esiAllianceCorps\n    ] = await Promise.all([\n      this._allianceInfoCall.get(id),\n      this._allianceCorpsCall.get(id)\n    ]);\n\n    let repoAlliance: RepoAllianceInterface = {\n      ...esiAlliance,\n      id: id,\n      creator_corporation_name: \"#error\",\n      creator_name: \"#error\",\n      executor_corporation_name: undefined,\n      faction_name: undefined,\n      corporations: {}\n    };\n\n    let {\n      creator_corporation_id,\n      creator_id,\n      executor_corporation_id,\n      faction_id\n    } = esiAlliance;\n    let idsToResolve: number[] = [];\n    this._pushUnique(idsToResolve, creator_corporation_id);\n    this._pushUnique(idsToResolve, creator_id);\n    if (executor_corporation_id !== undefined) {\n      this._pushUnique(idsToResolve, executor_corporation_id);\n    }\n    if (faction_id !== undefined) {\n      this._pushUnique(idsToResolve, faction_id);\n    }\n\n    let [\n      allianceNames,\n      corpsNames\n    ] = await Promise.all([\n      this._nameRepo.resolveGeneric(idsToResolve),\n      this._nameRepo.resolveGeneric(esiAllianceCorps)\n    ]);\n\n    allianceNames.forEach(resolvedName => {\n      let { id, name } = resolvedName;\n      if (id === creator_corporation_id) {\n        repoAlliance.creator_corporation_name = name;\n      }\n      if (id === creator_id) {\n        repoAlliance.creator_name = name;\n      }\n      if (id === executor_corporation_id) {\n        repoAlliance.executor_corporation_name = name;\n      }\n      if (id === faction_id) {\n        repoAlliance.faction_name = name;\n      }\n    });\n\n    corpsNames.forEach(corpName => {\n      repoAlliance.corporations[corpName.id] = corpName.name;\n    });\n\n    return repoAlliance;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getList(): Promise<EsiUniverseNamesInterface[]> {\n    let allianceIDs = await this._allianceListCall.get();\n    let names = await this._nameRepo.resolveGeneric(allianceIDs);\n\n    let resolvedIDs: number[] = [];\n    names.forEach(({id}) => resolvedIDs.push(id));\n\n    allianceIDs.forEach(id => {\n      if (!resolvedIDs.includes(id)) {\n        names.push({\n          category: \"alliance\",\n          id: id,\n          name: `UNRESOLVED#${id}`\n        });\n      }\n    });\n\n    return names;\n  }\n\n  private _pushUnique(inputArray: number[], value: number): number[] {\n    if (!inputArray.includes(value)) {\n      inputArray.push(value);\n    }\n\n    return inputArray;\n  }\n}\n\nexport default AllianceRepository;\n","const categoriesForType = [\"agent\", \"alliance\", \"character\", \"constellation\", \"corporation\", \"faction\", \"inventory_type\", \"region\", \"solar_system\", \"station\"] as const;\ntype EsiCategory = typeof categoriesForType[number];\nconst esiCategories: EsiCategory[] = [\"agent\", \"alliance\", \"character\", \"constellation\", \"corporation\", \"faction\", \"inventory_type\", \"region\", \"solar_system\", \"station\"];\n\nexport default EsiCategory;\nexport { esiCategories };","import SearchRepositoryInterface from \"./SearchRepositoryInterface\";\nimport NameRepositoryInterface from \"../NameRepository/NameRepositoryInterface\";\nimport PublicSearchCallInterface from \"../../service/Call/PublicSearchCall/PublicSearchCallInterface\";\nimport RepoCategory from \"./RepoCategory\";\nimport EsiCategory, {esiCategories} from \"../../service/Call/PublicSearchCall/EsiCategory\";\nimport EsiUniverseNamesInterface from \"../../service/Call/UniverseNamesCall/EsiUniverseNamesInterface\";\nimport ResultWithLinkInterface from \"./ResulWithLinkInterface\";\nimport {MutableRefObject} from \"react\";\nimport PathGenerator from \"../../service/PathGenerator/PathGenerator\";\n\n\nexport type AutocompleteCache = { [key: string]: ResultWithLinkInterface[] };\n\nclass SearchRepository implements SearchRepositoryInterface {\n  private readonly _nameRepo;\n  private readonly _publicSearchCall;\n  private readonly _pathGenerator;\n\n  constructor(\n    nameRepo: NameRepositoryInterface,\n    publicSearchCall: PublicSearchCallInterface,\n    pathGenerator: PathGenerator\n  ) {\n    this._nameRepo = nameRepo;\n    this._publicSearchCall = publicSearchCall;\n    this._pathGenerator = pathGenerator;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async publicSearch(\n    searchString: string,\n    category: RepoCategory,\n    strict: boolean\n  ): Promise<ResultWithLinkInterface[]> {\n    let categoriesForCall: EsiCategory[];\n    if (category === \"all\") {\n      categoriesForCall = esiCategories;\n    } else {\n      categoriesForCall = [category];\n    }\n    let search = await this._publicSearchCall.get(searchString, categoriesForCall, strict);\n\n    let ids: number[] = [];\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    for (let [key, value] of Object.entries(search)) {\n      ids = ids.concat(value);\n    }\n    let names = await this._nameRepo.resolveGeneric(ids);\n\n    return this._composeResult(names);\n  }\n\n  public async forAutocomplete(\n    searchString: string,\n    category: RepoCategory,\n    cacheRef: MutableRefObject<AutocompleteCache>\n  ): Promise<ResultWithLinkInterface[]> {\n    if (cacheRef.current.hasOwnProperty(searchString)) {\n      return cacheRef.current[searchString];\n    }\n\n    let categoriesForCall: EsiCategory[];\n    if (category === \"all\") {\n      categoriesForCall = esiCategories;\n    } else {\n      categoriesForCall = [category];\n    }\n    let search = await this._publicSearchCall.get(searchString, categoriesForCall, false);\n\n    let ids: number[] = [];\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    for (let [key, value] of Object.entries(search)) {\n      ids = ids.concat(value);\n    }\n\n    let uniNames = await this._nameRepo.resolveGeneric(ids);\n    let justNames: EsiUniverseNamesInterface[] = [];\n    let lowercaseSearchString = searchString.toLowerCase();\n    uniNames.forEach(uniName => {\n      let { name } = uniName;\n      if (name.toLowerCase().startsWith(lowercaseSearchString)) {\n        justNames.push(uniName);\n      }\n    });\n\n    let orderedNames = justNames.sort((a, b) => a.name.length - b.name.length);\n    let result = this._composeResult(orderedNames);\n\n    cacheRef.current = {\n      ...cacheRef.current,\n      [searchString]: result\n    };\n\n    return result;\n  }\n\n  private _composeResult(names: EsiUniverseNamesInterface[]): ResultWithLinkInterface[] {\n    let result: ResultWithLinkInterface[] = [];\n    names.forEach(name => {\n      let prettyCategory;\n      let link;\n      switch (name.category) {\n        case \"alliance\":\n          prettyCategory = \"Alliance\";\n          link = this._pathGenerator.allianceInfo(`${name.id}`)\n          break;\n        case \"character\":\n          prettyCategory = \"Character\";\n          link = this._pathGenerator.characterInfo(`${name.id}`)\n          break;\n        case \"constellation\":\n          prettyCategory = \"Constellation\";\n          //link = \"/constellation/\";\n          link = null;\n          break;\n        case \"corporation\":\n          prettyCategory = \"Corporation\";\n          link = this._pathGenerator.corporationInfo(`${name.id}`);\n          break;\n        case \"inventory_type\":\n          prettyCategory = \"Item\";\n          //link = \"/type/\";\n          link = null;\n          break;\n        case \"region\":\n          prettyCategory = \"Region\";\n          //link = \"/region/\";\n          link = null;\n          break;\n        case \"solar_system\":\n          prettyCategory = \"System\";\n          //link = \"/system/\";\n          link = null;\n          break;\n        case \"station\":\n          prettyCategory = \"Station\";\n          //link = \"/station/\";\n          link = null\n          break;\n        case \"faction\":\n          prettyCategory = \"Faction\";\n          //link = \"/faction/\";\n          link = null;\n          break;\n        default:\n          prettyCategory = name.category;\n          link = null;\n      }\n\n      result.push({\n        ...name,\n        prettyCategory: prettyCategory,\n        link: link\n      });\n    });\n\n    return result;\n  }\n}\n\nexport default SearchRepository;\n","import CharacterInfoCallInterface from \"./CharacterInfoCallInterface\";\nimport EsiCharacterInfoInterface from \"./EsiCharacterInfoInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass CharacterInfoCall implements CharacterInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(id: number): Promise<EsiCharacterInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v4/characters/${id}/`;\n  }\n}\n\nexport default CharacterInfoCall;\n","import ConstellationInfoCallInterface from \"./ConstellationInfoCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiConstellationInfoInterface from \"./EsiConstellationInfoInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass ConstellationInfoCall implements ConstellationInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  public async get(id: number): Promise<EsiConstellationInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v1/universe/constellations/${id}/`;\n  }\n}\n\nexport default ConstellationInfoCall;\n","import CorporationInfoCallInterface from \"./CorporationInfoCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiCorporationInfoInterface from \"./EsiCorporationInfoInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass CorporationInfoCall implements CorporationInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(id: number): Promise<EsiCorporationInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v5/corporations/${id}/`;\n  }\n}\n\nexport default CorporationInfoCall;\n","import TypeInfoCallInterface from \"./TypeInfoCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiTypeInfoInterface from \"./EsiTypeInfoInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass TypeInfoCall implements TypeInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(id: number): Promise<EsiTypeInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v3/universe/types/${id}/`;\n  }\n}\n\nexport default TypeInfoCall;\n","import RegionInfoCallInterface from \"./RegionInfoCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiRegionInfoInterface from \"./EsiRegionInfoInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass RegionInfoCall implements RegionInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(id: number): Promise<EsiRegionInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v1/universe/regions/${id}/`;\n  }\n}\n\nexport default RegionInfoCall;\n","import SystemInfoCallInterface from \"./SystemInfoCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiSystemInfoInterface from \"./EsiSystemInfoInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass SystemInfoCall implements SystemInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(id: number): Promise<EsiSystemInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v4/universe/systems/${id}/`;\n  }\n}\n\nexport default SystemInfoCall;\n","import StationInfoCallInterface from \"./StationInfoCallInterface\";\nimport EsiStationInfoInterface from \"./EsiStationInfoInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass StationInfoCall implements StationInfoCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  public async get(id: number): Promise<EsiStationInfoInterface> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v2/universe/stations/${id}/`;\n  }\n}\n\nexport default StationInfoCall;\n","import FactionCallInterface from \"./FactionCallInterface\";\nimport EsiFactionInterface from \"./EsiFactionInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass FactionCall implements FactionCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(): Promise<EsiFactionInterface[]> {\n    let response = await this._esiClient.getResponse(this._getUrl(), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(): string {\n    return `/v2/universe/factions/`;\n  }\n}\n\nexport default FactionCall;\n","import AncestryCallInterface from \"./AncestryCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiAncestryInterface from \"./EsiAncestryInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass AncestryCall implements AncestryCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(): Promise<EsiAncestryInterface[]> {\n    let response = await this._esiClient.getResponse(this._getUrl(), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(): string {\n    return `/v1/universe/ancestries/`;\n  }\n}\n\nexport default AncestryCall;\n","import BloodlineCallInterface from \"./BloodlineCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiBloodlineInterface from \"./EsiBloodlineInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass BloodlineCall implements BloodlineCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(): Promise<EsiBloodlineInterface[]> {\n    let response = await this._esiClient.getResponse(this._getUrl(), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(): string {\n    return `/v1/universe/bloodlines/`;\n  }\n}\n\nexport default BloodlineCall;\n","import AncestryRepositoryInterface from \"./AncestryRepositoryInterface\";\nimport EsiAncestryInterface from \"../../service/Call/AncestryCall/EsiAncestryInterface\";\nimport AncestryCallInterface from \"../../service/Call/AncestryCall/AncestryCallInterface\";\n\nclass AncestryRepository implements AncestryRepositoryInterface {\n  private readonly _ancestryCall;\n\n  constructor(ancestryCall: AncestryCallInterface) {\n    this._ancestryCall = ancestryCall;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getName(id: number): Promise<string> {\n    let ancestries = await this._ancestryCall.get();\n    let foundAncestry: EsiAncestryInterface | null = null;\n    for (let ancestry of ancestries) {\n      if (ancestry.id === id) {\n        foundAncestry = ancestry;\n        break;\n      }\n    }\n\n    if (foundAncestry === null) {\n      throw new Error(\"Ancestry not found\");\n    }\n\n    return foundAncestry.name;\n  }\n}\n\nexport default AncestryRepository;\n","import EsiUniverseNamesInterface from \"../../service/Call/UniverseNamesCall/EsiUniverseNamesInterface\";\n\nabstract class AbstractRepository {\n  protected _pushUnique(inputArray: number[], value: number): number[] {\n    if (!inputArray.includes(value)) {\n      inputArray.push(value);\n    }\n\n    return inputArray;\n  }\n\n  protected _orderNamesByID(\n    names: EsiUniverseNamesInterface[]\n  ): {\n    [key: string]: EsiUniverseNamesInterface\n  } {\n    let orderedNames: {[key: string]: EsiUniverseNamesInterface} = {};\n    names.forEach(name => {\n      orderedNames[String(name.id)] = name;\n    });\n\n    return orderedNames;\n  }\n}\n\nexport default AbstractRepository;\n","import BloodlineRepositoryInterface from \"./BloodlineRepositoryInterface\";\nimport BloodlineCallInterface from \"../../service/Call/BloodlineCall/BloodlineCallInterface\";\nimport EsiBloodlineInterface from \"../../service/Call/BloodlineCall/EsiBloodlineInterface\";\nimport RepoBloodlineInterface from \"./RepoBloodlineInterface\";\nimport RaceRepositoryInterface from \"../RaceRepository/RaceRepositoryInterface\";\nimport NameRepositoryInterface from \"../NameRepository/NameRepositoryInterface\";\nimport AbstractRepository from \"../AbstractRepository/AbstractRepository\";\nimport EsiUniverseNamesInterface from \"../../service/Call/UniverseNamesCall/EsiUniverseNamesInterface\";\n\nclass BloodlineRepository extends AbstractRepository implements BloodlineRepositoryInterface {\n  private readonly _bloodlineCall;\n  private readonly _raceRepo;\n  private readonly _nameRepo;\n\n  constructor(\n    bloodlineCall: BloodlineCallInterface,\n    raceRepo: RaceRepositoryInterface,\n    nameRepo: NameRepositoryInterface\n  ) {\n    super();\n    this._bloodlineCall = bloodlineCall;\n    this._raceRepo = raceRepo;\n    this._nameRepo = nameRepo;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getAll(): Promise<RepoBloodlineInterface[]> {\n    return [];\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getOne(id: number): Promise<RepoBloodlineInterface> {\n    let foundBloodline = await this._getEsiBloodline(id);\n    let {\n      race_id,\n      corporation_id,\n      ship_type_id\n    } = foundBloodline;\n\n    let raceNamePromise = this._raceRepo.getName(race_id);\n\n    let idsToResolve = this._getIDsToResolve([foundBloodline]);\n    let indexedNames: {[key: string]: EsiUniverseNamesInterface} = {};\n    if (idsToResolve.length > 0) {\n      indexedNames = this._orderNamesByID(await this._nameRepo.resolveGeneric(idsToResolve));\n    }\n\n    let ship_type_name = undefined;\n    if (ship_type_id !== undefined && ship_type_id !== null) {\n      ship_type_name = indexedNames[ship_type_id].name ?? \"#error\";\n    }\n\n    return {\n      ...foundBloodline,\n      corporation_name: indexedNames[corporation_id].name ?? \"#error\",\n      race_name: await raceNamePromise,\n      ship_type_name: ship_type_name\n    }\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getName(id: number): Promise<string> {\n    let foundBloodline = await this._getEsiBloodline(id);\n\n    return foundBloodline.name;\n  }\n\n  private _getIDsToResolve(bloodlines: EsiBloodlineInterface[]): number[] {\n    let idsToResolve: number[] = [];\n\n    bloodlines.forEach(bloodline => {\n      let {\n        corporation_id,\n        ship_type_id\n      } = bloodline;\n      this._pushUnique(idsToResolve, corporation_id);\n      if (ship_type_id !== undefined && ship_type_id !== null) {\n        this._pushUnique(idsToResolve, ship_type_id);\n      }\n    });\n\n    return idsToResolve;\n  }\n\n  /**\n   * @throws Error\n   */\n  private async _getEsiBloodline(id: number): Promise<EsiBloodlineInterface> {\n    let bloodlines = await this._bloodlineCall.get();\n    let foundBloodline: EsiBloodlineInterface | null = null;\n    for (let bloodline of bloodlines) {\n      if (bloodline.bloodline_id === id) {\n        foundBloodline = bloodline;\n        break;\n      }\n    }\n\n    if (foundBloodline === null) {\n      throw new Error(\"Bloodline not found\");\n    }\n\n    return foundBloodline;\n  }\n}\n\nexport default BloodlineRepository;\n","import CharacterRepositoryInterface from \"./CharacterRepositoryInterface\";\nimport RepoCharacterInterface from \"./RepoCharacterInterface\";\nimport AncestryRepositoryInterface from \"../AncestryRepository/AncestryRepositoryInterface\";\nimport CharacterInfoCallInterface from \"../../service/Call/CharacterInfoCall/CharacterInfoCallInterface\";\nimport BloodlineRepositoryInterface from \"../BloodlineRepository/BloodlineRepositoryInterface\";\nimport NameRepositoryInterface from \"../NameRepository/NameRepositoryInterface\";\nimport RaceRepositoryInterface from \"../RaceRepository/RaceRepositoryInterface\";\nimport CharacterCorpHistoryCallInterface\n  from \"../../service/Call/CharacterCorpHistoryCall/CharacterCorpHistoryCallInterface\";\nimport RepoCharacterCorpHistoryInterface from \"./RepoCharacterCorpHistoryInterface\";\n\nclass CharacterRepository implements CharacterRepositoryInterface {\n  private readonly _characterInfoCall;\n  private readonly _characterCorpHistoryCall;\n  private readonly _ancestryRepo;\n  private readonly _bloodlineRepo;\n  private readonly _nameRepo;\n  private readonly _raceRepo;\n\n  constructor(\n    characterInfoCall: CharacterInfoCallInterface,\n    characterCorpHistoryCall: CharacterCorpHistoryCallInterface,\n    ancestryRepo: AncestryRepositoryInterface,\n    bloodlineRepo: BloodlineRepositoryInterface,\n    nameRepo: NameRepositoryInterface,\n    raceRepo: RaceRepositoryInterface\n  ) {\n    this._characterInfoCall = characterInfoCall;\n    this._characterCorpHistoryCall = characterCorpHistoryCall;\n    this._ancestryRepo = ancestryRepo;\n    this._bloodlineRepo = bloodlineRepo;\n    this._nameRepo = nameRepo;\n    this._raceRepo = raceRepo;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getOne(id: number): Promise<RepoCharacterInterface> {\n    let [\n      esiChar,\n      repoCorpHistory\n    ] = await Promise.all([\n      this._characterInfoCall.get(id),\n      this._getCorpHistory(id)\n    ]);\n\n    let repoChar: RepoCharacterInterface = {\n      ...esiChar,\n      alliance_name: esiChar.alliance_id === undefined ? undefined : \"#error\",\n      ancestry_name: esiChar.ancestry_id === undefined ? undefined : \"#error\",\n      bloodline_name: \"#error\",\n      corporation_name: \"#name\",\n      faction_name: esiChar.faction_id === undefined ? undefined : \"#error\",\n      race_name: \"#error\",\n      id: id,\n      corporation_history: repoCorpHistory\n    }\n\n    let {\n      alliance_id,\n      ancestry_id,\n      bloodline_id,\n      corporation_id,\n      faction_id,\n      race_id\n    } = esiChar;\n    let idsToResolve: number[] = [];\n    idsToResolve.push(corporation_id);\n    if (alliance_id !== undefined) {\n      idsToResolve.push(alliance_id);\n    }\n    if (faction_id !== undefined) {\n      idsToResolve.push(faction_id);\n    }\n\n    let ancestryPromise = null; // Because ancestry is optional\n    if (ancestry_id !== undefined) {\n      ancestryPromise = this._ancestryRepo.getName(ancestry_id);\n    }\n    let bloodlinePromise = this._bloodlineRepo.getName(bloodline_id);\n    let namesPromise = this._nameRepo.resolveGeneric(idsToResolve);\n    let racePromise = this._raceRepo.getName(race_id);\n\n    if (ancestryPromise !== null) {\n      try {\n        repoChar.ancestry_name = await ancestryPromise;\n      } catch (e) {\n        // Intentionally left blank, it's a call of secondary importance\n      }\n    }\n    try {\n      repoChar.bloodline_name = await bloodlinePromise;\n    } catch (e) {\n      // Intentionally left blank, it's a call of secondary importance\n    }\n    try {\n      repoChar.race_name = await racePromise;\n    } catch (e) {\n      // Intentionally left blank, it's a call of secondary importance\n    }\n    try {\n      let charNames = await namesPromise;\n      charNames.forEach(resolvedName => {\n        let { id, name } = resolvedName;\n        if (id === corporation_id) {\n          repoChar.corporation_name = name;\n        }\n        if (id === alliance_id) {\n          repoChar.alliance_name = name;\n        }\n        if (id === faction_id) {\n          repoChar.faction_name = name;\n        }\n      });\n    } catch (e) {\n      // Intentionally left blank, it's a call of secondary importance\n    }\n\n    return repoChar;\n  }\n\n  private async _getCorpHistory(id: number): Promise<RepoCharacterCorpHistoryInterface[]> {\n    let corpHistory = await this._characterCorpHistoryCall.get(id);\n    let idsToResolve: number[] = [];\n    corpHistory.forEach(corp => {\n      if (corp.is_deleted === undefined || !corp.is_deleted) {\n        idsToResolve = this._pushUnique(idsToResolve, corp.corporation_id);\n      }\n    });\n\n    let names = await this._nameRepo.resolveGeneric(idsToResolve);\n    let repoCorpHistory: RepoCharacterCorpHistoryInterface[] = [];\n    corpHistory.forEach(corp => {\n      let { corporation_id } = corp;\n      let foundName = `#${corporation_id}`;\n      for (let name of names) {\n        if (name.id === corporation_id) {\n          foundName = name.name;\n          break;\n        }\n      }\n\n      repoCorpHistory.push({\n        ...corp,\n        corporation_name: foundName\n      });\n    });\n\n    return repoCorpHistory;\n  }\n\n  private _pushUnique(inputArray: number[], value: number): number[] {\n    if (!inputArray.includes(value)) {\n      inputArray.push(value);\n    }\n\n    return inputArray;\n  }\n}\n\nexport default CharacterRepository;\n","import RaceCallInterface from \"./RaceCallInterface\";\nimport EsiRaceInterface from \"./EsiRaceInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass RaceCall implements RaceCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async get(): Promise<EsiRaceInterface[]> {\n    let response = await this._esiClient.getResponse(this._getUrl(), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(): string {\n    return `/v1/universe/races/`;\n  }\n}\n\nexport default RaceCall;\n","import RaceRepositoryInterface from \"./RaceRepositoryInterface\";\nimport RaceCallInterface from \"../../service/Call/RaceCall/RaceCallInterface\";\nimport EsiRaceInterface from \"../../service/Call/RaceCall/EsiRaceInterface\";\nimport RepoRaceInterface from \"./RepoRaceInterface\";\nimport NameRepositoryInterface from \"../NameRepository/NameRepositoryInterface\";\nimport AbstractRepository from \"../AbstractRepository/AbstractRepository\";\nimport FactionRepositoryInterface from \"../FactionRepository/FactionRepositoryInterface\";\n\nclass RaceRepository extends AbstractRepository implements RaceRepositoryInterface {\n  private readonly _raceCall;\n  private readonly _nameRepo;\n  private readonly _factionRepo;\n\n  constructor(\n    raceCall: RaceCallInterface,\n    nameRepo: NameRepositoryInterface,\n    factionRepo: FactionRepositoryInterface\n  ) {\n    super();\n    this._raceCall = raceCall;\n    this._nameRepo = nameRepo;\n    this._factionRepo = factionRepo;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getAll(): Promise<RepoRaceInterface[]> {\n    let esiRaces = await this._raceCall.get();\n    let idsToResolve: number[] = [];\n    let repoRaces: RepoRaceInterface[] = [];\n    esiRaces.forEach(esiRace => {\n      this._pushUnique(idsToResolve, esiRace.alliance_id);\n      repoRaces.push({\n        ...esiRace,\n        alliance_name: \"#error\",\n      });\n    });\n\n    let names = this._orderNamesByID(await this._nameRepo.resolveGeneric(idsToResolve));\n    repoRaces.forEach(repoRace => {\n      if (names[String(repoRace.alliance_id)] !== undefined) {\n        repoRace.alliance_name = names[String(repoRace.alliance_id)].name;\n      }\n    });\n\n    return repoRaces;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getOne(id: number): Promise<RepoRaceInterface> {\n    let foundRace = await this._getEsiRace(id);\n\n    return {\n      ...foundRace,\n      alliance_name: await this._factionRepo.getName(foundRace.alliance_id)\n    };\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getName(id: number): Promise<string> {\n    let foundRace = await this._getEsiRace(id);\n\n    return foundRace.name;\n  }\n\n  /**\n   * @throws Error\n   */\n  private async _getEsiRace(id: number): Promise<EsiRaceInterface> {\n    let races = await this._raceCall.get();\n    let foundRace: EsiRaceInterface | null = null;\n    for (let race of races) {\n      if (race.race_id === id) {\n        foundRace = race;\n        break;\n      }\n    }\n\n    if (foundRace === null) {\n      throw new Error(\"Race not found\");\n    }\n\n    return foundRace;\n  }\n}\n\nexport default RaceRepository;\n","import CharacterCorpHistoryCallInterface from \"./CharacterCorpHistoryCallInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiCharacterCorpHistoryInterface from \"./EsiCharacterCorpHistoryInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass CharacterCorpHistoryCall implements CharacterCorpHistoryCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  public async get(id: number): Promise<EsiCharacterCorpHistoryInterface[]> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v1/characters/${id}/corporationhistory/`;\n  }\n}\n\nexport default CharacterCorpHistoryCall;\n","import DateFormatterInterface from \"./DateFormatterInterface\";\n\nclass DateFormatter implements DateFormatterInterface {\n  public withDateTime(date: Date): string {\n    let yyyy = `${date.getUTCFullYear()}`;\n    let mm = this.toStringWithLeadingZero(date.getUTCMonth() + 1);\n    let dd = this.toStringWithLeadingZero(date.getUTCDate());\n    let hr = this.toStringWithLeadingZero(date.getUTCHours());\n    let min = this.toStringWithLeadingZero(date.getUTCMinutes());\n    let sec = this.toStringWithLeadingZero(date.getUTCSeconds());\n\n    return `${yyyy}.${mm}.${dd} ${hr}:${min}:${sec}`;\n  }\n\n  public onlyDate(date: Date): string {\n    let yyyy = `${date.getUTCFullYear()}`;\n    let mm = this.toStringWithLeadingZero(date.getUTCMonth() + 1);\n    let dd = this.toStringWithLeadingZero(date.getUTCDate());\n\n    return `${yyyy}.${mm}.${dd}`;\n  }\n\n  private toStringWithLeadingZero(value: number): string {\n    if (value < 10) {\n      return `0${value}`;\n    }\n\n    return `${value}`;\n  }\n}\n\nexport default DateFormatter;\n","import CorporationAllianceHistoryCallInterface from \"./CorporationAllianceHistoryCallInterface\";\nimport EsiCorporationAllianceHistoryInterface from \"./EsiCorporationAllianceHistoryInterface\";\nimport EsiClientInterface from \"../../EsiClient/EsiClientInterface\";\nimport EsiError from \"../../../error/EsiError/EsiError\";\n\nclass CorporationAllianceHistoryCall implements CorporationAllianceHistoryCallInterface {\n  private readonly _esiClient;\n\n  constructor(esiClient: EsiClientInterface) {\n    this._esiClient = esiClient;\n  }\n\n  public async get(id: number): Promise<EsiCorporationAllianceHistoryInterface[]> {\n    let response = await this._esiClient.getResponse(this._getUrl(id), \"GET\");\n    if (!response.ok) {\n      throw new EsiError(response);\n    }\n\n    return response.json();\n  }\n\n  private _getUrl(id: number): string {\n    return `/v3/corporations/${id}/alliancehistory/`;\n  }\n}\n\nexport default CorporationAllianceHistoryCall;\n","import CorporationRepositoryInterface from \"./CorporationRepositoryInterface\";\nimport RepoCorporationInterface from \"./RepoCorporationInterface\";\nimport CorporationInfoCallInterface from \"../../service/Call/CorporationInfoCall/CorporationInfoCallInterface\";\nimport NameRepositoryInterface from \"../NameRepository/NameRepositoryInterface\";\nimport CorporationAllianceHistoryCallInterface\n  from \"../../service/Call/CorporationAllianceHistoryCall/CorporationAllianceHistoryCallInterface\";\nimport RepoCorpAllianceHistoryInterface from \"./RepoCorpAllianceHistoryInterface\";\n\nclass CorporationRepository implements CorporationRepositoryInterface {\n  private readonly _corpInfoCall;\n  private readonly _corpAllianceHistoryCall;\n  private readonly _nameRepo;\n\n  constructor(\n    corpInfoCall: CorporationInfoCallInterface,\n    corpAllianceHistoryCall: CorporationAllianceHistoryCallInterface,\n    nameRepo: NameRepositoryInterface\n  ) {\n    this._corpInfoCall = corpInfoCall;\n    this._corpAllianceHistoryCall = corpAllianceHistoryCall;\n    this._nameRepo = nameRepo;\n  }\n\n  public async getOne(id: number): Promise<RepoCorporationInterface> {\n    let [\n      esiCorp,\n      allianceHistory\n    ] = await Promise.all([\n      this._corpInfoCall.get(id),\n      this.getAllianceHistory(id)\n    ]);\n\n    let repoCorp: RepoCorporationInterface = {\n      ...esiCorp,\n      alliance_name: undefined,\n      ceo_name: \"#error\",\n      creator_name: \"#error\",\n      faction_name: undefined,\n      home_station_name: undefined,\n      alliance_history: allianceHistory,\n      id: id,\n    };\n\n    let {\n      alliance_id,\n      ceo_id,\n      creator_id,\n      faction_id,\n      home_station_id\n    } = esiCorp;\n    let idsToResolve: number[] = [];\n    this._pushUnique(idsToResolve, ceo_id);\n    this._pushUnique(idsToResolve, creator_id);\n    if (alliance_id !== undefined) {\n      this._pushUnique(idsToResolve, alliance_id);\n    }\n    if (faction_id !== undefined) {\n      this._pushUnique(idsToResolve, faction_id);\n    }\n    if (home_station_id !== undefined) {\n      this._pushUnique(idsToResolve, home_station_id);\n    }\n\n    let corpNames = await this._nameRepo.resolveGeneric(idsToResolve);\n    corpNames.forEach(resolvedName => {\n      let { id, name } = resolvedName;\n\n      if (id === alliance_id) {\n        repoCorp.alliance_name = name;\n      }\n      if (id === ceo_id) {\n        repoCorp.ceo_name = name;\n      }\n      if (id === creator_id) {\n        repoCorp.creator_name = name;\n      }\n      if (id === faction_id) {\n        repoCorp.faction_name = name;\n      }\n      if (id === home_station_id) {\n        repoCorp.home_station_name = name;\n      }\n    });\n\n    return repoCorp;\n  }\n\n  public async getAllianceHistory(id: number): Promise<RepoCorpAllianceHistoryInterface[]> {\n    let corpHistory = await this._corpAllianceHistoryCall.get(id);\n\n    let idsToResolve: number[] = [];\n    let recordIDs: number[] = [];\n    let indexedCorpHistory: { [key: string]: RepoCorpAllianceHistoryInterface } = {};\n    corpHistory.forEach(record => {\n      let allianceNamePlaceholder = undefined;\n      if (record.alliance_id !== undefined) {\n        idsToResolve = this._pushUnique(idsToResolve, record.alliance_id);\n        allianceNamePlaceholder = \"#error\";\n      }\n      recordIDs.push(record.record_id);\n      indexedCorpHistory[record.record_id] = {\n        ...record,\n        end_date: undefined,\n        alliance_name: allianceNamePlaceholder,\n      };\n    });\n    let names = await this._nameRepo.resolveGeneric(idsToResolve);\n\n    let historyToReturn: RepoCorpAllianceHistoryInterface[] = [];\n    recordIDs.sort((a, b) => a - b);\n    for (let i = 0; i < recordIDs.length; i++) {\n      let id = recordIDs[i];\n\n      // Add alliance name, if the record has the id\n      if (indexedCorpHistory[id].alliance_id !== undefined) {\n        for (let name of names) {\n          if (name.id === indexedCorpHistory[id].alliance_id) {\n            indexedCorpHistory[id].alliance_name = name.name;\n            break;\n          }\n        }\n      }\n\n      // Add end date, if the current record is an alliance, and the following is not\n      if (\n        indexedCorpHistory[id].alliance_id !== undefined\n        && i < recordIDs.length - 1\n        && indexedCorpHistory[recordIDs[i + 1]].alliance_id === undefined\n      ) {\n        indexedCorpHistory[id].end_date = indexedCorpHistory[recordIDs[i + 1]].start_date;\n      }\n\n      // Add to the elements to return if it's an alliance\n      if (indexedCorpHistory[id].alliance_id !== undefined) {\n        historyToReturn.unshift(indexedCorpHistory[id]);\n      }\n    }\n\n    return historyToReturn;\n  }\n\n  private _pushUnique(inputArray: number[], value: number): number[] {\n    if (!inputArray.includes(value)) {\n      inputArray.push(value);\n    }\n\n    return inputArray;\n  }\n}\n\nexport default CorporationRepository;\n","import FactionRepositoryInterface from \"./FactionRepositoryInterface\";\nimport RepoFactionInterface from \"./RepoFactionInterface\";\nimport AbstractRepository from \"../AbstractRepository/AbstractRepository\";\nimport FactionCallInterface from \"../../service/Call/FactionCall/FactionCallInterface\";\nimport NameRepositoryInterface from \"../NameRepository/NameRepositoryInterface\";\nimport EsiUniverseNamesInterface from \"../../service/Call/UniverseNamesCall/EsiUniverseNamesInterface\";\nimport EsiFactionInterface from \"../../service/Call/FactionCall/EsiFactionInterface\";\n\nclass FactionRepository extends AbstractRepository implements FactionRepositoryInterface {\n  private readonly _factionCall;\n  private readonly _nameRepo;\n\n  constructor(\n    factionCall: FactionCallInterface,\n    nameRepo: NameRepositoryInterface\n  ) {\n    super();\n    this._factionCall = factionCall;\n    this._nameRepo = nameRepo;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getAll(): Promise<RepoFactionInterface[]> {\n    let esiFactions = await this._factionCall.get();\n    let idsToResolve: number[] = this._getIDsToResolve(esiFactions);\n    let indexedNames: {[key: string]: EsiUniverseNamesInterface} = {}\n    if (idsToResolve.length > 0) {\n      indexedNames = this._orderNamesByID(await this._nameRepo.resolveGeneric(idsToResolve));\n    }\n\n    let repoFactions: RepoFactionInterface[] = [];\n    esiFactions.forEach(esiFaction => {\n      repoFactions.push(this._assembleRepoFaction(esiFaction, indexedNames));\n    });\n\n    return repoFactions;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getOne(id: number): Promise<RepoFactionInterface> {\n    let foundFaction = await this._getEsiFaction(id);\n\n    let idsToResolve = this._getIDsToResolve([foundFaction]);\n    let indexedNames: {[key: string]: EsiUniverseNamesInterface} = {}\n    if (idsToResolve.length > 0) {\n      indexedNames = this._orderNamesByID(await this._nameRepo.resolveGeneric(idsToResolve));\n    }\n\n    return this._assembleRepoFaction(foundFaction, indexedNames);\n  }\n\n  /**\n   * @throws Error\n   */\n  public async getName(id: number): Promise<string> {\n    let foundFaction = await this._getEsiFaction(id);\n\n    return foundFaction.name;\n  }\n\n  /**\n   * @throws Error\n   */\n  private async _getEsiFaction(id: number): Promise<EsiFactionInterface> {\n    let esiFactions = await this._factionCall.get();\n    let foundFaction: EsiFactionInterface | null = null;\n    for (let esiFaction of esiFactions) {\n      if (esiFaction.faction_id === id) {\n        foundFaction = esiFaction;\n        break;\n      }\n    }\n    if (foundFaction === null) {\n      throw new Error(\"Faction not found\");\n    }\n\n    return foundFaction;\n  }\n\n  private _getIDsToResolve(factions: EsiFactionInterface[]): number[] {\n    let idsToResolve: number[] = [];\n\n    factions.forEach(faction => {\n      let {\n        corporation_id,\n        militia_corporation_id,\n        solar_system_id\n      } = faction;\n      if (corporation_id !== undefined) {\n        this._pushUnique(idsToResolve, corporation_id);\n      }\n      if (militia_corporation_id !== undefined) {\n        this._pushUnique(idsToResolve, militia_corporation_id);\n      }\n      if (solar_system_id !== undefined) {\n        this._pushUnique(idsToResolve, solar_system_id);\n      }\n    });\n\n    return idsToResolve;\n  }\n\n  private _assembleRepoFaction(\n    esiFaction: EsiFactionInterface,\n    indexedNames: {[key: string]: EsiUniverseNamesInterface}\n  ): RepoFactionInterface {\n    let {\n      corporation_id,\n      militia_corporation_id,\n      solar_system_id\n    } = esiFaction;\n\n    let corporation_name = undefined;\n    let militia_corporation_name = undefined;\n    let solar_system_name = undefined;\n\n    if (corporation_id !== undefined) {\n      corporation_name = indexedNames[corporation_id].name ?? \"#error\";\n    }\n    if (militia_corporation_id !== undefined) {\n      militia_corporation_name = indexedNames[militia_corporation_id].name ?? \"#error\";\n    }\n    if (solar_system_id !== undefined) {\n      solar_system_name = indexedNames[solar_system_id].name ?? \"#error\";\n    }\n\n    return {\n      ...esiFaction,\n      corporation_name: corporation_name,\n      militia_corporation_name: militia_corporation_name,\n      solar_system_name: solar_system_name\n    };\n  }\n}\n\nexport default FactionRepository;\n","import RSSRepositoryInterface from \"./RSSRepositoryInterface\";\nimport RSSFeedEntryInterface from \"./RSSFeedEntryInterface\";\n\nclass RSSRepository implements RSSRepositoryInterface {\n  public async getEveNewsFeed(): Promise<RSSFeedEntryInterface[]> {\n    return this._fetch(\"https://www.eveonline.com/rss/json/news\");\n  }\n\n  public async getDevBlogsFeed(): Promise<RSSFeedEntryInterface[]> {\n    return this._fetch(\"https://www.eveonline.com/rss/json/dev-blogs\");\n  }\n\n  public async getPatchNotesFeed(): Promise<RSSFeedEntryInterface[]> {\n    return this._fetch(\"https://www.eveonline.com/rss/json/patch-notes\");\n  }\n\n  private async _fetch(url: string): Promise<RSSFeedEntryInterface[]> {\n    let response = await fetch(\n      url,\n      {\n        cache: \"default\",\n      }\n    );\n\n    return response.json();\n  }\n}\n\nexport default RSSRepository;\n","import StatusRepositoryInterface from \"./StatusRepositoryInterface\";\nimport StatusCallInterface from \"../../service/Call/StatusCall/StatusCallInterface\";\n\nclass StatusRepository implements StatusRepositoryInterface {\n  private readonly _statusCall;\n\n  constructor(statusCall: StatusCallInterface) {\n    this._statusCall = statusCall;\n  }\n\n  /**\n   * @throws Error\n   */\n  public async isEveOnline(): Promise<boolean> {\n    let status = await this._statusCall.get();\n\n    return status.players > 100;\n  }\n}\n\nexport default StatusRepository;\n","import EntityManagerInterface from \"./EntityManagerInterface\";\nimport MigrationInterface from \"./Migration/MigrationInterface\";\n\nclass EntityManager implements EntityManagerInterface {\n  private _migrations: MigrationInterface[]\n\n  constructor(\n    migrations: MigrationInterface[]\n  ) {\n    this._migrations = migrations;\n  }\n\n  public async getConnection(): Promise<IDBDatabase> {\n    let dbName = \"evelook\";\n    let versions = [0, 1];\n\n    return new Promise((resolve, reject) => {\n      let dbReq = indexedDB.open(dbName, 1);\n\n      dbReq.onupgradeneeded = event => {\n        versions.forEach(version => {\n          if (event.oldVersion < version) {\n            this._migrations.forEach(migration => {\n              migration.run(dbReq.result, version);\n            });\n          }\n        });\n      };\n\n      dbReq.onsuccess = () => {\n        resolve(dbReq.result);\n\n        return;\n      };\n\n      dbReq.onblocked = () => {\n        reject(\"Database version can't be upgraded because the app is open somewhere else.\");\n      }\n\n      dbReq.onerror = () => {\n        let error = dbReq.error;\n        let message = \"Error opening database\";\n        if (error !== null) {\n          message += `: ${error.code} ${error.message} ${error.name}`;\n        }\n        reject(message);\n\n        return;\n      };\n    });\n  }\n}\n\nexport default EntityManager;\n","import MigrationInterface from \"./MigrationInterface\";\n\nclass MarketOrdersMigration implements MigrationInterface {\n  public run(db: IDBDatabase, version: number): void {\n    if (version < 1) {\n      let store = db.createObjectStore(\n        \"market_orders\",\n        {\n          keyPath: \"order_id\",\n          autoIncrement: false\n        }\n      );\n      store.createIndex(\"by_region\", \"region_id\");\n    }\n  }\n}\n\nexport default MarketOrdersMigration;\n","import MigrationInterface from \"./MigrationInterface\";\n\nclass SettingsMigration implements MigrationInterface {\n  public run(db: IDBDatabase, version: number): void {\n    if (version <= 1) {\n      let store = db.createObjectStore(\n        \"settings\",\n        {\n          keyPath: \"name\",\n          autoIncrement: false\n        }\n      );\n      store.add({ name: \"dark_mode\", value: false });\n    }\n  }\n}\n\nexport default SettingsMigration;\n","import EntityManagerInterface from \"../EntityManagerInterface\";\nimport BaseTable from \"./BaseTable\";\nimport SettingsTableInterface from \"./SettingsTableInterface\";\n\nclass SettingsTable extends BaseTable implements SettingsTableInterface {\n  public readonly name = \"settings\";\n\n  // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n  constructor(\n    em: EntityManagerInterface\n  ) {\n    super(em);\n  }\n}\n\nexport default SettingsTable;\n","import EntityManagerInterface from \"../EntityManagerInterface\";\nimport BaseTableInterface from \"./BaseTableInterface\";\n\nabstract class BaseTable implements BaseTableInterface {\n  abstract name: string;\n  private _em: EntityManagerInterface;\n\n  protected constructor(\n    em: EntityManagerInterface\n  ) {\n    this._em = em;\n  }\n\n  public async addOne(value: any, key?: any): Promise<void> {\n    return this.addMany([{value, key}]);\n  }\n\n  public async addMany(items: [{value: any, key?: any}]): Promise<void> {\n    let transaction = await this._getReadwriteTransaction();\n\n    return new Promise((resolve, reject) => {\n      let store = this._getObjectStore(transaction);\n      items.forEach(item => {\n        if (item.key === undefined) {\n          store.add(item.value);\n        } else {\n          store.add(item.value, item.key);\n        }\n      });\n\n      // \"oncomplete\" fires after all transaction completed successfully,\n      // unlike \"onsuccess\" which fires when some transaction may still fail\n      // after the event.\n      transaction.oncomplete = () => {\n        resolve();\n      };\n\n      transaction.onerror = () => {\n        reject(this._getErrorMessage(transaction.error));\n      };\n    });\n  }\n\n  public async clear(): Promise<void> {\n    let transaction = await this._getReadwriteTransaction();\n\n    return new Promise((resolve, reject) => {\n      let store = this._getObjectStore(transaction);\n      store.clear();\n\n      transaction.oncomplete = () => {\n        resolve();\n      }\n\n      transaction.onerror = () => {\n        reject(this._getErrorMessage(transaction.error));\n      };\n    });\n  }\n\n  // TODO: also in index\n  public async count(key?: IDBValidKey | IDBKeyRange): Promise<number> {\n    let transaction = await this._getReadonlyTransaction();\n\n    return new Promise((resolve, reject) => {\n      let store = this._getObjectStore(transaction);\n      let request = store.count(key);\n\n      request.onsuccess = () => {\n        resolve(request.result);\n      }\n\n      request.onerror = () => {\n        reject(this._getErrorMessage(request.error));\n      }\n    });\n  }\n\n  public async delete(key: IDBValidKey | IDBKeyRange): Promise<void> {\n    let transaction = await this._getReadwriteTransaction();\n\n    return new Promise((resolve, reject) => {\n      let store = this._getObjectStore(transaction);\n      store.delete(key);\n\n      transaction.oncomplete = () => {\n        resolve();\n      }\n\n      transaction.onerror = () => {\n        reject(this._getErrorMessage(transaction.error));\n      };\n    });\n  }\n\n  public async getOne<T>(key: IDBValidKey): Promise<T | undefined> {\n    return await this._get(key) as T;\n  }\n\n  public async getRange<T>(keyRange: IDBKeyRange): Promise<T[] | undefined> {\n    return await this._get(keyRange) as T[];\n  }\n\n  // fixme\n  public async getAll(): Promise<void> {\n    let transaction = await this._getReadonlyTransaction();\n\n    return new Promise((resolve, reject) => {\n      let store = this._getObjectStore(transaction);\n      store.getAll()\n      // fixme continue here\n    });\n  }\n\n  public async putOne<T>(value: T, key?: IDBValidKey): Promise<void> {\n    return this.putMany([{ value, key }]);\n  }\n\n  public async putMany<T>(items: [{ value: T, key?: IDBValidKey }]): Promise<void> {\n    let transaction = await this._getReadwriteTransaction()\n\n    return new Promise((resolve, reject) => {\n      let store = this._getObjectStore(transaction);\n      items.forEach(item => {\n        if (item.key === undefined) {\n          store.put(item.value);\n        } else {\n          store.put(item.value, item.key);\n        }\n      });\n\n      // \"oncomplete\" fires after all transaction completed successfully,\n      // unlike \"onsuccess\" which fires when some transaction may still fail\n      // after the event.\n      transaction.oncomplete = () => {\n        resolve();\n      };\n\n      transaction.onerror = () => {\n        reject(this._getErrorMessage(transaction.error));\n      };\n    });\n  }\n\n  private async _get<T>(query: IDBValidKey | IDBKeyRange): Promise<T|T[]> {\n    let transaction = await this._getReadonlyTransaction();\n\n    return new Promise((resolve, reject) => {\n      let store = this._getObjectStore(transaction);\n      let request = store.get(query);\n\n      request.onsuccess = () => {\n        resolve(request.result);\n      }\n\n      transaction.onerror = () => {\n        reject(this._getErrorMessage(transaction.error));\n      };\n    });\n  }\n\n  private async _getReadonlyTransaction(): Promise<IDBTransaction> {\n    let connection = await this._em.getConnection();\n\n    return connection.transaction([this.name], \"readonly\");\n  }\n\n  private async _getReadwriteTransaction(): Promise<IDBTransaction> {\n    let connection = await this._em.getConnection();\n\n    return connection.transaction([this.name], \"readwrite\");\n  }\n\n  private _getObjectStore(transaction: IDBTransaction): IDBObjectStore {\n    return transaction.objectStore(this.name);\n  }\n\n  private _getErrorMessage(error: DOMException | null): string {\n    let message = \"Database error\";\n    if (error !== null) {\n      message = `Error: ${error.code} ${error.message} ${error.name}`;\n    }\n\n    return message;\n  }\n};\n\nexport default BaseTable;\n","export const KEY_DARK_MODE = \"dark_mode\";\n\ninterface SettingsStoreInterface {\n  name: typeof KEY_DARK_MODE,\n  value: any\n}\n\nexport default SettingsStoreInterface;\n","import SettingsRepositoryInterface from \"./SettingsRepositoryInterface\";\nimport SettingsTableInterface from \"../../service/EntityManager/Table/SettingsTableInterface\";\nimport SettingsStoreInterface, { KEY_DARK_MODE } from \"../../service/EntityManager/Store/SettingsStoreInterface\";\n\nclass SettingsRepository implements SettingsRepositoryInterface {\n  private _settingsTable;\n\n  constructor(settingsTable: SettingsTableInterface) {\n    this._settingsTable = settingsTable;\n  }\n\n  public async getDarkMode(): Promise<boolean> {\n    let item = await this._settingsTable.getOne<SettingsStoreInterface>(KEY_DARK_MODE);\n    if (item === undefined) {\n      return false;\n    }\n\n    return item.value;\n  }\n\n  public async setDarkMode(value: boolean): Promise<void> {\n    await this._settingsTable.putOne<SettingsStoreInterface>({ name: KEY_DARK_MODE, value: value });\n  }\n}\n\nexport default SettingsRepository;\n","import EsiProxyInterface from \"./EsiProxyInterface\";\nimport EsiErrorManagerInterface from \"../EsiErrorManager/EsiErrorManagerInterface\";\n\n/**\n * This class is used as a proxy for \"fetch\" inside the service worker, to keep\n * track globally (even if multiple tabs are open) of the error window.\n */\nclass EsiProxy implements EsiProxyInterface {\n  private readonly _fetchClient;\n  private readonly _esiErrorManager;\n\n  constructor(\n    fetchClient: (\n      input: RequestInfo,\n      init?: RequestInit\n    ) => Promise<Response>,\n    esiErrorManager: EsiErrorManagerInterface\n  ) {\n    this._fetchClient = fetchClient;\n    this._esiErrorManager = esiErrorManager;\n  }\n\n  public async getResponse(\n    request: Request\n  ): Promise<Response> {\n    if (this._esiErrorManager.isErrorWindowBroken()) {\n      return new Response(\n        null,\n        {\n          status: 420,\n          statusText: \"Error window broken, request blocked by service worker\"\n        }\n      );\n    }\n\n    // Default response, this will be returned in case of network error.\n    let response = new Response(\n      null,\n      {\n        status: 502,\n        statusText: \"Network error inside the service worker\"\n      }\n    );\n\n    try {\n      response = await this._fetchClient(request);\n      this._esiErrorManager.saveErrorWindowInfo(response.headers);\n      if (!response.ok) {\n        if (response.status === 420) {  // We are error limited\n          this._esiErrorManager.flagWindowAsBroken();\n        } else {\n          this._esiErrorManager.incrementError();\n        }\n      }\n    } catch(e) {\n      this._esiErrorManager.incrementError();\n    }\n\n    return response;\n  }\n}\n\nexport default EsiProxy;\n","// Intentionally not using an interface\nclass PathGenerator {\n  public readonly base = {\n    allianceList: \"/alliance/\",\n    allianceInfo: \"/alliance/:id\",\n    ancestryInfo: \"/ancestry/:id\",\n    bloodlineInfo: \"/bloodline/:id\",\n    characterInfo: \"/character/:id\",\n    constellationInfo: \"/constellation/:id\",\n    corporationInfo: \"/corporation/:id\",\n    factionInfo: \"/faction/:id\",\n    home: \"/\",\n    raceInfo: \"/race/:id\",\n    regionInfo: \"/region/:id\",\n    search: \"/search\",\n    systemInfo: \"/system/:id\",\n    stationInfo: \"/station/:id\",\n    test: \"/test\",\n    typeInfo: \"/type/:id\",\n  };\n  private readonly _idPlaceholder = \":id\";\n\n  public allianceInfo(id: string): string {\n    return this.base.allianceInfo.replace(this._idPlaceholder, id);\n  }\n\n  public allianceList(): string {\n    return this.base.allianceList;\n  }\n\n  public characterInfo(id: string): string {\n    return this.base.characterInfo.replace(this._idPlaceholder, id);\n  }\n\n  public corporationInfo(id: string): string {\n    return this.base.corporationInfo.replace(this._idPlaceholder, id);\n  }\n}\n\nexport default PathGenerator;\n","import EsiClient from \"../EsiClient/EsiClient\";\nimport EsiErrorManagerInterface from \"../EsiErrorManager/EsiErrorManagerInterface\";\nimport EsiErrorManager from \"../EsiErrorManager/EsiErrorManager\";\nimport QueryFactoryInterface from \"../QueryFactory/QueryFactoryInterface\";\nimport QueryFactory from \"../QueryFactory/QueryFactory\";\nimport StatusCall from \"../Call/StatusCall/StatusCall\";\nimport StatusCallInterface from \"../Call/StatusCall/StatusCallInterface\";\nimport UniverseNamesCallInterface from \"../Call/UniverseNamesCall/UniverseNamesCallInterface\";\nimport UniverseNamesCall from \"../Call/UniverseNamesCall/UniverseNamesCall\";\nimport AllianceListCallInterface from \"../Call/AllianceListCall/AllianceListCallInterface\";\nimport AllianceListCall from \"../Call/AllianceListCall/AllianceListCall\";\nimport AllianceInfoCallInterface from \"../Call/AllianceInfoCall/AllianceInfoCallInterface\";\nimport AllianceInfoCall from \"../Call/AllianceInfoCall/AllianceInfoCall\";\nimport NameRepositoryInterface from \"../../repository/NameRepository/NameRepositoryInterface\";\nimport NameRepository from \"../../repository/NameRepository/NameRepository\";\nimport AllianceCorporationsCallInterface from \"../Call/AllianceCorporationsCall/AllianceCorporationsCallInterface\";\nimport AllianceCorporationsCall from \"../Call/AllianceCorporationsCall/AllianceCorporationsCall\";\nimport PublicSearchCallInterface from \"../Call/PublicSearchCall/PublicSearchCallInterface\";\nimport PublicSearchCall from \"../Call/PublicSearchCall/PublicSearchCall\";\nimport AllianceRepositoryInterface from \"../../repository/AllianceRepository/AllianceRepositoryInterface\";\nimport AllianceRepository from \"../../repository/AllianceRepository/AllianceRepository\";\nimport SearchRepositoryInterface from \"../../repository/SearchRepository/SearchRepositoryInterface\";\nimport SearchRepository from \"../../repository/SearchRepository/SearchRepository\";\nimport CharacterInfoCallInterface from \"../Call/CharacterInfoCall/CharacterInfoCallInterface\";\nimport CharacterInfoCall from \"../Call/CharacterInfoCall/CharacterInfoCall\";\nimport ConstellationInfoCallInterface from \"../Call/ConstellationInfoCall/ConstellationInfoCallInterface\";\nimport ConstellationInfoCall from \"../Call/ConstellationInfoCall/ConstellationInfoCall\";\nimport CorporationInfoCall from \"../Call/CorporationInfoCall/CorporationInfoCall\";\nimport TypeInfoCallInterface from \"../Call/TypeInfoCall/TypeInfoCallInterface\";\nimport TypeInfoCall from \"../Call/TypeInfoCall/TypeInfoCall\";\nimport RegionInfoCallInterface from \"../Call/RegionInfoCall/RegionInfoCallInterface\";\nimport RegionInfoCall from \"../Call/RegionInfoCall/RegionInfoCall\";\nimport SystemInfoCallInterface from \"../Call/SystemInfoCall/SystemInfoCallInterface\";\nimport SystemInfoCall from \"../Call/SystemInfoCall/SystemInfoCall\";\nimport StationInfoCall from \"../Call/StationInfoCall/StationInfoCall\";\nimport StationInfoCallInterface from \"../Call/StationInfoCall/StationInfoCallInterface\";\nimport FactionCallInterface from \"../Call/FactionCall/FactionCallInterface\";\nimport CorporationInfoCallInterface from \"../Call/CorporationInfoCall/CorporationInfoCallInterface\";\nimport FactionCall from \"../Call/FactionCall/FactionCall\";\nimport AncestryCallInterface from \"../Call/AncestryCall/AncestryCallInterface\";\nimport AncestryCall from \"../Call/AncestryCall/AncestryCall\";\nimport BloodlineCallInterface from \"../Call/BloodlineCall/BloodlineCallInterface\";\nimport BloodlineCall from \"../Call/BloodlineCall/BloodlineCall\";\nimport AncestryRepositoryInterface from \"../../repository/AncestryRepository/AncestryRepositoryInterface\";\nimport AncestryRepository from \"../../repository/AncestryRepository/AncestryRepository\";\nimport BloodlineRepositoryInterface from \"../../repository/BloodlineRepository/BloodlineRepositoryInterface\";\nimport BloodlineRepository from \"../../repository/BloodlineRepository/BloodlineRepository\";\nimport CharacterRepository from \"../../repository/CharacterRepository/CharacterRepository\";\nimport CharacterRepositoryInterface from \"../../repository/CharacterRepository/CharacterRepositoryInterface\";\nimport RaceCallInterface from \"../Call/RaceCall/RaceCallInterface\";\nimport RaceCall from \"../Call/RaceCall/RaceCall\";\nimport RaceRepositoryInterface from \"../../repository/RaceRepository/RaceRepositoryInterface\";\nimport RaceRepository from \"../../repository/RaceRepository/RaceRepository\";\nimport CharacterCorpHistoryCallInterface from \"../Call/CharacterCorpHistoryCall/CharacterCorpHistoryCallInterface\";\nimport CharacterCorpHistoryCall from \"../Call/CharacterCorpHistoryCall/CharacterCorpHistoryCall\";\nimport DateFormatterInterface from \"../DateFormatter/DateFormatterInterface\";\nimport DateFormatter from \"../DateFormatter/DateFormatter\";\nimport CorporationAllianceHistoryCallInterface\n  from \"../Call/CorporationAllianceHistoryCall/CorporationAllianceHistoryCallInterface\";\nimport CorporationAllianceHistoryCall from \"../Call/CorporationAllianceHistoryCall/CorporationAllianceHistoryCall\";\nimport CorporationRepositoryInterface from \"../../repository/CorporationRepository/CorporationRepositoryInterface\";\nimport CorporationRepository from \"../../repository/CorporationRepository/CorporationRepository\";\nimport FactionRepositoryInterface from \"../../repository/FactionRepository/FactionRepositoryInterface\";\nimport FactionRepository from \"../../repository/FactionRepository/FactionRepository\";\nimport RSSRepositoryInterface from \"../../repository/RSSRepository/RSSRepositoryInterface\";\nimport RSSRepository from \"../../repository/RSSRepository/RSSRepository\";\nimport StatusRepositoryInterface from \"../../repository/StatusRepository/StatusRepositoryInterface\";\nimport StatusRepository from \"../../repository/StatusRepository/StatusRepository\";\nimport EntityManagerInterface from \"../EntityManager/EntityManagerInterface\";\nimport EntityManager from \"../EntityManager/EntityManager\";\nimport MarketOrdersMigration from \"../EntityManager/Migration/MarketOrdersMigration\";\nimport SettingsMigration from \"../EntityManager/Migration/SettingsMigration\";\nimport SettingsTable from \"../EntityManager/Table/SettingsTable\";\nimport SettingsTableInterface from \"../EntityManager/Table/SettingsTableInterface\";\nimport SettingsRepositoryInterface from \"../../repository/SettingsRepository/SettingsRepositoryInterface\";\nimport SettingsRepository from \"../../repository/SettingsRepository/SettingsRepository\";\nimport EsiProxyInterface from \"../EsiProxy/EsiProxyInterface\";\nimport EsiProxy from \"../EsiProxy/EsiProxy\";\nimport PathGenerator from \"../PathGenerator/PathGenerator\";\n\nclass Container {\n  private _esi: EsiClient | null = null;\n  private _esiProxy: EsiProxyInterface | null = null;\n  private _esiErrorManager: EsiErrorManagerInterface | null = null;\n  private _pathGenerator: PathGenerator | null = null;\n\n  get dateFormatter(): DateFormatterInterface {\n    return new DateFormatter();\n  }\n\n  get entityManager(): EntityManagerInterface {\n    return new EntityManager(\n      [\n        new MarketOrdersMigration(),\n        new SettingsMigration()\n      ]\n    );\n  }\n\n  get esi(): EsiClient {\n    if (this._esi === null) {\n      this._esi = new EsiClient(\n        (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n          return fetch(input, init);\n        },\n        this.esiErrorManager\n      );\n    }\n\n    return this._esi;\n  }\n\n  get esiErrorManager(): EsiErrorManagerInterface {\n    if (this._esiErrorManager === null) {\n      this._esiErrorManager = new EsiErrorManager();\n    }\n\n    return this._esiErrorManager;\n  }\n\n  get esiProxy(): EsiProxyInterface {\n    if (this._esiProxy === null) {\n      this._esiProxy = new EsiProxy(\n        (input: RequestInfo, init?: RequestInit): Promise<Response> => {\n          return fetch(input, init);\n        },\n        this.esiErrorManager\n      );\n    }\n\n    return this._esiProxy;\n  }\n\n  get pathGenerator(): PathGenerator {\n    if (this._pathGenerator === null) {\n      this._pathGenerator = new PathGenerator();\n    }\n\n    return this._pathGenerator;\n  }\n\n  get queryFactory(): QueryFactoryInterface {\n    return new QueryFactory();\n  }\n\n  // CALL //-------------------------------------------------------------------\n\n  get allianceCorporationsCall(): AllianceCorporationsCallInterface {\n    return new AllianceCorporationsCall(this.esi);\n  }\n\n  get allianceInfoCall(): AllianceInfoCallInterface {\n    return new AllianceInfoCall(this.esi);\n  }\n\n  get allianceListCall(): AllianceListCallInterface {\n    return new AllianceListCall(this.esi);\n  }\n\n  get ancestryCall(): AncestryCallInterface {\n    return new AncestryCall(this.esi);\n  }\n\n  get bloodlineCall(): BloodlineCallInterface {\n    return new BloodlineCall(this.esi);\n  }\n\n  get characterCorpHistoryCall(): CharacterCorpHistoryCallInterface {\n    return new CharacterCorpHistoryCall(this.esi);\n  }\n\n  get characterInfoCall(): CharacterInfoCallInterface {\n    return new CharacterInfoCall(this.esi);\n  }\n\n  get constellationInfoCall(): ConstellationInfoCallInterface {\n    return new ConstellationInfoCall(this.esi);\n  }\n\n  get corporationAllianceHistoryCall(): CorporationAllianceHistoryCallInterface {\n    return new CorporationAllianceHistoryCall(this.esi);\n  }\n\n  get corporationInfoCall(): CorporationInfoCallInterface {\n    return new CorporationInfoCall(this.esi);\n  }\n\n  get factionCall(): FactionCallInterface {\n    return new FactionCall(this.esi);\n  }\n\n  get publicSearchCall(): PublicSearchCallInterface {\n    return new PublicSearchCall(this.esi, this.queryFactory);\n  }\n\n  get raceCall(): RaceCallInterface {\n    return new RaceCall(this.esi);\n  }\n\n  get regionInfoCall(): RegionInfoCallInterface {\n    return new RegionInfoCall(this.esi);\n  }\n\n  get statusCall(): StatusCallInterface {\n    return new StatusCall(this.esi);\n  }\n\n  get stationInfoCall(): StationInfoCallInterface {\n    return new StationInfoCall(this.esi);\n  }\n\n  get systemInfoCall(): SystemInfoCallInterface {\n    return new SystemInfoCall(this.esi);\n  }\n\n  get typeInfoCall(): TypeInfoCallInterface {\n    return new TypeInfoCall(this.esi);\n  }\n\n  get universeNamesCall(): UniverseNamesCallInterface {\n    return new UniverseNamesCall(this.esi);\n  }\n\n  // CALL - END // ------------------------------------------------------------\n\n  // REPOSITORY //-------------------------------------------------------------\n\n  get allianceRepository(): AllianceRepositoryInterface {\n    return new AllianceRepository(\n      this.allianceListCall,\n      this.allianceInfoCall,\n      this.allianceCorporationsCall,\n      this.nameRepository\n    );\n  }\n\n  get ancestryRepository(): AncestryRepositoryInterface {\n    return new AncestryRepository(this.ancestryCall);\n  }\n\n  get bloodlineRepository(): BloodlineRepositoryInterface {\n    return new BloodlineRepository(\n      this.bloodlineCall,\n      this.raceRepository,\n      this.nameRepository\n    );\n  }\n\n  get characterRepository(): CharacterRepositoryInterface {\n    return new CharacterRepository(\n      this.characterInfoCall,\n      this.characterCorpHistoryCall,\n      this.ancestryRepository,\n      this.bloodlineRepository,\n      this.nameRepository,\n      this.raceRepository\n    );\n  }\n\n  get corporationRepository(): CorporationRepositoryInterface {\n    return new CorporationRepository(\n      this.corporationInfoCall,\n      this.corporationAllianceHistoryCall,\n      this.nameRepository\n    );\n  }\n\n  get factionRepository(): FactionRepositoryInterface {\n    return new FactionRepository(\n      this.factionCall,\n      this.nameRepository\n    );\n  }\n\n  get nameRepository(): NameRepositoryInterface {\n    return new NameRepository(this.universeNamesCall);\n  }\n\n  get raceRepository(): RaceRepositoryInterface {\n    return new RaceRepository(\n      this.raceCall,\n      this.nameRepository,\n      this.factionRepository\n    );\n  }\n\n  get rssRepository(): RSSRepositoryInterface {\n    return new RSSRepository();\n  }\n\n  get searchRepository(): SearchRepositoryInterface {\n    return new SearchRepository(\n      this.nameRepository,\n      this.publicSearchCall,\n      this.pathGenerator\n    );\n  }\n\n  get settingsRepository(): SettingsRepositoryInterface {\n    return new SettingsRepository(this.settingsTable);\n  }\n\n  get statusRepository(): StatusRepositoryInterface {\n    return new StatusRepository(this.statusCall);\n  }\n\n  // REPOSITORY - END // ------------------------------------------------------\n\n  // TABLE //------------------------------------------------------------------\n\n  get settingsTable(): SettingsTableInterface {\n    return new SettingsTable(this.entityManager);\n  }\n}\n\nexport default Container;\n","const initialState = {\n  mobileOpen: false,\n}\n\nexport default function drawerReducer(\n  state = initialState,\n  action: {type: string, payload?: any}\n) {\n  switch (action.type) {\n    case 'drawer/mobileOpen': {\n      return {\n        ...state,\n        mobileOpen: true,\n      };\n    }\n    case 'drawer/mobileClose': {\n      return {\n        ...state,\n        mobileOpen: false\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { THEME_CHANGE_MODE, THEME_SET_MODE } from \"./themeActions\";\n\nconst initialState = {\n  darkMode: false,\n}\n\nexport default function themeReducer(\n  state = initialState,\n  action: {type: string, payload?: any}\n) {\n  switch (action.type) {\n    case THEME_CHANGE_MODE: {\n      return {\n        ...state,\n        darkMode: !state.darkMode,\n      };\n    }\n    case THEME_SET_MODE: {\n      return {\n        ...state,\n        darkMode: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n}","import { ENQUEUE_SNACKBAR, CLOSE_ONE, CLOSE_ALL, REMOVE_SNACKBAR } from './notifierActions';\nimport ReduxNotificationInterface from \"./ReduxNotificationInterface\";\nimport NotifierStateInterface from \"./NotifierStateInterface\";\n\ntype NotifierAction = {\n  type: string,\n  notification?: ReduxNotificationInterface,\n  key?: number\n};\n\nconst initialState: NotifierStateInterface = {\n  notifications: [],\n};\n\nexport default function notifierReducer(\n  state: NotifierStateInterface = initialState,\n  action: NotifierAction\n): NotifierStateInterface {\n  switch (action.type) {\n    case ENQUEUE_SNACKBAR:\n      let actionNotification = action.notification as ReduxNotificationInterface;\n      return {\n        ...state,\n        notifications: [\n          ...state.notifications,\n          {\n            ...actionNotification,\n          },\n        ],\n      };\n    case CLOSE_ONE:\n      return {\n        ...state,\n        notifications: state.notifications.map(notification => ({\n          ...notification,\n          dismissed: notification.key === action.key\n        })),\n      };\n    case CLOSE_ALL:\n      return {\n        ...state,\n        notifications: state.notifications.map(notification => ({\n          ...notification,\n          dismissed: true\n        })),\n      };\n    case REMOVE_SNACKBAR:\n      return {\n        ...state,\n        notifications: state.notifications.filter(\n          notification => notification.key !== action.key,\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\n\nimport drawerReducer from './feature/drawer/drawerSlice';\nimport themeReducer from './feature/theme/themeSlice';\nimport notifierReducer from \"./feature/notifier/notifierSlice\";\n\nconst rootReducer = combineReducers({\n  // keys of this object will become the keys of the root state object\n  drawer: drawerReducer,\n  theme: themeReducer,\n  notifier: notifierReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport Container from \"./service/Container/Container\";\nimport rootReducer from \"./reducer\";\n\n\nexport const container = new Container();\n\nexport const store = createStore(\n  rootReducer,\n  applyMiddleware(thunk.withExtraArgument(container))\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MyApp from \"./component/MyApp/MyApp\";\nimport { store, container } from \"./store\";\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from \"react-router-dom\";\nimport '@fontsource/roboto';\nimport { SnackbarProvider } from 'notistack';\n\nimport { DepsProvider } from \"./context/DepsContext/DepsContext\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <DepsProvider container={container}>\n        <HashRouter>\n          <SnackbarProvider maxSnack={3}>\n            <MyApp />\n          </SnackbarProvider>\n        </HashRouter>\n      </DepsProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}